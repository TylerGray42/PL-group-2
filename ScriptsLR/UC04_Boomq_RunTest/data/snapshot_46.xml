<?xml version="1.0" encoding="utf-8"?>
<HTTPSnapshot xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" id="46">
  <HTTPTask id="1009" hostname="dev-boomq.pflb.ru" path="https://dev-boomq.pflb.ru/grafana/api/dashboards/uid/ca51acaf-9803-4ad8-b507-923b152a1ca9" url="https://dev-boomq.pflb.ru/grafana/api/dashboards/uid/ca51acaf-9803-4ad8-b507-923b152a1ca9" ip="77.50.236.214" port="443" connectionId="106" origin="Primary" frame="1" startDateTime="2024-08-26T15:36:35.796+03:00" startTime="63900828" endTime="63900843">
    <HTTPRequest method="GET">
      <HTTPHeaders>
        <HTTPHeaderEntity name="sec-ch-ua" index="0">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>IkNocm9taXVtIjt2PSIxMjgiLCAiTm90O0E9QnJhbmQiO3Y9IjI0IiwgIk1pY3Jvc29mdCBFZGdlIjt2PSIxMjgi</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Accept" index="1">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>YXBwbGljYXRpb24vanNvbiwgdGV4dC9wbGFpbiwgKi8q</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="x-grafana-org-id" index="2">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>MTQ=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="sec-ch-ua-mobile" index="3">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>PzA=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="User-Agent" index="4">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>TW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV2luNjQ7IHg2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzEyOC4wLjAuMCBTYWZhcmkvNTM3LjM2IEVkZy8xMjguMC4wLjA=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="sec-ch-ua-platform" index="5">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>IldpbmRvd3Mi</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Sec-Fetch-Site" index="6">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>c2FtZS1vcmlnaW4=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Sec-Fetch-Mode" index="7">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>Y29ycw==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Sec-Fetch-Dest" index="8">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>ZW1wdHk=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Referer" index="9">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>aHR0cHM6Ly9kZXYtYm9vbXEucGZsYi5ydS9ncmFmYW5hL2QvY2E1MWFjYWYtOTgwMy00YWQ4LWI1MDctOTIzYjE1MmExY2E5L2NvbW1vbi1kYXNoYm9hcmQtdGRiLTEzP2Zyb209MTcyNDY3NTY3MDYxMSZ0bz0xNzI0Njc5MzkwNjExJnJlZnJlc2g9NXMmdmFyLXRlc3RJZD0xODI2OA==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Accept-Encoding" index="10">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>Z3ppcCwgZGVmbGF0ZSwgenN0ZA==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Accept-Language" index="11">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>cnU=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Cookie" index="12">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>Z3JhZmFuYV9zZXNzaW9uX2V4cGlyeT0xNzI0Njc2MjkyOyBncmFmYW5hX3Nlc3Npb249ZWIwMWJjNzMwNjgzNzdkMDEzZmIyMTUzYWExMDQ0ZDc7IGJvb21xX2F1dGg9ZXlKaGJHY2lPaUpTVXpJMU5pSXNJblI1Y0NJNklrcFhWQ0o5LmV5SnBjMTl1YjNScFptbGpZWFJsWkNJNmRISjFaU3dpZFhObGNsOXBaQ0k2TVRnM05Td2lkWE5sY2w5dVlXMWxJam9pYTI5ZmJHVnplV0ZBYldGcGJDNXlkU0lzSW5OamIzQmxJanBiSW5SeWRYTjBJaXdpY21WaFpDSXNJbmR5YVhSbElsMHNJblZ6WlhKZmJHRnVaM1ZoWjJVaU9pSlNWU0lzSW1WNGNDSTZNVGN5TkRjeE9EY3hOeXdpWVhWMGFHOXlhWFJwWlhNaU9sc2lVazlNUlY5VlUwVlNJbDBzSW1wMGFTSTZJamcxTVdGak1UUTJMVGcyT1RndE5HRmpNaTFoTWprd0xUWTBPV0V4Tm1FME5XRTNNU0lzSW1Oc2FXVnVkRjlwWkNJNkltTnNhV1Z1ZENKOS5zbk9JQU0xWjh3TXVVbFlRQXVoYXFvQWNhNS11T2VtQ0Rhd0hVbG1YcUpLa29Ob1ZvOGdSbmRfT1htSDJwcld3M0VKU2prSktjTFRWbGtoaFpxU1o2Z3Y2c2c2UXVWdUFISHJkWUVqUmVHZ1Uxa240S3cwZUFJZU91YjZvQVV1ZVU1ZXA2SjRWX3U0MWp5ODM5UkNKMWtQalhIdGlBVUtWbTZJR1ZIR1NGQWd2Wmt2amZyOE9rZWFHS215VGpWTG5MNXFBQUhtQ0dydFd1TkloRXR4bHlIMy16UTdNcERhM0NDcGlMWGtIdXBlM3BWMkdaaGFHY29reDlBTzNLUkE2UGppUGhiVWVzWkVPaUQ1OHBMYUZiZUQ1NEFneHdISGlJVXVHcTdXUUlrVm9CTFFuaGROMXFxMlAxOHlwT1EtM2Y1V3pqZ2pLZUdMV1FXTjZEYnBJaWc=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Host" index="13">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>ZGV2LWJvb21xLnBmbGIucnU=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPAllHeaders>
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>R0VUIGh0dHBzOi8vZGV2LWJvb21xLnBmbGIucnUvZ3JhZmFuYS9hcGkvZGFzaGJvYXJkcy91aWQvY2E1MWFjYWYtOTgwMy00YWQ4LWI1MDctOTIzYjE1MmExY2E5IEhUVFAvMS4xDQpzZWMtY2gtdWE6ICJDaHJvbWl1bSI7dj0iMTI4IiwgIk5vdDtBPUJyYW5kIjt2PSIyNCIsICJNaWNyb3NvZnQgRWRnZSI7dj0iMTI4Ig0KQWNjZXB0OiBhcHBsaWNhdGlvbi9qc29uLCB0ZXh0L3BsYWluLCAqLyoNCngtZ3JhZmFuYS1vcmctaWQ6IDE0DQpzZWMtY2gtdWEtbW9iaWxlOiA/MA0KVXNlci1BZ2VudDogTW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV2luNjQ7IHg2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzEyOC4wLjAuMCBTYWZhcmkvNTM3LjM2IEVkZy8xMjguMC4wLjANCnNlYy1jaC11YS1wbGF0Zm9ybTogIldpbmRvd3MiDQpTZWMtRmV0Y2gtU2l0ZTogc2FtZS1vcmlnaW4NClNlYy1GZXRjaC1Nb2RlOiBjb3JzDQpTZWMtRmV0Y2gtRGVzdDogZW1wdHkNClJlZmVyZXI6IGh0dHBzOi8vZGV2LWJvb21xLnBmbGIucnUvZ3JhZmFuYS9kL2NhNTFhY2FmLTk4MDMtNGFkOC1iNTA3LTkyM2IxNTJhMWNhOS9jb21tb24tZGFzaGJvYXJkLXRkYi0xMz9mcm9tPTE3MjQ2NzU2NzA2MTEmdG89MTcyNDY3OTM5MDYxMSZyZWZyZXNoPTVzJnZhci10ZXN0SWQ9MTgyNjgNCkFjY2VwdC1FbmNvZGluZzogZ3ppcCwgZGVmbGF0ZSwgenN0ZA0KQWNjZXB0LUxhbmd1YWdlOiBydQ0KQ29va2llOiBncmFmYW5hX3Nlc3Npb25fZXhwaXJ5PTE3MjQ2NzYyOTI7IGdyYWZhbmFfc2Vzc2lvbj1lYjAxYmM3MzA2ODM3N2QwMTNmYjIxNTNhYTEwNDRkNzsgYm9vbXFfYXV0aD1leUpoYkdjaU9pSlNVekkxTmlJc0luUjVjQ0k2SWtwWFZDSjkuZXlKcGMxOXViM1JwWm1sallYUmxaQ0k2ZEhKMVpTd2lkWE5sY2w5cFpDSTZNVGczTlN3aWRYTmxjbDl1WVcxbElqb2lhMjlmYkdWemVXRkFiV0ZwYkM1eWRTSXNJbk5qYjNCbElqcGJJblJ5ZFhOMElpd2ljbVZoWkNJc0luZHlhWFJsSWwwc0luVnpaWEpmYkdGdVozVmhaMlVpT2lKU1ZTSXNJbVY0Y0NJNk1UY3lORGN4T0RjeE55d2lZWFYwYUc5eWFYUnBaWE1pT2xzaVVrOU1SVjlWVTBWU0lsMHNJbXAwYVNJNklqZzFNV0ZqTVRRMkxUZzJPVGd0TkdGak1pMWhNamt3TFRZME9XRXhObUUwTldFM01TSXNJbU5zYVdWdWRGOXBaQ0k2SW1Oc2FXVnVkQ0o5LnNuT0lBTTFaOHdNdVVsWVFBdWhhcW9BY2E1LXVPZW1DRGF3SFVsbVhxSktrb05vVm84Z1JuZF9PWG1IMnByV3czRUpTamtKS2NMVFZsa2hoWnFTWjZndjZzZzZRdVZ1QUhIcmRZRWpSZUdnVTFrbjRLdzBlQUllT3ViNm9BVXVlVTVlcDZKNFZfdTQxank4MzlSQ0oxa1BqWEh0aUFVS1ZtNklHVkhHU0ZBZ3Zaa3ZqZnI4T2tlYUdLbXlUalZMbkw1cUFBSG1DR3J0V3VOSWhFdHhseUgzLXpRN01wRGEzQ0NwaUxYa0h1cGUzcFYyR1poYUdjb2t4OUFPM0tSQTZQamlQaGJVZXNaRU9pRDU4cExhRmJlRDU0QWd4d0hIaUlVdUdxN1dRSWtWb0JMUW5oZE4xcXEyUDE4eXBPUS0zZjVXempnaktlR0xXUVdONkRicElpZw0KSG9zdDogZGV2LWJvb21xLnBmbGIucnUNCg0K</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPAllHeaders>
        <HTTPCookies>
          <HTTPHeaderEntity name="grafana_session_expiry" index="0">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>MTcyNDY3NjI5Mg==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="grafana_session" index="1">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>ZWIwMWJjNzMwNjgzNzdkMDEzZmIyMTUzYWExMDQ0ZDc=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="boomq_auth" index="2">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>ZXlKaGJHY2lPaUpTVXpJMU5pSXNJblI1Y0NJNklrcFhWQ0o5LmV5SnBjMTl1YjNScFptbGpZWFJsWkNJNmRISjFaU3dpZFhObGNsOXBaQ0k2TVRnM05Td2lkWE5sY2w5dVlXMWxJam9pYTI5ZmJHVnplV0ZBYldGcGJDNXlkU0lzSW5OamIzQmxJanBiSW5SeWRYTjBJaXdpY21WaFpDSXNJbmR5YVhSbElsMHNJblZ6WlhKZmJHRnVaM1ZoWjJVaU9pSlNWU0lzSW1WNGNDSTZNVGN5TkRjeE9EY3hOeXdpWVhWMGFHOXlhWFJwWlhNaU9sc2lVazlNUlY5VlUwVlNJbDBzSW1wMGFTSTZJamcxTVdGak1UUTJMVGcyT1RndE5HRmpNaTFoTWprd0xUWTBPV0V4Tm1FME5XRTNNU0lzSW1Oc2FXVnVkRjlwWkNJNkltTnNhV1Z1ZENKOS5zbk9JQU0xWjh3TXVVbFlRQXVoYXFvQWNhNS11T2VtQ0Rhd0hVbG1YcUpLa29Ob1ZvOGdSbmRfT1htSDJwcld3M0VKU2prSktjTFRWbGtoaFpxU1o2Z3Y2c2c2UXVWdUFISHJkWUVqUmVHZ1Uxa240S3cwZUFJZU91YjZvQVV1ZVU1ZXA2SjRWX3U0MWp5ODM5UkNKMWtQalhIdGlBVUtWbTZJR1ZIR1NGQWd2Wmt2amZyOE9rZWFHS215VGpWTG5MNXFBQUhtQ0dydFd1TkloRXR4bHlIMy16UTdNcERhM0NDcGlMWGtIdXBlM3BWMkdaaGFHY29reDlBTzNLUkE2UGppUGhiVWVzWkVPaUQ1OHBMYUZiZUQ1NEFneHdISGlJVXVHcTdXUUlrVm9CTFFuaGROMXFxMlAxOHlwT1EtM2Y1V3pqZ2pLZUdMV1FXTjZEYnBJaWc=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
        </HTTPCookies>
      </HTTPHeaders>
    </HTTPRequest>
    <HTTPResponse>
      <contentLenght>0</contentLenght>
      <HTTPHeaders>
        <HTTPHeaderEntity name="Server" index="0">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>bmdpbng=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Date" index="1">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>TW9uLCAyNiBBdWcgMjAyNCAxMjozNjoxMCBHTVQ=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Content-Type" index="2">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>YXBwbGljYXRpb24vanNvbg==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Connection" index="3">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>a2VlcC1hbGl2ZQ==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Cache-Control" index="4">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>bm8tc3RvcmU=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="X-Content-Type-Options" index="5">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>bm9zbmlmZg==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="X-Frame-Options" index="6">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>ZGVueQ==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="X-Xss-Protection" index="7">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>MTsgbW9kZT1ibG9jaw==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Strict-Transport-Security" index="8">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>bWF4LWFnZT04NjQwMDs=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPAllHeaders>
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>SFRUUC8xLjEgMjAwIE9LDQpTZXJ2ZXI6IG5naW54DQpEYXRlOiBNb24sIDI2IEF1ZyAyMDI0IDEyOjM2OjEwIEdNVA0KQ29udGVudC1UeXBlOiBhcHBsaWNhdGlvbi9qc29uDQpDb25uZWN0aW9uOiBrZWVwLWFsaXZlDQpDYWNoZS1Db250cm9sOiBuby1zdG9yZQ0KWC1Db250ZW50LVR5cGUtT3B0aW9uczogbm9zbmlmZg0KWC1GcmFtZS1PcHRpb25zOiBkZW55DQpYLVhzcy1Qcm90ZWN0aW9uOiAxOyBtb2RlPWJsb2NrDQpTdHJpY3QtVHJhbnNwb3J0LVNlY3VyaXR5OiBtYXgtYWdlPTg2NDAwOw0KDQo=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPAllHeaders>
      </HTTPHeaders>
      <HTTPBody>
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="4">
            <ActualData>eyJtZXRhIjp7InR5cGUiOiJkYiIsImNhblNhdmUiOmZhbHNlLCJjYW5FZGl0IjpmYWxzZSwiY2FuQWRtaW4iOmZhbHNlLCJjYW5TdGFyIjp0cnVlLCJjYW5EZWxldGUiOmZhbHNlLCJzbHVnIjoiY29tbW9uLWRhc2hib2FyZC10ZGItMTMiLCJ1cmwiOiIvZ3JhZmFuYS9kL2NhNTFhY2FmLTk4MDMtNGFkOC1iNTA3LTkyM2IxNTJhMWNhOS9jb21tb24tZGFzaGJvYXJkLXRkYi0xMyIsImV4cGlyZXMiOiIwMDAxLTAxLTAxVDAwOjAwOjAwWiIsImNyZWF0ZWQiOiIyMDI0LTA4LTE5VDEzOjE3OjU3WiIsInVwZGF0ZWQiOiIyMDI0LTA4LTE5VDEzOjE3OjU3WiIsInVwZGF0ZWRCeSI6InRlYW1fMTNfYWRtaW4iLCJjcmVhdGVkQnkiOiJ0ZWFtXzEzX2FkbWluIiwidmVyc2lvbiI6MSwiaGFzQWNsIjpmYWxzZSwiaXNGb2xkZXIiOmZhbHNlLCJmb2xkZXJJZCI6MCwiZm9sZGVyVWlkIjoiIiwiZm9sZGVyVGl0bGUiOiJHZW5lcmFsIiwiZm9sZGVyVXJsIjoiIiwicHJvdmlzaW9uZWQiOmZhbHNlLCJwcm92aXNpb25lZEV4dGVybmFsSWQiOiIiLCJhbm5vdGF0aW9uc1Blcm1pc3Npb25zIjp7ImRhc2hib2FyZCI6eyJjYW5BZGQiOnRydWUsImNhbkVkaXQiOnRydWUsImNhbkRlbGV0ZSI6dHJ1ZX0sIm9yZ2FuaXphdGlvbiI6eyJjYW5BZGQiOmZhbHNlLCJjYW5FZGl0IjpmYWxzZSwiY2FuRGVsZXRlIjpmYWxzZX19LCJwdWJsaWNEYXNoYm9hcmRBY2Nlc3NUb2tlbiI6IiIsInB1YmxpY0Rhc2hib2FyZFVpZCI6IiIsInB1YmxpY0Rhc2hib2FyZEVuYWJsZWQiOmZhbHNlfSwiZGFzaGJvYXJkIjp7ImFubm90YXRpb25zIjp7Imxpc3QiOlt7ImRhdGFzb3VyY2UiOiJ0ZWFtXzEzX3B1YmxpY190aW1lc2NhbGUiLCJlbmFibGUiOnRydWUsImhpZGUiOmZhbHNlLCJpY29uQ29sb3IiOiIjNTc5NEYyIiwibmFtZSI6ImNvbnRhaW5lciBzdGFydCB0aW1lIiwicmF3UXVlcnkiOiJTRUxFQ1RcbiAgc3RhcnRfZGF0ZSBhcyB0aW1lLFxuICBjb250YWluZXJfaWQsXG4gIHRlc3RfaWRcbkZST01cbiAgam1ldGVyX21ldHJpY3MuY29udGFpbmVyXG5XSEVSRVxuICAkX190aW1lRmlsdGVyKFwic3RhcnRfZGF0ZVwiKSIsInNob3dJbiI6MH0seyJkYXRhc291cmNlIjoidGVhbV8xM19wdWJsaWNfdGltZXNjYWxlIiwiZW5hYmxlIjp0cnVlLCJoaWRlIjpmYWxzZSwiaWNvbkNvbG9yIjoiI0I4NzdEOSIsIm5hbWUiOiJjb250YWluZXIgZW5kIHRpbWUiLCJyYXdRdWVyeSI6IlNFTEVDVFxuICBlbmRfZGF0ZSBhcyB0aW1lLFxuICBjb250YWluZXJfaWQsXG4gIHRlc3RfaWRcbkZST01cbiAgam1ldGVyX21ldHJpY3MuY29udGFpbmVyXG5XSEVSRVxuICAkX190aW1lRmlsdGVyKFwiZW5kX2RhdGVcIikiLCJzaG93SW4iOjB9XX0sImVkaXRhYmxlIjp0cnVlLCJnbmV0SWQiOm51bGwsImdyYXBoVG9vbHRpcCI6MCwiaWQiOjI1LCJpdGVyYXRpb24iOjE2NTU5MTAyODIxNjMsImxpbmtzIjpbXSwicGFuZWxzIjpbeyJjb2xsYXBzZWQiOmZhbHNlLCJkYXRhc291cmNlIjpudWxsLCJncmlkUG9zIjp7ImgiOjEsInciOjI0LCJ4IjowLCJ5IjowfSwiaWQiOjQsInBhbmVscyI6W10sInRpdGxlIjoiU3VtbWFyeSIsInR5cGUiOiJyb3cifSx7ImRhdGFzb3VyY2UiOiJ0ZWFtXzEzX3B1YmxpY190aW1lc2NhbGUiLCJkZXNjcmlwdGlvbiI6IiIsImZpZWxkQ29uZmlnIjp7ImRlZmF1bHRzIjp7ImNvbG9yIjp7Im1vZGUiOiJ0aHJlc2hvbGRzIn0sIm1hcHBpbmdzIjpbXSwibm9WYWx1ZSI6IjAiLCJ0aHJlc2hvbGRzIjp7Im1vZGUiOiJhYnNvbHV0ZSIsInN0ZXBzIjpbeyJjb2xvciI6ImdyZWVuIiwidmFsdWUiOm51bGx9XX19LCJvdmVycmlkZXMiOltdfSwiZ3JpZFBvcyI6eyJoIjo3LCJ3Ijo0LCJ4IjowLCJ5IjoxfSwiaWQiOjYsIm9wdGlvbnMiOnsiY29sb3JNb2RlIjoidmFsdWUiLCJncmFwaE1vZGUiOiJhcmVhIiwianVzdGlmeU1vZGUiOiJhdXRvIiwib3JpZW50YXRpb24iOiJob3Jpem9udGFsIiwicmVkdWNlT3B0aW9ucyI6eyJjYWxjcyI6WyJzdW0iXSwiZmllbGRzIjoiIiwidmFsdWVzIjpmYWxzZX0sInRleHQiOnt9LCJ0ZXh0TW9kZSI6ImF1dG8ifSwicGx1Z2luVmVyc2lvbiI6IjEwLjEuNSIsInRhcmdldHMiOlt7ImZvcm1hdCI6InRhYmxlIiwiZ3JvdXAiOlt7InBhcmFtcyI6WyIkX19pbnRlcnZhbCIsIk5VTEwiXSwidHlwZSI6InRpbWUifV0sIm1ldHJpY0NvbHVtbiI6Im5vbmUiLCJxdWVyeVR5cGUiOiJyYW5kb21XYWxrIiwicmF3UXVlcnkiOnRydWUsInJhd1NxbCI6IlNFTEVDVFxuICBzdW0oY291bnQpIEFTIFwiY291bnRcIlxuRlJPTSBqbWV0ZXJfbWV0cmljcy5zYW1wbGVfbWV0cmljXG5XSEVSRVxuICAkX190aW1lRmlsdGVyKHRpbWVzdGFtcCkgQU5EXG4gICgtOTk5OSBpbiAoJHt0ZXN0SWQ6c3Fsc3RyaW5nfSkgT1IgdGVzdF9pZCBpbiAoJHt0ZXN0SWQ6c3Fsc3RyaW5nfSkpIEFORFxuICAoJyUlYWxsJSUnIGluICgke2xvY2F0aW9uOnNxbHN0cmluZ30pIE9SIGxvY2F0aW9uIElOICgke2xvY2F0aW9uOnNxbHN0cmluZ30pKSBBTkRcbiAgbm90IGlzX3RyYW5zYWN0aW9uIiwicmVmSWQiOiJBIiwic2VsZWN0IjpbW3sicGFyYW1zIjpbImNvdW50Il0sInR5cGUiOiJjb2x1bW4ifSx7InBhcmFtcyI6WyJzdW0iXSwidHlwZSI6ImFnZ3JlZ2F0ZSJ9LHsicGFyYW1zIjpbImNvdW50Il0sInR5cGUiOiJhbGlhcyJ9XV0sInRhYmxlIjoiam1ldGVyX21ldHJpY3Muc2FtcGxlX21ldHJpYyIsInRpbWVDb2x1bW4iOiJcInRpbWVcIiIsInRpbWVDb2x1bW5UeXBlIjoidGltZXN0YW1wIiwid2hlcmUiOlt7Im5hbWUiOiIkX190aW1lRmlsdGVyIiwicGFyYW1zIjpbXSwidHlwZSI6Im1hY3JvIn0seyJkYXRhdHlwZSI6ImludDgiLCJuYW1lIjoiIiwicGFyYW1zIjpbInRlc3RfaWQiLCJJTiIsIigke3Rlc3RJZDpzcWxzdHJpbmd9KSJdLCJ0eXBlIjoiZXhwcmVzc2lvbiJ9LHsiZGF0YXR5cGUiOiJ2YXJjaGFyIiwibmFtZSI6IiIsInBhcmFtcyI6WyJsb2NhdGlvbiIsIklOIiwiJGxvY2F0aW9uIl0sInR5cGUiOiJleHByZXNzaW9uIn0seyJkYXRhdHlwZSI6InZhcmNoYXIiLCJuYW1lIjoiIiwicGFyYW1zIjpbInRyYW5zYWN0aW9uIiwiSU4iLCIkdHJhbnNhY3Rpb24iXSwidHlwZSI6ImV4cHJlc3Npb24ifV19XSwidGl0bGUiOiJUb3RhbCBSZXF1ZXN0cyIsInR5cGUiOiJzdGF0In0seyJkYXRhc291cmNlIjoidGVhbV8xM19wdWJsaWNfdGltZXNjYWxlIiwiZGVzY3JpcHRpb24iOiIiLCJmaWVsZENvbmZpZyI6eyJkZWZhdWx0cyI6eyJjb2xvciI6eyJtb2RlIjoidGhyZXNob2xkcyJ9LCJjdXN0b20iOnt9LCJtYXBwaW5ncyI6W10sIm5vVmFsdWUiOiIwIiwidGhyZXNob2xkcyI6eyJtb2RlIjoiYWJzb2x1dGUiLCJzdGVwcyI6W3siY29sb3IiOiJyZWQiLCJ2YWx1ZSI6bnVsbH1dfX0sIm92ZXJyaWRlcyI6W119LCJncmlkUG9zIjp7ImgiOjcsInciOjQsIngiOjQsInkiOjF9LCJpZCI6MTIsIm9wdGlvbnMiOnsiY29sb3JNb2RlIjoidmFsdWUiLCJncmFwaE1vZGUiOiJhcmVhIiwianVzdGlmeU1vZGUiOiJhdXRvIiwib3JpZW50YXRpb24iOiJob3Jpem9udGFsIiwicmVkdWNlT3B0aW9ucyI6eyJjYWxjcyI6WyJzdW0iXSwiZmllbGRzIjoiIiwidmFsdWVzIjpmYWxzZX0sInRleHQiOnt9LCJ0ZXh0TW9kZSI6ImF1dG8ifSwicGx1Z2luVmVyc2lvbiI6IjEwLjEuNSIsInRhcmdldHMiOlt7ImZvcm1hdCI6InRhYmxlIiwiZ3JvdXAiOlt7InBhcmFtcyI6WyIkX19pbnRlcnZhbCIsIk5VTEwiXSwidHlwZSI6InRpbWUifV0sIm1ldHJpY0NvbHVtbiI6Im5vbmUiLCJxdWVyeVR5cGUiOiJyYW5kb21XYWxrIiwicmF3UXVlcnkiOnRydWUsInJhd1NxbCI6IlNFTEVDVFxuICBzdW0oY291bnQpIEFTIFwiY291bnRcIlxuRlJPTSBqbWV0ZXJfbWV0cmljcy5zYW1wbGVfZXJyb3JfbWV0cmljXG5XSEVSRVxuICAkX190aW1lRmlsdGVyKHRpbWVzdGFtcCkgQU5EXG4gICgtOTk5OSBpbiAoJHt0ZXN0SWQ6c3Fsc3RyaW5nfSkgT1IgdGVzdF9pZCBpbiAoJHt0ZXN0SWQ6c3Fsc3RyaW5nfSkpIEFORFxuICAoJyUlYWxsJSUnIGluICgke2xvY2F0aW9uOnNxbHN0cmluZ30pIE9SIGxvY2F0aW9uIElOICgke2xvY2F0aW9uOnNxbHN0cmluZ30pKSBBTkRcbiAgbm90IGlzX3RyYW5zYWN0aW9uIiwicmVmSWQiOiJBIiwic2VsZWN0IjpbW3sicGFyYW1zIjpbImNvdW50Il0sInR5cGUiOiJjb2x1bW4ifSx7InBhcmFtcyI6WyJzdW0iXSwidHlwZSI6ImFnZ3JlZ2F0ZSJ9LHsicGFyYW1zIjpbImNvdW50Il0sInR5cGUiOiJhbGlhcyJ9XV0sInRhYmxlIjoiam1ldGVyX21ldHJpY3Muc2FtcGxlX21ldHJpYyIsInRpbWVDb2x1bW4iOiJcInRpbWVcIiIsInRpbWVDb2x1bW5UeXBlIjoidGltZXN0YW1wIiwid2hlcmUiOlt7Im5hbWUiOiIkX190aW1lRmlsdGVyIiwicGFyYW1zIjpbXSwidHlwZSI6Im1hY3JvIn0seyJkYXRhdHlwZSI6ImludDgiLCJuYW1lIjoiIiwicGFyYW1zIjpbInRlc3RfaWQiLCJJTiIsIigke3Rlc3RJZDpzcWxzdHJpbmd9KSJdLCJ0eXBlIjoiZXhwcmVzc2lvbiJ9LHsiZGF0YXR5cGUiOiJ2YXJjaGFyIiwibmFtZSI6IiIsInBhcmFtcyI6WyJsb2NhdGlvbiIsIklOIiwiJGxvY2F0aW9uIl0sInR5cGUiOiJleHByZXNzaW9uIn0seyJkYXRhdHlwZSI6InZhcmNoYXIiLCJuYW1lIjoiIiwicGFyYW1zIjpbInRyYW5zYWN0aW9uIiwiSU4iLCIkdHJhbnNhY3Rpb24iXSwidHlwZSI6ImV4cHJlc3Npb24ifV19XSwidGltZUZyb20iOm51bGwsInRpbWVTaGlmdCI6bnVsbCwidGl0bGUiOiJGYWlsZWQgUmVxdWVzdHMiLCJ0eXBlIjoic3RhdCJ9LHsiZGF0YXNvdXJjZSI6InRlYW1fMTNfcHVibGljX3RpbWVzY2FsZSIsImRlc2NyaXB0aW9uIjoiIiwiZmllbGRDb25maWciOnsiZGVmYXVsdHMiOnsiY29sb3IiOnsibW9kZSI6InRocmVzaG9sZHMifSwiY3VzdG9tIjp7fSwiZGVjaW1hbHMiOjAsIm1hcHBpbmdzIjpbXSwibm9WYWx1ZSI6IjAiLCJ0aHJlc2hvbGRzIjp7Im1vZGUiOiJhYnNvbHV0ZSIsInN0ZXBzIjpbeyJjb2xvciI6ImdyZWVuIiwidmFsdWUiOm51bGx9XX0sInVuaXQiOiJieXRlcyJ9LCJvdmVycmlkZXMiOltdfSwiZ3JpZFBvcyI6eyJoIjo3LCJ3Ijo0LCJ4Ijo4LCJ5IjoxfSwiaWQiOjUsIm9wdGlvbnMiOnsiY29sb3JNb2RlIjoidmFsdWUiLCJncmFwaE1vZGUiOiJhcmVhIiwianVzdGlmeU1vZGUiOiJhdXRvIiwib3JpZW50YXRpb24iOiJob3Jpem9udGFsIiwicmVkdWNlT3B0aW9ucyI6eyJjYWxjcyI6WyJzdW0iXSwiZmllbGRzIjoiIiwidmFsdWVzIjpmYWxzZX0sInRleHQiOnt9LCJ0ZXh0TW9kZSI6ImF1dG8ifSwicGx1Z2luVmVyc2lvbiI6IjEwLjEuNSIsInRhcmdldHMiOlt7ImZvcm1hdCI6InRhYmxlIiwiZ3JvdXAiOlt7InBhcmFtcyI6WyIkX19pbnRlcnZhbCIsIk5VTEwiXSwidHlwZSI6InRpbWUifV0sIm1ldHJpY0NvbHVtbiI6Im5vbmUiLCJxdWVyeVR5cGUiOiJyYW5kb21XYWxrIiwicmF3UXVlcnkiOnRydWUsInJhd1NxbCI6IlNFTEVDVFxuICBzdW0ocmVjZWl2ZWRfYnl0ZXMpXG5GUk9NIGptZXRlcl9tZXRyaWNzLnNhbXBsZV9tZXRyaWNcbldIRVJFXG4gICRfX3RpbWVGaWx0ZXIodGltZXN0YW1wKSBBTkRcbiAgKC05OTk5IGluICgke3Rlc3RJZDpzcWxzdHJpbmd9KSBPUiB0ZXN0X2lkIGluICgke3Rlc3RJZDpzcWxzdHJpbmd9KSkgQU5EXG4gICgnJSVhbGwlJScgaW4gKCR7bG9jYXRpb246c3Fsc3RyaW5nfSkgT1IgbG9jYXRpb24gSU4gKCR7bG9jYXRpb246c3Fsc3RyaW5nfSkpIEFORFxuICBub3QgaXNfdHJhbnNhY3Rpb24iLCJyZWZJZCI6IkEiLCJzZWxlY3QiOltbeyJwYXJhbXMiOlsiY291bnQiXSwidHlwZSI6ImNvbHVtbiJ9LHsicGFyYW1zIjpbInN1bSJdLCJ0eXBlIjoiYWdncmVnYXRlIn0seyJwYXJhbXMiOlsiY291bnQiXSwidHlwZSI6ImFsaWFzIn1dXSwidGFibGUiOiJqbWV0ZXJfbWV0cmljcy5zYW1wbGVfbWV0cmljIiwidGltZUNvbHVtbiI6IlwidGltZVwiIiwidGltZUNvbHVtblR5cGUiOiJ0aW1lc3RhbXAiLCJ3aGVyZSI6W3sibmFtZSI6IiRfX3RpbWVGaWx0ZXIiLCJwYXJhbXMiOltdLCJ0eXBlIjoibWFjcm8ifSx7ImRhdGF0eXBlIjoiaW50OCIsIm5hbWUiOiIiLCJwYXJhbXMiOlsidGVzdF9pZCIsIklOIiwiKCR7dGVzdElkOnNxbHN0cmluZ30pIl0sInR5cGUiOiJleHByZXNzaW9uIn0seyJkYXRhdHlwZSI6InZhcmNoYXIiLCJuYW1lIjoiIiwicGFyYW1zIjpbImxvY2F0aW9uIiwiSU4iLCIkbG9jYXRpb24iXSwidHlwZSI6ImV4cHJlc3Npb24ifSx7ImRhdGF0eXBlIjoidmFyY2hhciIsIm5hbWUiOiIiLCJwYXJhbXMiOlsidHJhbnNhY3Rpb24iLCJJTiIsIiR0cmFuc2FjdGlvbiJdLCJ0eXBlIjoiZXhwcmVzc2lvbiJ9XX1dLCJ0aW1lRnJvbSI6bnVsbCwidGltZVNoaWZ0IjpudWxsLCJ0aXRsZSI6IlJlY2VpdmVkIEJ5dGVzIiwidHlwZSI6InN0YXQifSx7ImRhdGFzb3VyY2UiOiJ0ZWFtXzEzX3B1YmxpY190aW1lc2NhbGUiLCJkZXNjcmlwdGlvbiI6IiIsImZpZWxkQ29uZmlnIjp7ImRlZmF1bHRzIjp7ImNvbG9yIjp7Im1vZGUiOiJ0aHJlc2hvbGRzIn0sImN1c3RvbSI6e30sImRlY2ltYWxzIjowLCJtYXBwaW5ncyI6W10sIm5vVmFsdWUiOiIwIiwidGhyZXNob2xkcyI6eyJtb2RlIjoiYWJzb2x1dGUiLCJzdGVwcyI6W3siY29sb3IiOiJncmVlbiIsInZhbHVlIjpudWxsfV19LCJ1bml0IjoiYnl0ZXMifSwib3ZlcnJpZGVzIjpbXX0sImdyaWRQb3MiOnsiaCI6NywidyI6NCwieCI6MTIsInkiOjF9LCJpZCI6Nywib3B0aW9ucyI6eyJjb2xvck1vZGUiOiJ2YWx1ZSIsImdyYXBoTW9kZSI6ImFyZWEiLCJqdXN0aWZ5TW9kZSI6ImF1dG8iLCJvcmllbnRhdGlvbiI6Imhvcml6b250YWwiLCJyZWR1Y2VPcHRpb25zIjp7ImNhbGNzIjpbInN1bSJdLCJmaWVsZHMiOiIiLCJ2YWx1ZXMiOmZhbHNlfSwidGV4dCI6e30sInRleHRNb2RlIjoiYXV0byJ9LCJwbHVnaW5WZXJzaW9uIjoiMTAuMS41IiwidGFyZ2V0cyI6W3siZm9ybWF0IjoidGFibGUiLCJncm91cCI6W3sicGFyYW1zIjpbIiRfX2ludGVydmFsIiwiTlVMTCJdLCJ0eXBlIjoidGltZSJ9XSwibWV0cmljQ29sdW1uIjoibm9uZSIsInF1ZXJ5VHlwZSI6InJhbmRvbVdhbGsiLCJyYXdRdWVyeSI6dHJ1ZSwicmF3U3FsIjoiU0VMRUNUXG4gIHN1bShzZW50X2J5dGVzKVxuRlJPTSBqbWV0ZXJfbWV0cmljcy5zYW1wbGVfbWV0cmljXG5XSEVSRVxuICAkX190aW1lRmlsdGVyKHRpbWVzdGFtcCkgQU5EXG4gICgtOTk5OSBpbiAoJHt0ZXN0SWQ6c3Fsc3RyaW5nfSkgT1IgdGVzdF9pZCBpbiAoJHt0ZXN0SWQ6c3Fsc3RyaW5nfSkpIEFORFxuICAoJyUlYWxsJSUnIGluICgke2xvY2F0aW9uOnNxbHN0cmluZ30pIE9SIGxvY2F0aW9uIElOICgke2xvY2F0aW9uOnNxbHN0cmluZ30pKSBBTkRcbiAgbm90IGlzX3RyYW5zYWN0aW9uIiwicmVmSWQiOiJBIiwic2VsZWN0IjpbW3sicGFyYW1zIjpbImNvdW50Il0sInR5cGUiOiJjb2x1bW4ifSx7InBhcmFtcyI6WyJzdW0iXSwidHlwZSI6ImFnZ3JlZ2F0ZSJ9LHsicGFyYW1zIjpbImNvdW50Il0sInR5cGUiOiJhbGlhcyJ9XV0sInRhYmxlIjoiam1ldGVyX21ldHJpY3Muc2FtcGxlX21ldHJpYyIsInRpbWVDb2x1bW4iOiJcInRpbWVcIiIsInRpbWVDb2x1bW5UeXBlIjoidGltZXN0YW1wIiwid2hlcmUiOlt7Im5hbWUiOiIkX190aW1lRmlsdGVyIiwicGFyYW1zIjpbXSwidHlwZSI6Im1hY3JvIn0seyJkYXRhdHlwZSI6ImludDgiLCJuYW1lIjoiIiwicGFyYW1zIjpbInRlc3RfaWQiLCJJTiIsIigke3Rlc3RJZDpzcWxzdHJpbmd9KSJdLCJ0eXBlIjoiZXhwcmVzc2lvbiJ9LHsiZGF0YXR5cGUiOiJ2YXJjaGFyIiwibmFtZSI6IiIsInBhcmFtcyI6WyJsb2NhdGlvbiIsIklOIiwiJGxvY2F0aW9uIl0sInR5cGUiOiJleHByZXNzaW9uIn0seyJkYXRhdHlwZSI6InZhcmNoYXIiLCJuYW1lIjoiIiwicGFyYW1zIjpbInRyYW5zYWN0aW9uIiwiSU4iLCIkdHJhbnNhY3Rpb24iXSwidHlwZSI6ImV4cHJlc3Npb24ifV19XSwidGltZUZyb20iOm51bGwsInRpbWVTaGlmdCI6bnVsbCwidGl0bGUiOiJTZW50IEJ5dGVzIiwidHlwZSI6InN0YXQifSx7ImRhdGFzb3VyY2UiOiJ0ZWFtXzEzX3B1YmxpY190aW1lc2NhbGUiLCJmaWVsZENvbmZpZyI6eyJkZWZhdWx0cyI6eyJjb2xvciI6eyJtb2RlIjoidGhyZXNob2xkcyJ9LCJjdXN0b20iOnt9LCJtYXBwaW5ncyI6W10sIm5vVmFsdWUiOiIwIiwidGhyZXNob2xkcyI6eyJtb2RlIjoiYWJzb2x1dGUiLCJzdGVwcyI6W3siY29sb3IiOiJncmVlbiIsInZhbHVlIjpudWxsfSx7ImNvbG9yIjoib3JhbmdlIiwidmFsdWUiOjB9LHsiY29sb3IiOiJyZWQiLCJ2YWx1ZSI6MC4wMX1dfSwidW5pdCI6InBlcmNlbnR1bml0In0sIm92ZXJyaWRlcyI6W119LCJncmlkUG9zIjp7ImgiOjcsInciOjgsIngiOjE2LCJ5IjoxfSwiaWQiOjksIm9wdGlvbnMiOnsicmVkdWNlT3B0aW9ucyI6eyJjYWxjcyI6WyJsYXN0Tm90TnVsbCJdLCJmaWVsZHMiOiIiLCJ2YWx1ZXMiOmZhbHNlfSwic2hvd1RocmVzaG9sZExhYmVscyI6ZmFsc2UsInNob3dUaHJlc2hvbGRNYXJrZXJzIjp0cnVlLCJ0ZXh0Ijp7fX0sInBsdWdpblZlcnNpb24iOiIxMC4xLjUiLCJ0YXJnZXRzIjpbeyJmb3JtYXQiOiJ0YWJsZSIsImdyb3VwIjpbXSwiaGlkZSI6ZmFsc2UsIm1ldHJpY0NvbHVtbiI6Im5vbmUiLCJyYXdRdWVyeSI6dHJ1ZSwicmF3U3FsIjoiU0VMRUNUIFwiZXJyb3JcIi5zdW06OmRlY2ltYWwgLyBcImFsbFwiLnN1bVxyXG5GUk9NXHJcbiAgICAoU0VMRUNUIHN1bShjb3VudCkgYXMgc3VtIGZyb20gam1ldGVyX21ldHJpY3Muc2FtcGxlX21ldHJpY1xyXG4gICAgIFdIRVJFXHJcbiAgICAgICAgICRfX3RpbWVGaWx0ZXIodGltZXN0YW1wKSBBTkRcclxuICAgICAgICAgICAgICgtOTk5OSBpbiAoJHt0ZXN0SWQ6c3Fsc3RyaW5nfSkgT1IgdGVzdF9pZCBpbiAoJHt0ZXN0SWQ6c3Fsc3RyaW5nfSkpIEFORFxyXG4gICAgICAgICAgICAgKCclJWFsbCUlJyBpbiAoJHtsb2NhdGlvbjpzcWxzdHJpbmd9KSBPUiBsb2NhdGlvbiBJTiAoJHtsb2NhdGlvbjpzcWxzdHJpbmd9KSkgQU5EXHJcbiAgICAgICAgICAgICBub3QgaXNfdHJhbnNhY3Rpb24pIGFzIFwiYWxsXCIsXHJcbiAgICAoU0VMRUNUIHN1bShjb3VudCkgYXMgc3VtIGZyb20gam1ldGVyX21ldHJpY3Muc2FtcGxlX2Vycm9yX21ldHJpY1xyXG4gICAgIFdIRVJFXHJcbiAgICAgICAgICRfX3RpbWVGaWx0ZXIodGltZXN0YW1wKSBBTkRcclxuICAgICAgICAgICAgICgtOTk5OSBpbiAoJHt0ZXN0SWQ6c3Fsc3RyaW5nfSkgT1IgdGVzdF9pZCBpbiAoJHt0ZXN0SWQ6c3Fsc3RyaW5nfSkpIEFORFxyXG4gICAgICAgICAgICAgKCclJWFsbCUlJyBpbiAoJHtsb2NhdGlvbjpzcWxzdHJpbmd9KSBPUiBsb2NhdGlvbiBJTiAoJHtsb2NhdGlvbjpzcWxzdHJpbmd9KSkgQU5EXHJcbiAgICAgICAgICAgICBub3QgaXNfdHJhbnNhY3Rpb24pIGFzIFwiZXJyb3JcIjsiLCJyZWZJZCI6IlFVRVJZIiwic2VsZWN0IjpbW3sicGFyYW1zIjpbInZhbHVlIl0sInR5cGUiOiJjb2x1bW4ifV1dLCJ0aW1lQ29sdW1uIjoidGltZSIsIndoZXJlIjpbeyJuYW1lIjoiJF9fdGltZUZpbHRlciIsInBhcmFtcyI6W10sInR5cGUiOiJtYWNybyJ9XX1dLCJ0aXRsZSI6IkVycm9yIFJhdGUgJSIsInRyYW5zZm9ybWF0aW9ucyI6W10sInR5cGUiOiJnYXVnZSJ9LHsiZGF0YXNvdXJjZSI6InRlYW1fMTNfcHVibGljX3RpbWVzY2FsZSIsImZpZWxkQ29uZmlnIjp7ImRlZmF1bHRzIjp7ImNvbG9yIjp7Im1vZGUiOiJwYWxldHRlLWNsYXNzaWMifSwiY3VzdG9tIjp7ImF4aXNDZW50ZXJlZFplcm8iOmZhbHNlLCJheGlzQ29sb3JNb2RlIjoidGV4dCIsImF4aXNMYWJlbCI6IlJQUyIsImF4aXNQbGFjZW1lbnQiOiJhdXRvIiwiYmFyQWxpZ25tZW50IjowLCJkcmF3U3R5bGUiOiJsaW5lIiwiZmlsbE9wYWNpdHkiOjcwLCJncmFkaWVudE1vZGUiOiJvcGFjaXR5IiwiaGlkZUZyb20iOnsibGVnZW5kIjpmYWxzZSwidG9vbHRpcCI6ZmFsc2UsInZpeiI6ZmFsc2V9LCJpbnNlcnROdWxscyI6ZmFsc2UsImxpbmVJbnRlcnBvbGF0aW9uIjoibGluZWFyIiwibGluZVdpZHRoIjoxLCJwb2ludFNpemUiOjUsInNjYWxlRGlzdHJpYnV0aW9uIjp7InR5cGUiOiJsaW5lYXIifSwic2hvd1BvaW50cyI6Im5ldmVyIiwic3Bhbk51bGxzIjpmYWxzZSwic3RhY2tpbmciOnsiZ3JvdXAiOiJBIiwibW9kZSI6Im5vbmUifSwidGhyZXNob2xkc1N0eWxlIjp7Im1vZGUiOiJvZmYifX0sIm1hcHBpbmdzIjpbXSwidGhyZXNob2xkcyI6eyJtb2RlIjoiYWJzb2x1dGUiLCJzdGVwcyI6W3siY29sb3IiOiJncmVlbiIsInZhbHVlIjpudWxsfSx7ImNvbG9yIjoicmVkIiwidmFsdWUiOjgwfV19LCJ1bml0Ijoibm9uZSJ9LCJvdmVycmlkZXMiOlt7Im1hdGNoZXIiOnsiaWQiOiJieVJlZ2V4cCIsIm9wdGlvbnMiOiIvVGhyZWFkcy4qLyJ9LCJwcm9wZXJ0aWVzIjpbeyJpZCI6ImN1c3RvbS5maWxsT3BhY2l0eSIsInZhbHVlIjoxMH0seyJpZCI6ImN1c3RvbS5saW5lV2lkdGgiLCJ2YWx1ZSI6Mn0seyJpZCI6ImN1c3RvbS5heGlzTGFiZWwiLCJ2YWx1ZSI6IlRocmVhZHMifV19XX0sImdyaWRQb3MiOnsiaCI6NywidyI6OCwieCI6MCwieSI6OH0sImlkIjoxMSwiaW50ZXJ2YWwiOiJbW3NlbmRfaW50ZXJ2YWxdXXMiLCJvcHRpb25zIjp7ImxlZ2VuZCI6eyJjYWxjcyI6W10sImRpc3BsYXlNb2RlIjoibGlzdCIsInBsYWNlbWVudCI6ImJvdHRvbSIsInNob3dMZWdlbmQiOmZhbHNlfSwidG9vbHRpcCI6eyJtb2RlIjoibXVsdGkiLCJzb3J0Ijoibm9uZSJ9fSwicGx1Z2luVmVyc2lvbiI6IjEwLjEuNSIsInRhcmdldHMiOlt7ImZvcm1hdCI6InRpbWVfc2VyaWVzIiwiZ3JvdXAiOlt7InBhcmFtcyI6WyIkX19pbnRlcnZhbCIsIjAiXSwidHlwZSI6InRpbWUifV0sIm1ldHJpY0NvbHVtbiI6Im5vbmUiLCJxdWVyeVR5cGUiOiJyYW5kb21XYWxrIiwicmF3UXVlcnkiOnRydWUsInJhd1NxbCI6IlNFTEVDVCBcbiAgYXQudGltZSArIGludGVydmFsICcke2FnZ3JlZ2F0aW9uX2ludGVydmFsfXMnIGFzIHRpbWUsIFxuICBzdW0oYXQudGhyZWFkcykgYXMgXCJUaHJlYWRzXCIsXG4gIGNvbmNhdCgnVGhyZWFkcyAnLCB0ZXN0X2lkKVxuRlJPTSAoXG4gIFNFTEVDVCB0aW1lX2J1Y2tldCgnJHthZ2dyZWdhdGlvbl9pbnRlcnZhbH1zJywgXCJ0aW1lc3RhbXBcIikgYXMgdGltZSxcbiAgbG9jZihsYXN0KHRocmVhZHMsIHRpbWVzdGFtcCkpIGFzIFwidGhyZWFkc1wiLFxuICB0ZXN0X2lkXG4gIEZST00gam1ldGVyX21ldHJpY3MudGhyZWFkX21ldHJpY1xuICBXSEVSRVxuICAkX190aW1lRmlsdGVyKHRpbWVzdGFtcCkgQU5EXG4gICgtOTk5OSBpbiAoJHt0ZXN0SWQ6c3Fsc3RyaW5nfSkgT1IgdGVzdF9pZCBpbiAoJHt0ZXN0SWQ6c3Fsc3RyaW5nfSkpIEFORFxuICAoJyUlYWxsJSUnIGluICgke2xvY2F0aW9uOnNxbHN0cmluZ30pIE9SIGxvY2F0aW9uIElOICgke2xvY2F0aW9uOnNxbHN0cmluZ30pKVxuICBHUk9VUCBCWSAxLCBjb250YWluZXJfaWQsIHRlc3RfaWRcbiAgT1JERVIgQlkgMVxuKSBhdFxuR1JPVVAgQlkgMSwgdGVzdF9pZFxuT1JERVIgQlkgMSIsInJlZklkIjoiVGhyZWFkcyIsInNlbGVjdCI6W1t7InBhcmFtcyI6WyJzdGFydGVkX3RocmVhZHMiXSwidHlwZSI6ImNvbHVtbiJ9LHsicGFyYW1zIjpbInN1bSJdLCJ0eXBlIjoiYWdncmVnYXRlIn0seyJwYXJhbXMiOlsic3QiXSwidHlwZSI6ImFsaWFzIn1dXSwidGFibGUiOiJqbWV0ZXJfbWV0cmljcy50aHJlYWRfbWV0cmljIiwidGltZUNvbHVtbiI6IlwidGltZVwiIiwidGltZUNvbHVtblR5cGUiOiJ0aW1lc3RhbXAiLCJ3aGVyZSI6W3sibmFtZSI6IiRfX3RpbWVGaWx0ZXIiLCJwYXJhbXMiOltdLCJ0eXBlIjoibWFjcm8ifSx7ImRhdGF0eXBlIjoiaW50OCIsIm5hbWUiOiIiLCJwYXJhbXMiOlsidGVzdF9pZCIsIklOIiwiKCR7dGVzdElkOnNxbHN0cmluZ30pIl0sInR5cGUiOiJleHByZXNzaW9uIn1dfSx7ImZvcm1hdCI6InRpbWVfc2VyaWVzIiwiZ3JvdXAiOltdLCJoaWRlIjpmYWxzZSwibWV0cmljQ29sdW1uIjoibm9uZSIsInJhd1F1ZXJ5Ijp0cnVlLCJyYXdTcWwiOiJTRUxFQ1QgXG4gIHRpbWUgKyBpbnRlcnZhbCAnJHthZ2dyZWdhdGlvbl9pbnRlcnZhbH1zJyBhcyB0aW1lLFxuICBcInJwc1wiLFxuICBcIm1ldHJpY1wiXG5GUk9NIChcbiAgU0VMRUNUXG4gICAgdGltZV9idWNrZXQoJyR7YWdncmVnYXRpb25faW50ZXJ2YWx9cycsIFwidGltZXN0YW1wXCIpIGFzIHRpbWUsXG4gICAgc3VtKGNvdW50KTo6ZGVjaW1hbCAvICR7YWdncmVnYXRpb25faW50ZXJ2YWx9IEFTIFwicnBzXCIsXG4gICAgY29uY2F0KCdSUFMgJywgdGVzdF9pZCkgQVMgXCJtZXRyaWNcIlxuICBGUk9NIGptZXRlcl9tZXRyaWNzLnNhbXBsZV9tZXRyaWNcbiAgV0hFUkVcbiAgICAkX190aW1lRmlsdGVyKHRpbWVzdGFtcCkgQU5EXG4gICAgKC05OTk5IGluICgke3Rlc3RJZDpzcWxzdHJpbmd9KSBPUiB0ZXN0X2lkIGluICgke3Rlc3RJZDpzcWxzdHJpbmd9KSkgQU5EXG4gICAgKCclJWFsbCUlJyBpbiAoJHtsb2NhdGlvbjpzcWxzdHJpbmd9KSBPUiBsb2NhdGlvbiBJTiAoJHtsb2NhdGlvbjpzcWxzdHJpbmd9KSkgQU5EXG4gICAgbm90IGlzX3RyYW5zYWN0aW9uIFxuICBHUk9VUCBCWSAxLCB0ZXN0X2lkXG4gIE9SREVSIEJZIDFcbikgc3ViIiwicmVmSWQiOiJSUFMiLCJzZWxlY3QiOltbeyJwYXJhbXMiOlsidmFsdWUiXSwidHlwZSI6ImNvbHVtbiJ9XV0sInRpbWVDb2x1bW4iOiJ0aW1lIiwid2hlcmUiOlt7Im5hbWUiOiIkX190aW1lRmlsdGVyIiwicGFyYW1zIjpbXSwidHlwZSI6Im1hY3JvIn1dfV0sInRpdGxlIjoiVG90YWwgVGhyb3VnaHB1dCIsInRyYW5zZm9ybWF0aW9ucyI6W10sInR5cGUiOiJ0aW1lc2VyaWVzIn0seyJkYXRhc291cmNlIjoidGVhbV8xM19wdWJsaWNfdGltZXNjYWxlIiwiZmllbGRDb25maWciOnsiZGVmYXVsdHMiOnsiY29sb3IiOnsibW9kZSI6InBhbGV0dGUtY2xhc3NpYyJ9LCJjdXN0b20iOnsiYXhpc0NlbnRlcmVkWmVybyI6ZmFsc2UsImF4aXNDb2xvck1vZGUiOiJ0ZXh0IiwiYXhpc0xhYmVsIjoiRXJyb3JzIHBlciBzZWNvbmQiLCJheGlzUGxhY2VtZW50IjoiYXV0byIsImJhckFsaWdubWVudCI6MCwiZHJhd1N0eWxlIjoibGluZSIsImZpbGxPcGFjaXR5Ijo3MCwiZ3JhZGllbnRNb2RlIjoib3BhY2l0eSIsImhpZGVGcm9tIjp7ImxlZ2VuZCI6ZmFsc2UsInRvb2x0aXAiOmZhbHNlLCJ2aXoiOmZhbHNlfSwiaW5zZXJ0TnVsbHMiOmZhbHNlLCJsaW5lSW50ZXJwb2xhdGlvbiI6ImxpbmVhciIsImxpbmVXaWR0aCI6MSwicG9pbnRTaXplIjo1LCJzY2FsZURpc3RyaWJ1dGlvbiI6eyJ0eXBlIjoibGluZWFyIn0sInNob3dQb2ludHMiOiJuZXZlciIsInNwYW5OdWxscyI6ZmFsc2UsInN0YWNraW5nIjp7Imdyb3VwIjoiQSIsIm1vZGUiOiJub25lIn0sInRocmVzaG9sZHNTdHlsZSI6eyJtb2RlIjoib2ZmIn19LCJtYXBwaW5ncyI6W10sInRocmVzaG9sZHMiOnsibW9kZSI6ImFic29sdXRlIiwic3RlcHMiOlt7ImNvbG9yIjoiZ3JlZW4iLCJ2YWx1ZSI6bnVsbH0seyJjb2xvciI6InJlZCIsInZhbHVlIjo4MH1dfSwidW5pdCI6Im5vbmUifSwib3ZlcnJpZGVzIjpbeyJtYXRjaGVyIjp7ImlkIjoiYnlSZWdleHAiLCJvcHRpb25zIjoiL1RocmVhZHMuKi8ifSwicHJvcGVydGllcyI6W3siaWQiOiJjdXN0b20uZmlsbE9wYWNpdHkiLCJ2YWx1ZSI6MTB9LHsiaWQiOiJjdXN0b20ubGluZVdpZHRoIiwidmFsdWUiOjJ9LHsiaWQiOiJjdXN0b20uYXhpc0xhYmVsIiwidmFsdWUiOiJUaHJlYWRzIn1dfV19LCJncmlkUG9zIjp7ImgiOjcsInciOjgsIngiOjgsInkiOjh9LCJpZCI6MTMsImludGVydmFsIjoiW1tzZW5kX2ludGVydmFsXV1zIiwib3B0aW9ucyI6eyJsZWdlbmQiOnsiY2FsY3MiOltdLCJkaXNwbGF5TW9kZSI6Imxpc3QiLCJwbGFjZW1lbnQiOiJib3R0b20iLCJzaG93TGVnZW5kIjpmYWxzZX0sInRvb2x0aXAiOnsibW9kZSI6Im11bHRpIiwic29ydCI6Im5vbmUifX0sInBsdWdpblZlcnNpb24iOiIxMC4xLjUiLCJ0YXJnZXRzIjpbeyJmb3JtYXQiOiJ0aW1lX3NlcmllcyIsImdyb3VwIjpbeyJwYXJhbXMiOlsiJF9faW50ZXJ2YWwiLCIwIl0sInR5cGUiOiJ0aW1lIn1dLCJtZXRyaWNDb2x1bW4iOiJub25lIiwicXVlcnlUeXBlIjoicmFuZG9tV2FsayIsInJhd1F1ZXJ5Ijp0cnVlLCJyYXdTcWwiOiJTRUxFQ1QgXG4gIGF0LnRpbWUgKyBpbnRlcnZhbCAnJHthZ2dyZWdhdGlvbl9pbnRlcnZhbH1zJyBhcyB0aW1lLCBcbiAgc3VtKGF0LnRocmVhZHMpIGFzIFwiVGhyZWFkc1wiLFxuICBjb25jYXQoJ1RocmVhZHMgJywgdGVzdF9pZClcbkZST00gKFxuICBTRUxFQ1QgdGltZV9idWNrZXQoJyR7YWdncmVnYXRpb25faW50ZXJ2YWx9cycsIFwidGltZXN0YW1wXCIpIGFzIHRpbWUsXG4gIGxvY2YobGFzdCh0aHJlYWRzLCB0aW1lc3RhbXApKSBhcyBcInRocmVhZHNcIixcbiAgdGVzdF9pZFxuICBGUk9NIGptZXRlcl9tZXRyaWNzLnRocmVhZF9tZXRyaWNcbiAgV0hFUkVcbiAgJF9fdGltZUZpbHRlcih0aW1lc3RhbXApIEFORFxuICAoLTk5OTkgaW4gKCR7dGVzdElkOnNxbHN0cmluZ30pIE9SIHRlc3RfaWQgaW4gKCR7dGVzdElkOnNxbHN0cmluZ30pKSBBTkRcbiAgKCclJWFsbCUlJyBpbiAoJHtsb2NhdGlvbjpzcWxzdHJpbmd9KSBPUiBsb2NhdGlvbiBJTiAoJHtsb2NhdGlvbjpzcWxzdHJpbmd9KSlcbiAgR1JPVVAgQlkgMSwgY29udGFpbmVyX2lkLCB0ZXN0X2lkXG4gIE9SREVSIEJZIDFcbikgYXRcbkdST1VQIEJZIDEsIGF0LnRlc3RfaWRcbk9SREVSIEJZIDEiLCJyZWZJZCI6IlRocmVhZHMiLCJzZWxlY3QiOltbeyJwYXJhbXMiOlsic3RhcnRlZF90aHJlYWRzIl0sInR5cGUiOiJjb2x1bW4ifSx7InBhcmFtcyI6WyJzdW0iXSwidHlwZSI6ImFnZ3JlZ2F0ZSJ9LHsicGFyYW1zIjpbInN0Il0sInR5cGUiOiJhbGlhcyJ9XV0sInRhYmxlIjoiam1ldGVyX21ldHJpY3MudGhyZWFkX21ldHJpYyIsInRpbWVDb2x1bW4iOiJcInRpbWVcIiIsInRpbWVDb2x1bW5UeXBlIjoidGltZXN0YW1wIiwid2hlcmUiOlt7Im5hbWUiOiIkX190aW1lRmlsdGVyIiwicGFyYW1zIjpbXSwidHlwZSI6Im1hY3JvIn0seyJkYXRhdHlwZSI6ImludDgiLCJuYW1lIjoiIiwicGFyYW1zIjpbInRlc3RfaWQiLCJJTiIsIigke3Rlc3RJZDpzcWxzdHJpbmd9KSJdLCJ0eXBlIjoiZXhwcmVzc2lvbiJ9XX0seyJmb3JtYXQiOiJ0aW1lX3NlcmllcyIsImdyb3VwIjpbXSwiaGlkZSI6ZmFsc2UsIm1ldHJpY0NvbHVtbiI6Im5vbmUiLCJyYXdRdWVyeSI6dHJ1ZSwicmF3U3FsIjoiU0VMRUNUIFxuICB0aW1lICsgaW50ZXJ2YWwgJyR7YWdncmVnYXRpb25faW50ZXJ2YWx9cycgYXMgdGltZSxcbiAgXCJlcnJfcHNcIixcbiAgXCJtZXRyaWNcIlxuRlJPTSAoXG4gIFNFTEVDVFxuICAgIHRpbWVfYnVja2V0KCcke2FnZ3JlZ2F0aW9uX2ludGVydmFsfXMnLCBcInRpbWVzdGFtcFwiKSBhcyB0aW1lLFxuICAgIHN1bShjb3VudCk6OmRlY2ltYWwgLyAke2FnZ3JlZ2F0aW9uX2ludGVydmFsfSBBUyBcImVycl9wc1wiLFxuICAgIGNvbmNhdCgnRXJyb3JzIC8gcyAnLCB0ZXN0X2lkKSBhcyBcIm1ldHJpY1wiXG4gIEZST00gam1ldGVyX21ldHJpY3Muc2FtcGxlX2Vycm9yX21ldHJpY1xuICBXSEVSRVxuICAgICRfX3RpbWVGaWx0ZXIodGltZXN0YW1wKSBBTkRcbiAgICAoLTk5OTkgaW4gKCR7dGVzdElkOnNxbHN0cmluZ30pIE9SIHRlc3RfaWQgaW4gKCR7dGVzdElkOnNxbHN0cmluZ30pKSBBTkRcbiAgICAoJyUlYWxsJSUnIGluICgke2xvY2F0aW9uOnNxbHN0cmluZ30pIE9SIGxvY2F0aW9uIElOICgke2xvY2F0aW9uOnNxbHN0cmluZ30pKSBBTkRcbiAgICBub3QgaXNfdHJhbnNhY3Rpb25cbiAgR1JPVVAgQlkgMSwgdGVzdF9pZFxuICBPUkRFUiBCWSAxXG4pIHN1YiIsInJlZklkIjoiRXJyb3JzIHBlciBzZWNvbmQiLCJzZWxlY3QiOltbeyJwYXJhbXMiOlsidmFsdWUiXSwidHlwZSI6ImNvbHVtbiJ9XV0sInRpbWVDb2x1bW4iOiJ0aW1lIiwid2hlcmUiOlt7Im5hbWUiOiIkX190aW1lRmlsdGVyIiwicGFyYW1zIjpbXSwidHlwZSI6Im1hY3JvIn1dfV0sInRpbWVGcm9tIjpudWxsLCJ0aW1lU2hpZnQiOm51bGwsInRpdGxlIjoiRXJyb3JzIHBlciBzZWNvbmQiLCJ0cmFuc2Zvcm1hdGlvbnMiOltdLCJ0eXBlIjoidGltZXNlcmllcyJ9LHsiZGF0YXNvdXJjZSI6InRlYW1fMTNfcHVibGljX3RpbWVzY2FsZSIsImZpZWxkQ29uZmlnIjp7ImRlZmF1bHRzIjp7ImNvbG9yIjp7Im1vZGUiOiJwYWxldHRlLWNsYXNzaWMifSwiY3VzdG9tIjp7ImF4aXNDZW50ZXJlZFplcm8iOmZhbHNlLCJheGlzQ29sb3JNb2RlIjoidGV4dCIsImF4aXNMYWJlbCI6IlRocmVhZHMiLCJheGlzUGxhY2VtZW50IjoiYXV0byIsImJhckFsaWdubWVudCI6MCwiZHJhd1N0eWxlIjoibGluZSIsImZpbGxPcGFjaXR5Ijo3MCwiZ3JhZGllbnRNb2RlIjoib3BhY2l0eSIsImhpZGVGcm9tIjp7ImxlZ2VuZCI6ZmFsc2UsInRvb2x0aXAiOmZhbHNlLCJ2aXoiOmZhbHNlfSwiaW5zZXJ0TnVsbHMiOmZhbHNlLCJsaW5lSW50ZXJwb2xhdGlvbiI6ImxpbmVhciIsImxpbmVXaWR0aCI6MSwicG9pbnRTaXplIjo1LCJzY2FsZURpc3RyaWJ1dGlvbiI6eyJ0eXBlIjoibGluZWFyIn0sInNob3dQb2ludHMiOiJuZXZlciIsInNwYW5OdWxscyI6ZmFsc2UsInN0YWNraW5nIjp7Imdyb3VwIjoiQSIsIm1vZGUiOiJub25lIn0sInRocmVzaG9sZHNTdHlsZSI6eyJtb2RlIjoib2ZmIn19LCJtYXBwaW5ncyI6W10sInRocmVzaG9sZHMiOnsibW9kZSI6ImFic29sdXRlIiwic3RlcHMiOlt7ImNvbG9yIjoiZ3JlZW4iLCJ2YWx1ZSI6bnVsbH0seyJjb2xvciI6InJlZCIsInZhbHVlIjo4MH1dfSwidW5pdCI6Im5vbmUifSwib3ZlcnJpZGVzIjpbXX0sImdyaWRQb3MiOnsiaCI6NywidyI6OCwieCI6MTYsInkiOjh9LCJpZCI6MTQsImludGVydmFsIjoiW1tzZW5kX2ludGVydmFsXV1zIiwib3B0aW9ucyI6eyJsZWdlbmQiOnsiY2FsY3MiOltdLCJkaXNwbGF5TW9kZSI6Imxpc3QiLCJwbGFjZW1lbnQiOiJib3R0b20iLCJzaG93TGVnZW5kIjpmYWxzZX0sInRvb2x0aXAiOnsibW9kZSI6Im11bHRpIiwic29ydCI6Im5vbmUifX0sInBsdWdpblZlcnNpb24iOiIxMC4xLjUiLCJ0YXJnZXRzIjpbeyJmb3JtYXQiOiJ0aW1lX3NlcmllcyIsImdyb3VwIjpbeyJwYXJhbXMiOlsiJF9faW50ZXJ2YWwiLCIwIl0sInR5cGUiOiJ0aW1lIn1dLCJtZXRyaWNDb2x1bW4iOiJub25lIiwicXVlcnlUeXBlIjoicmFuZG9tV2FsayIsInJhd1F1ZXJ5Ijp0cnVlLCJyYXdTcWwiOiJTRUxFQ1QgXG4gIGF0LnRpbWUgKyBpbnRlcnZhbCAnJHthZ2dyZWdhdGlvbl9pbnRlcnZhbH1zJyBhcyB0aW1lLCBcbiAgc3VtKGF0LnRocmVhZHMpIGFzIFwiVGhyZWFkc1wiLFxuICBjb25jYXQoJ1RocmVhZHMgJywgdGVzdF9pZClcbkZST00gKFxuICBTRUxFQ1QgdGltZV9idWNrZXQoJyR7YWdncmVnYXRpb25faW50ZXJ2YWx9cycsIFwidGltZXN0YW1wXCIpIGFzIHRpbWUsXG4gIGxvY2YobGFzdCh0aHJlYWRzLCB0aW1lc3RhbXApKSBhcyBcInRocmVhZHNcIixcbiAgdGVzdF9pZFxuICBGUk9NIGptZXRlcl9tZXRyaWNzLnRocmVhZF9tZXRyaWNcbiAgV0hFUkVcbiAgJF9fdGltZUZpbHRlcih0aW1lc3RhbXApIEFORFxuICAoLTk5OTkgaW4gKCR7dGVzdElkOnNxbHN0cmluZ30pIE9SIHRlc3RfaWQgaW4gKCR7dGVzdElkOnNxbHN0cmluZ30pKSBBTkRcbiAgKCclJWFsbCUlJyBpbiAoJHtsb2NhdGlvbjpzcWxzdHJpbmd9KSBPUiBsb2NhdGlvbiBJTiAoJHtsb2NhdGlvbjpzcWxzdHJpbmd9KSlcbiAgR1JPVVAgQlkgMSwgY29udGFpbmVyX2lkLCB0ZXN0X2lkXG4gIE9SREVSIEJZIDFcbikgYXRcbkdST1VQIEJZIDEsIHRlc3RfaWRcbk9SREVSIEJZIDEiLCJyZWZJZCI6IlRocmVhZHMiLCJzZWxlY3QiOltbeyJwYXJhbXMiOlsic3RhcnRlZF90aHJlYWRzIl0sInR5cGUiOiJjb2x1bW4ifSx7InBhcmFtcyI6WyJzdW0iXSwidHlwZSI6ImFnZ3JlZ2F0ZSJ9LHsicGFyYW1zIjpbInN0Il0sInR5cGUiOiJhbGlhcyJ9XV0sInRhYmxlIjoiam1ldGVyX21ldHJpY3MudGhyZWFkX21ldHJpYyIsInRpbWVDb2x1bW4iOiJcInRpbWVcIiIsInRpbWVDb2x1bW5UeXBlIjoidGltZXN0YW1wIiwid2hlcmUiOlt7Im5hbWUiOiIkX190aW1lRmlsdGVyIiwicGFyYW1zIjpbXSwidHlwZSI6Im1hY3JvIn0seyJkYXRhdHlwZSI6ImludDgiLCJuYW1lIjoiIiwicGFyYW1zIjpbInRlc3RfaWQiLCJJTiIsIigke3Rlc3RJZDpzcWxzdHJpbmd9KSJdLCJ0eXBlIjoiZXhwcmVzc2lvbiJ9XX1dLCJ0aW1lRnJvbSI6bnVsbCwidGltZVNoaWZ0IjpudWxsLCJ0aXRsZSI6IkFjdGl2ZSB0aHJlYWRzIiwidHJhbnNmb3JtYXRpb25zIjpbXSwidHlwZSI6InRpbWVzZXJpZXMifSx7ImRhdGFzb3VyY2UiOiJ0ZWFtXzEzX3B1YmxpY190aW1lc2NhbGUiLCJmaWVsZENvbmZpZyI6eyJkZWZhdWx0cyI6eyJjb2xvciI6eyJtb2RlIjoicGFsZXR0ZS1jbGFzc2ljIn0sImN1c3RvbSI6eyJheGlzQ2VudGVyZWRaZXJvIjpmYWxzZSwiYXhpc0NvbG9yTW9kZSI6InRleHQiLCJheGlzTGFiZWwiOiJSZXNwb25zZSB0aW1lIiwiYXhpc1BsYWNlbWVudCI6ImF1dG8iLCJiYXJBbGlnbm1lbnQiOjAsImRyYXdTdHlsZSI6ImxpbmUiLCJmaWxsT3BhY2l0eSI6MjAsImdyYWRpZW50TW9kZSI6Im9wYWNpdHkiLCJoaWRlRnJvbSI6eyJsZWdlbmQiOmZhbHNlLCJ0b29sdGlwIjpmYWxzZSwidml6IjpmYWxzZX0sImluc2VydE51bGxzIjpmYWxzZSwibGluZUludGVycG9sYXRpb24iOiJsaW5lYXIiLCJsaW5lV2lkdGgiOjEsInBvaW50U2l6ZSI6NSwic2NhbGVEaXN0cmlidXRpb24iOnsidHlwZSI6ImxpbmVhciJ9LCJzaG93UG9pbnRzIjoibmV2ZXIiLCJzcGFuTnVsbHMiOnRydWUsInN0YWNraW5nIjp7Imdyb3VwIjoiQSIsIm1vZGUiOiJub25lIn0sInRocmVzaG9sZHNTdHlsZSI6eyJtb2RlIjoib2ZmIn19LCJtYXBwaW5ncyI6W10sInRocmVzaG9sZHMiOnsibW9kZSI6ImFic29sdXRlIiwic3RlcHMiOlt7ImNvbG9yIjoiZ3JlZW4iLCJ2YWx1ZSI6bnVsbH0seyJjb2xvciI6InJlZCIsInZhbHVlIjo4MH1dfSwidW5pdCI6Im1zIn0sIm92ZXJyaWRlcyI6W3sibWF0Y2hlciI6eyJpZCI6ImJ5TmFtZSIsIm9wdGlvbnMiOiJUaHJlYWRzIn0sInByb3BlcnRpZXMiOlt7ImlkIjoidW5pdCIsInZhbHVlIjoic2hvcnQifV19LHsibWF0Y2hlciI6eyJpZCI6ImJ5UmVnZXhwIiwib3B0aW9ucyI6Ii9UaHJlYWRzLiovIn0sInByb3BlcnRpZXMiOlt7ImlkIjoiY3VzdG9tLmxpbmVXaWR0aCIsInZhbHVlIjozfSx7ImlkIjoidW5pdCIsInZhbHVlIjoic2hvcnQifSx7ImlkIjoiY3VzdG9tLmF4aXNMYWJlbCIsInZhbHVlIjoiVGhyZWFkcyJ9XX1dfSwiZ3JpZFBvcyI6eyJoIjo3LCJ3IjoyNCwieCI6MCwieSI6MTV9LCJpZCI6MTUsImludGVydmFsIjoiW1tzZW5kX2ludGVydmFsXV1zIiwib3B0aW9ucyI6eyJsZWdlbmQiOnsiY2FsY3MiOlsibWVhbiIsIm1heCJdLCJkaXNwbGF5TW9kZSI6InRhYmxlIiwicGxhY2VtZW50IjoicmlnaHQiLCJzaG93TGVnZW5kIjp0cnVlfSwidG9vbHRpcCI6eyJtb2RlIjoibXVsdGkiLCJzb3J0Ijoibm9uZSJ9fSwicGx1Z2luVmVyc2lvbiI6IjEwLjEuNSIsInRhcmdldHMiOlt7ImZvcm1hdCI6InRpbWVfc2VyaWVzIiwiZ3JvdXAiOlt7InBhcmFtcyI6WyIkX19pbnRlcnZhbCIsIjAiXSwidHlwZSI6InRpbWUifV0sIm1ldHJpY0NvbHVtbiI6Im5vbmUiLCJxdWVyeVR5cGUiOiJyYW5kb21XYWxrIiwicmF3UXVlcnkiOnRydWUsInJhd1NxbCI6IlNFTEVDVCBcbiAgYXQudGltZSArIGludGVydmFsICcke2FnZ3JlZ2F0aW9uX2ludGVydmFsfXMnIGFzIFwidGltZVwiLCBcbiAgc3VtKGF0LnRocmVhZHMpIGFzIFwidGhyZWFkc1wiLFxuICBjb25jYXQoJ1RocmVhZHMgJywgdGVzdF9pZCkgYXMgXCJtZXRyaWNcIlxuRlJPTSAoXG4gIFNFTEVDVCBcbiAgdGltZV9idWNrZXQoJyR7YWdncmVnYXRpb25faW50ZXJ2YWx9cycsIFwidGltZXN0YW1wXCIpIGFzIHRpbWUsXG4gIGxvY2YobGFzdCh0aHJlYWRzLCB0aW1lc3RhbXApKSBhcyBcInRocmVhZHNcIixcbiAgdGVzdF9pZFxuICBGUk9NIGptZXRlcl9tZXRyaWNzLnRocmVhZF9tZXRyaWNcbiAgV0hFUkVcbiAgJF9fdGltZUZpbHRlcih0aW1lc3RhbXApIEFORFxuICAoLTk5OTkgaW4gKCR7dGVzdElkOnNxbHN0cmluZ30pIE9SIHRlc3RfaWQgaW4gKCR7dGVzdElkOnNxbHN0cmluZ30pKSBBTkRcbiAgKCclJWFsbCUlJyBpbiAoJHtsb2NhdGlvbjpzcWxzdHJpbmd9KSBPUiBsb2NhdGlvbiBJTiAoJHtsb2NhdGlvbjpzcWxzdHJpbmd9KSlcbiAgR1JPVVAgQlkgMSwgdGVzdF9pZCwgY29udGFpbmVyX2lkXG4gIE9SREVSIEJZIDFcbikgYXRcbkdST1VQIEJZIDEsIHRlc3RfaWRcbk9SREVSIEJZIDEiLCJyZWZJZCI6IlRocmVhZHMiLCJzZWxlY3QiOltbeyJwYXJhbXMiOlsic3RhcnRlZF90aHJlYWRzIl0sInR5cGUiOiJjb2x1bW4ifSx7InBhcmFtcyI6WyJzdW0iXSwidHlwZSI6ImFnZ3JlZ2F0ZSJ9LHsicGFyYW1zIjpbInN0Il0sInR5cGUiOiJhbGlhcyJ9XV0sInRhYmxlIjoiam1ldGVyX21ldHJpY3MudGhyZWFkX21ldHJpYyIsInRpbWVDb2x1bW4iOiJcInRpbWVcIiIsInRpbWVDb2x1bW5UeXBlIjoidGltZXN0YW1wIiwid2hlcmUiOlt7Im5hbWUiOiIkX190aW1lRmlsdGVyIiwicGFyYW1zIjpbXSwidHlwZSI6Im1hY3JvIn0seyJkYXRhdHlwZSI6ImludDgiLCJuYW1lIjoiIiwicGFyYW1zIjpbInRlc3RfaWQiLCJJTiIsIigke3Rlc3RJZDpzcWxzdHJpbmd9KSJdLCJ0eXBlIjoiZXhwcmVzc2lvbiJ9XX0seyJmb3JtYXQiOiJ0aW1lX3NlcmllcyIsImdyb3VwIjpbXSwiaGlkZSI6ZmFsc2UsIm1ldHJpY0NvbHVtbiI6Im5vbmUiLCJyYXdRdWVyeSI6dHJ1ZSwicmF3U3FsIjoiU0VMRUNUIFxyXG4gIHRpbWUgKyBpbnRlcnZhbCAnJHthZ2dyZWdhdGlvbl9pbnRlcnZhbH1zJyBhcyB0aW1lLFxyXG4gIHN1Yi5wY3QgYXMgXCJwY3RcIixcclxuICBzdWIudHJhbnNhY3Rpb24gYXMgXCJtZXRyaWNcIlxyXG5GUk9NIChTRUxFQ1QgIHRpbWVfYnVja2V0KCcke2FnZ3JlZ2F0aW9uX2ludGVydmFsfXMnLCBcInRpbWVzdGFtcFwiKSBhcyB0aW1lLFxuICBtYXgocGN0OTUpIGFzIFwicGN0XCIsXG4gIGNvbmNhdCgnUENUIDk1ICcsIHRocmVhZF9ncm91cF9uYW1lLCAnICcsIG5hbWUsICcgJywgdGVzdF9pZCkgYXMgXCJ0cmFuc2FjdGlvblwiXG4gIEZST00gam1ldGVyX21ldHJpY3Muc2FtcGxlX21ldHJpY1xuICBXSEVSRVxuICAkX190aW1lRmlsdGVyKHRpbWVzdGFtcCkgQU5EXG4gICgtOTk5OSBpbiAoJHt0ZXN0SWQ6c3Fsc3RyaW5nfSkgT1IgdGVzdF9pZCBpbiAoJHt0ZXN0SWQ6c3Fsc3RyaW5nfSkpIEFORFxuICBpc190cmFuc2FjdGlvbiBpbiAoJHtpbmNsdWRlX2luX3Jlc3VsdH0pIEFORFxuICAoJyUlYWxsJSUnIGluICgke2xvY2F0aW9uOnNxbHN0cmluZ30pIE9SIGxvY2F0aW9uIElOICgke2xvY2F0aW9uOnNxbHN0cmluZ30pKVxuICBHUk9VUCBCWSAxLCB0aHJlYWRfZ3JvdXBfbmFtZSwgbmFtZSwgdGVzdF9pZFxuICBPUkRFUiBCWSAxXHJcbikgc3ViIiwicmVmSWQiOiJQQ1Q5NSIsInNlbGVjdCI6W1t7InBhcmFtcyI6WyJ2YWx1ZSJdLCJ0eXBlIjoiY29sdW1uIn1dXSwidGltZUNvbHVtbiI6InRpbWUiLCJ3aGVyZSI6W3sibmFtZSI6IiRfX3RpbWVGaWx0ZXIiLCJwYXJhbXMiOltdLCJ0eXBlIjoibWFjcm8ifV19XSwidGltZUZyb20iOm51bGwsInRpbWVTaGlmdCI6bnVsbCwidGl0bGUiOiJSZXNwb25zZSBUaW1lICg5NXRoIHBjdCkiLCJ0cmFuc2Zvcm1hdGlvbnMiOltdLCJ0eXBlIjoidGltZXNlcmllcyJ9LHsiZGF0YXNvdXJjZSI6InRlYW1fMTNfcHVibGljX3RpbWVzY2FsZSIsImZpZWxkQ29uZmlnIjp7ImRlZmF1bHRzIjp7ImNvbG9yIjp7Im1vZGUiOiJwYWxldHRlLWNsYXNzaWMifSwiY3VzdG9tIjp7ImF4aXNDZW50ZXJlZFplcm8iOmZhbHNlLCJheGlzQ29sb3JNb2RlIjoidGV4dCIsImF4aXNMYWJlbCI6IiIsImF4aXNQbGFjZW1lbnQiOiJhdXRvIiwiYmFyQWxpZ25tZW50IjowLCJkcmF3U3R5bGUiOiJsaW5lIiwiZmlsbE9wYWNpdHkiOjIwLCJncmFkaWVudE1vZGUiOiJvcGFjaXR5IiwiaGlkZUZyb20iOnsibGVnZW5kIjpmYWxzZSwidG9vbHRpcCI6ZmFsc2UsInZpeiI6ZmFsc2V9LCJpbnNlcnROdWxscyI6ZmFsc2UsImxpbmVJbnRlcnBvbGF0aW9uIjoibGluZWFyIiwibGluZVdpZHRoIjoxLCJwb2ludFNpemUiOjUsInNjYWxlRGlzdHJpYnV0aW9uIjp7InR5cGUiOiJsaW5lYXIifSwic2hvd1BvaW50cyI6Im5ldmVyIiwic3Bhbk51bGxzIjp0cnVlLCJzdGFja2luZyI6eyJncm91cCI6IkEiLCJtb2RlIjoibm9uZSJ9LCJ0aHJlc2hvbGRzU3R5bGUiOnsibW9kZSI6Im9mZiJ9fSwibWFwcGluZ3MiOltdLCJ0aHJlc2hvbGRzIjp7Im1vZGUiOiJhYnNvbHV0ZSIsInN0ZXBzIjpbeyJjb2xvciI6ImdyZWVuIiwidmFsdWUiOm51bGx9LHsiY29sb3IiOiJyZWQiLCJ2YWx1ZSI6ODB9XX0sInVuaXQiOiJieXRlcyJ9LCJvdmVycmlkZXMiOltdfSwiZ3JpZFBvcyI6eyJoIjo3LCJ3IjoyNCwieCI6MCwieSI6MjJ9LCJpZCI6MTYsImludGVydmFsIjoiW1tzZW5kX2ludGVydmFsXV1zIiwib3B0aW9ucyI6eyJsZWdlbmQiOnsiY2FsY3MiOlsibWVhbiIsIm1heCIsInN1bSJdLCJkaXNwbGF5TW9kZSI6InRhYmxlIiwicGxhY2VtZW50IjoicmlnaHQiLCJzaG93TGVnZW5kIjp0cnVlfSwidG9vbHRpcCI6eyJtb2RlIjoibXVsdGkiLCJzb3J0Ijoibm9uZSJ9fSwicGx1Z2luVmVyc2lvbiI6IjEwLjEuNSIsInRhcmdldHMiOlt7ImZvcm1hdCI6InRpbWVfc2VyaWVzIiwiZ3JvdXAiOlt7InBhcmFtcyI6WyIkX19pbnRlcnZhbCIsIjAiXSwidHlwZSI6InRpbWUifV0sIm1ldHJpY0NvbHVtbiI6Im5vbmUiLCJxdWVyeVR5cGUiOiJyYW5kb21XYWxrIiwicmF3UXVlcnkiOnRydWUsInJhd1NxbCI6IlNFTEVDVCBcclxuICB0aW1lICsgaW50ZXJ2YWwgJyR7YWdncmVnYXRpb25faW50ZXJ2YWx9cycgYXMgdGltZSxcclxuICBcInNlbnRcIiBhcyBcIlNlbnQgYnl0ZXNcIixcclxuICBcIm1ldHJpY1wiXG5GUk9NIChTRUxFQ1QgdGltZV9idWNrZXQoJyR7YWdncmVnYXRpb25faW50ZXJ2YWx9cycsIFwidGltZXN0YW1wXCIpIGFzIHRpbWUsXHJcbiAgc3VtKHNlbnRfYnl0ZXMpIGFzIFwic2VudFwiLFxyXG4gIGNvbmNhdCgnU2VudCAnLCB0aHJlYWRfZ3JvdXBfbmFtZSwgJyAnLCBuYW1lLCAnICcsIHRlc3RfaWQpIGFzIFwibWV0cmljXCJcclxuICBGUk9NIGptZXRlcl9tZXRyaWNzLnNhbXBsZV9tZXRyaWNcclxuICBXSEVSRVxyXG4gICRfX3RpbWVGaWx0ZXIodGltZXN0YW1wKSBBTkRcclxuICAoLTk5OTkgaW4gKCR7dGVzdElkOnNxbHN0cmluZ30pIE9SIHRlc3RfaWQgaW4gKCR7dGVzdElkOnNxbHN0cmluZ30pKSBBTkRcclxuICBpc190cmFuc2FjdGlvbiBpbiAoJHtpbmNsdWRlX2luX3Jlc3VsdH0pIEFORFxyXG4gICgnJSVhbGwlJScgaW4gKCR7bG9jYXRpb246c3Fsc3RyaW5nfSkgT1IgbG9jYXRpb24gSU4gKCR7bG9jYXRpb246c3Fsc3RyaW5nfSkpXHJcbiAgR1JPVVAgQlkgMSwgdGhyZWFkX2dyb3VwX25hbWUsIG5hbWUsIHRlc3RfaWRcclxuICBPUkRFUiBCWSAxXHJcbiAgKSBzdWIiLCJyZWZJZCI6IlNlbnQgYnl0ZXMiLCJzZWxlY3QiOltbeyJwYXJhbXMiOlsic3RhcnRlZF90aHJlYWRzIl0sInR5cGUiOiJjb2x1bW4ifSx7InBhcmFtcyI6WyJzdW0iXSwidHlwZSI6ImFnZ3JlZ2F0ZSJ9LHsicGFyYW1zIjpbInN0Il0sInR5cGUiOiJhbGlhcyJ9XV0sInRhYmxlIjoiam1ldGVyX21ldHJpY3MudGhyZWFkX21ldHJpYyIsInRpbWVDb2x1bW4iOiJcInRpbWVcIiIsInRpbWVDb2x1bW5UeXBlIjoidGltZXN0YW1wIiwid2hlcmUiOlt7Im5hbWUiOiIkX190aW1lRmlsdGVyIiwicGFyYW1zIjpbXSwidHlwZSI6Im1hY3JvIn0seyJkYXRhdHlwZSI6ImludDgiLCJuYW1lIjoiIiwicGFyYW1zIjpbInRlc3RfaWQiLCJJTiIsIigke3Rlc3RJZDpzcWxzdHJpbmd9KSJdLCJ0eXBlIjoiZXhwcmVzc2lvbiJ9XX0seyJmb3JtYXQiOiJ0aW1lX3NlcmllcyIsImdyb3VwIjpbXSwiaGlkZSI6ZmFsc2UsIm1ldHJpY0NvbHVtbiI6Im5vbmUiLCJyYXdRdWVyeSI6dHJ1ZSwicmF3U3FsIjoiU0VMRUNUIFxyXG4gIHRpbWUgKyBpbnRlcnZhbCAnJHthZ2dyZWdhdGlvbl9pbnRlcnZhbH1zJyBhcyB0aW1lLFxyXG4gIFwicmVjZWl2ZWRcIiBhcyBcIlJlY2VpdmVkIGJ5dGVzXCIsXHJcbiAgXCJtZXRyaWNcIiBcclxuRlJPTSAoU0VMRUNUIHRpbWVfYnVja2V0KCcke2FnZ3JlZ2F0aW9uX2ludGVydmFsfXMnLCBcInRpbWVzdGFtcFwiKSBhcyB0aW1lLFxyXG4gIHN1bShyZWNlaXZlZF9ieXRlcykgYXMgXCJyZWNlaXZlZFwiLFxyXG4gIGNvbmNhdCgnUmVjZWl2ZWQgJywgdGhyZWFkX2dyb3VwX25hbWUsICcgJywgbmFtZSwgJyAnLCB0ZXN0X2lkKSBhcyBcIm1ldHJpY1wiXHJcbiAgRlJPTSBqbWV0ZXJfbWV0cmljcy5zYW1wbGVfbWV0cmljXHJcbiAgV0hFUkVcclxuICAkX190aW1lRmlsdGVyKHRpbWVzdGFtcCkgQU5EXHJcbiAgKC05OTk5IGluICgke3Rlc3RJZDpzcWxzdHJpbmd9KSBPUiB0ZXN0X2lkIGluICgke3Rlc3RJZDpzcWxzdHJpbmd9KSkgQU5EXHJcbiAgaXNfdHJhbnNhY3Rpb24gaW4gKCR7aW5jbHVkZV9pbl9yZXN1bHR9KSBBTkRcclxuICAoJyUlYWxsJSUnIGluICgke2xvY2F0aW9uOnNxbHN0cmluZ30pIE9SIGxvY2F0aW9uIElOICgke2xvY2F0aW9uOnNxbHN0cmluZ30pKVxyXG4gIEdST1VQIEJZIDEsIHRocmVhZF9ncm91cF9uYW1lLCBuYW1lLCB0ZXN0X2lkXHJcbiAgT1JERVIgQlkgMVxyXG4pIHN1YiIsInJlZklkIjoiUmVjZWl2ZWQgYnl0ZXMiLCJzZWxlY3QiOltbeyJwYXJhbXMiOlsidmFsdWUiXSwidHlwZSI6ImNvbHVtbiJ9XV0sInRpbWVDb2x1bW4iOiJ0aW1lIiwid2hlcmUiOlt7Im5hbWUiOiIkX190aW1lRmlsdGVyIiwicGFyYW1zIjpbXSwidHlwZSI6Im1hY3JvIn1dfV0sInRpbWVGcm9tIjpudWxsLCJ0aW1lU2hpZnQiOm51bGwsInRpdGxlIjoiTmV0d29yayBUcmFmZmljIiwidHJhbnNmb3JtYXRpb25zIjpbXSwidHlwZSI6InRpbWVzZXJpZXMifSx7ImRhdGFzb3VyY2UiOiJ0ZWFtXzEzX3B1YmxpY190aW1lc2NhbGUiLCJmaWVsZENvbmZpZyI6eyJkZWZhdWx0cyI6eyJjb2xvciI6eyJtb2RlIjoidGhyZXNob2xkcyJ9LCJjdXN0b20iOnsiYWxpZ24iOiJjZW50ZXIiLCJmaWx0ZXJhYmxlIjpmYWxzZX0sIm1hcHBpbmdzIjpbXSwidGhyZXNob2xkcyI6eyJtb2RlIjoiYWJzb2x1dGUiLCJzdGVwcyI6W3siY29sb3IiOiJncmVlbiIsInZhbHVlIjpudWxsfV19fSwib3ZlcnJpZGVzIjpbXX0sImdyaWRQb3MiOnsiaCI6OCwidyI6MjQsIngiOjAsInkiOjI5fSwiaWQiOjU3LCJvcHRpb25zIjp7InNob3dIZWFkZXIiOnRydWUsInNvcnRCeSI6W3siZGVzYyI6ZmFsc2UsImRpc3BsYXlOYW1lIjoiVHJhbnNhY3Rpb24ifV19LCJwbHVnaW5WZXJzaW9uIjoiMTAuMS41IiwidGFyZ2V0cyI6W3siZm9ybWF0IjoidGFibGUiLCJncm91cCI6W10sIm1ldHJpY0NvbHVtbiI6Im5vbmUiLCJxdWVyeVR5cGUiOiJyYW5kb21XYWxrIiwicmF3UXVlcnkiOnRydWUsInJhd1NxbCI6IldJVEggdGVzdF8xX3RyYW5zYWN0aW9uX3RvdGFsIEFTIChTRUxFQ1QgdGhyZWFkX2dyb3VwX25hbWUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIG5hbWUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN1bShjb3VudCkgQVMgXCJjb3VudFwiXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgRlJPTSBqbWV0ZXJfbWV0cmljcy5zYW1wbGVfbWV0cmljXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgV0hFUkUgJF9fdGltZUZpbHRlcih0aW1lc3RhbXApXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBBTkQgKC05OTk5IGluICgke3Rlc3RJZDpzcWxzdHJpbmd9KSBPUiB0ZXN0X2lkIGluICgke3Rlc3RJZDpzcWxzdHJpbmd9KSlcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEFORCAoJyUlYWxsJSUnIGluICgke2xvY2F0aW9uOnNxbHN0cmluZ30pIE9SIGxvY2F0aW9uIElOICgke2xvY2F0aW9uOnNxbHN0cmluZ30pKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgQU5EIGlzX3RyYW5zYWN0aW9uXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgR1JPVVAgQlkgdGhyZWFkX2dyb3VwX25hbWUsIG5hbWUpLFxuICAgICB0ZXN0XzFfdHJhbnNhY3Rpb25fZmFpbGVkIEFTIChTRUxFQ1QgdGhyZWFkX2dyb3VwX25hbWUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3VtKGNvdW50KSBBUyBcImNvdW50XCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgRlJPTSBqbWV0ZXJfbWV0cmljcy5zYW1wbGVfZXJyb3JfbWV0cmljXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFdIRVJFICRfX3RpbWVGaWx0ZXIodGltZXN0YW1wKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEFORCAoLTk5OTkgaW4gKCR7dGVzdElkOnNxbHN0cmluZ30pIE9SIHRlc3RfaWQgaW4gKCR7dGVzdElkOnNxbHN0cmluZ30pKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEFORCAoJyUlYWxsJSUnIGluICgke2xvY2F0aW9uOnNxbHN0cmluZ30pIE9SIGxvY2F0aW9uIElOICgke2xvY2F0aW9uOnNxbHN0cmluZ30pKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEFORCBpc190cmFuc2FjdGlvblxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBHUk9VUCBCWSB0aHJlYWRfZ3JvdXBfbmFtZSwgbmFtZSlcblNFTEVDVCB0MS50aHJlYWRfZ3JvdXBfbmFtZSAgICAgICAgICAgICBBUyBcIlRocmVhZCBHcm91cCBOYW1lXCIsXG4gICAgICAgdDEubmFtZSAgICAgICAgICAgICAgICAgICAgICAgICAgQVMgXCJUcmFuc2FjdGlvblwiLFxuICAgICAgIHQxLmNvdW50ICAgICAgICAgICAgICAgICAgICAgICAgIEFTIFwiVHJhbnNhY3Rpb24gdG90YWwgY291bnRcIixcbiAgICAgICB0MS5jb3VudCAtIENPQUxFU0NFKHQyLmNvdW50LCAwKSBBUyBcIlRyYW5zYWN0aW9uIHN1Y2Nlc3MgY291bnRcIixcbiAgICAgICBDT0FMRVNDRSh0Mi5jb3VudCwgMCkgICAgICAgICAgICBBUyBcIlRyYW5zYWN0aW9uIGZhaWxlZCBjb3VudFwiXG5GUk9NIHRlc3RfMV90cmFuc2FjdGlvbl90b3RhbCB0MVxuTEVGVCBKT0lOIHRlc3RfMV90cmFuc2FjdGlvbl9mYWlsZWQgdDJcbiAgT04gdDEudGhyZWFkX2dyb3VwX25hbWUgPSB0Mi50aHJlYWRfZ3JvdXBfbmFtZVxuIEFORCB0MS5uYW1lID0gdDIubmFtZTsiLCJyZWZJZCI6IkEiLCJzZWxlY3QiOltbeyJwYXJhbXMiOlsidmFsdWUiXSwidHlwZSI6ImNvbHVtbiJ9XV0sInRpbWVDb2x1bW4iOiJ0aW1lIiwid2hlcmUiOlt7Im5hbWUiOiIkX190aW1lRmlsdGVyIiwicGFyYW1zIjpbXSwidHlwZSI6Im1hY3JvIn1dfV0sInRpdGxlIjoiVHJhbnNhY3Rpb24gU3VtbWFyeSIsInR5cGUiOiJ0YWJsZSJ9LHsiZGF0YXNvdXJjZSI6InRlYW1fMTNfcHVibGljX3RpbWVzY2FsZSIsImZpZWxkQ29uZmlnIjp7ImRlZmF1bHRzIjp7ImNvbG9yIjp7Im1vZGUiOiJ0aHJlc2hvbGRzIn0sImN1c3RvbSI6eyJhbGlnbiI6ImNlbnRlciIsImZpbHRlcmFibGUiOmZhbHNlfSwibWFwcGluZ3MiOltdLCJ0aHJlc2hvbGRzIjp7Im1vZGUiOiJhYnNvbHV0ZSIsInN0ZXBzIjpbeyJjb2xvciI6ImdyZWVuIiwidmFsdWUiOm51bGx9XX19LCJvdmVycmlkZXMiOltdfSwiZ3JpZFBvcyI6eyJoIjo4LCJ3IjoyNCwieCI6MCwieSI6Mzd9LCJpZCI6NTgsIm9wdGlvbnMiOnsic2hvd0hlYWRlciI6dHJ1ZSwic29ydEJ5IjpbeyJkZXNjIjpmYWxzZSwiZGlzcGxheU5hbWUiOiJUcmFuc2FjdGlvbiJ9XX0sInBsdWdpblZlcnNpb24iOiIxMC4xLjUiLCJ0YXJnZXRzIjpbeyJmb3JtYXQiOiJ0YWJsZSIsImdyb3VwIjpbXSwibWV0cmljQ29sdW1uIjoibm9uZSIsInF1ZXJ5VHlwZSI6InJhbmRvbVdhbGsiLCJyYXdRdWVyeSI6dHJ1ZSwicmF3U3FsIjoiV0lUSCB0ZXN0XzFfdHJhbnNhY3Rpb25fdG90YWwgQVMgKFNFTEVDVCB0aHJlYWRfZ3JvdXBfbmFtZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgbmFtZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3VtKGNvdW50KSBBUyBcImNvdW50XCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBGUk9NIGptZXRlcl9tZXRyaWNzLnNhbXBsZV9tZXRyaWNcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBXSEVSRSAkX190aW1lRmlsdGVyKHRpbWVzdGFtcClcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEFORCAoLTk5OTkgaW4gKCR7dGVzdElkOnNxbHN0cmluZ30pIE9SIHRlc3RfaWQgaW4gKCR7dGVzdElkOnNxbHN0cmluZ30pKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgQU5EICgnJSVhbGwlJScgaW4gKCR7bG9jYXRpb246c3Fsc3RyaW5nfSkgT1IgbG9jYXRpb24gSU4gKCR7bG9jYXRpb246c3Fsc3RyaW5nfSkpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBBTkQgbm90IGlzX3RyYW5zYWN0aW9uXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgR1JPVVAgQlkgdGhyZWFkX2dyb3VwX25hbWUsIG5hbWUpLFxuICAgICB0ZXN0XzFfdHJhbnNhY3Rpb25fZmFpbGVkIEFTIChTRUxFQ1QgdGhyZWFkX2dyb3VwX25hbWUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgc3VtKGNvdW50KSBBUyBcImNvdW50XCJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgRlJPTSBqbWV0ZXJfbWV0cmljcy5zYW1wbGVfZXJyb3JfbWV0cmljXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFdIRVJFICRfX3RpbWVGaWx0ZXIodGltZXN0YW1wKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEFORCAoLTk5OTkgaW4gKCR7dGVzdElkOnNxbHN0cmluZ30pIE9SIHRlc3RfaWQgaW4gKCR7dGVzdElkOnNxbHN0cmluZ30pKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEFORCAoJyUlYWxsJSUnIGluICgke2xvY2F0aW9uOnNxbHN0cmluZ30pIE9SIGxvY2F0aW9uIElOICgke2xvY2F0aW9uOnNxbHN0cmluZ30pKVxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIEFORCBub3QgaXNfdHJhbnNhY3Rpb25cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgR1JPVVAgQlkgdGhyZWFkX2dyb3VwX25hbWUsIG5hbWUpXG5TRUxFQ1QgdDEudGhyZWFkX2dyb3VwX25hbWUgICAgICAgICAgICAgQVMgXCJUaHJlYWQgR3JvdXAgTmFtZVwiLFxuICAgICAgIHQxLm5hbWUgICAgICAgICAgICAgICAgICAgICAgICAgIEFTIFwiUmVxdWVzdFwiLFxuICAgICAgIHQxLmNvdW50ICAgICAgICAgICAgICAgICAgICAgICAgIEFTIFwiUmVxdWVzdCB0b3RhbCBjb3VudFwiLFxuICAgICAgIHQxLmNvdW50IC0gQ09BTEVTQ0UodDIuY291bnQsIDApIEFTIFwiUmVxdWVzdCBzdWNjZXNzIGNvdW50XCIsXG4gICAgICAgQ09BTEVTQ0UodDIuY291bnQsIDApICAgICAgICAgICAgQVMgXCJSZXF1ZXN0IGZhaWxlZCBjb3VudFwiXG5GUk9NIHRlc3RfMV90cmFuc2FjdGlvbl90b3RhbCB0MVxuTEVGVCBKT0lOIHRlc3RfMV90cmFuc2FjdGlvbl9mYWlsZWQgdDJcbiAgT04gdDEudGhyZWFkX2dyb3VwX25hbWUgPSB0Mi50aHJlYWRfZ3JvdXBfbmFtZVxuIEFORCB0MS5uYW1lID0gdDIubmFtZTsiLCJyZWZJZCI6IkEiLCJzZWxlY3QiOltbeyJwYXJhbXMiOlsidmFsdWUiXSwidHlwZSI6ImNvbHVtbiJ9XV0sInRpbWVDb2x1bW4iOiJ0aW1lIiwid2hlcmUiOlt7Im5hbWUiOiIkX190aW1lRmlsdGVyIiwicGFyYW1zIjpbXSwidHlwZSI6Im1hY3JvIn1dfV0sInRpdGxlIjoiUmVxdWVzdCBTdW1tYXJ5IiwidHlwZSI6InRhYmxlIn0seyJjb2xsYXBzZWQiOnRydWUsImRhdGFzb3VyY2UiOm51bGwsImdyaWRQb3MiOnsiaCI6MSwidyI6MjQsIngiOjAsInkiOjQ1fSwiaWQiOjE4LCJwYW5lbHMiOlt7ImRhdGFzb3VyY2UiOiJ0ZWFtXzEzX3B1YmxpY190aW1lc2NhbGUiLCJmaWVsZENvbmZpZyI6eyJkZWZhdWx0cyI6eyJjb2xvciI6eyJtb2RlIjoidGhyZXNob2xkcyJ9LCJjdXN0b20iOnsiYWxpZ24iOm51bGwsImZpbHRlcmFibGUiOmZhbHNlfSwibWFwcGluZ3MiOltdLCJ0aHJlc2hvbGRzIjp7Im1vZGUiOiJhYnNvbHV0ZSIsInN0ZXBzIjpbeyJjb2xvciI6ImdyZWVuIiwidmFsdWUiOm51bGx9LHsiY29sb3IiOiJyZWQiLCJ2YWx1ZSI6ODB9XX19LCJvdmVycmlkZXMiOltdfSwiZ3JpZFBvcyI6eyJoIjo4LCJ3IjoyNCwieCI6MCwieSI6Mn0sImlkIjoyMiwib3B0aW9ucyI6eyJzaG93SGVhZGVyIjp0cnVlLCJzb3J0QnkiOlt7ImRlc2MiOnRydWUsImRpc3BsYXlOYW1lIjoic3VtIn1dfSwicGx1Z2luVmVyc2lvbiI6IjEwLjEuNSIsInRhcmdldHMiOlt7ImZvcm1hdCI6InRhYmxlIiwiZ3JvdXAiOltdLCJtZXRyaWNDb2x1bW4iOiJub25lIiwicXVlcnlUeXBlIjoicmFuZG9tV2FsayIsInJhd1F1ZXJ5Ijp0cnVlLCJyYXdTcWwiOiJ3aXRoIGVycm9yX21ldHJpYyBhcyAoU0VMRUNUIHRocmVhZF9ncm91cF9uYW1lLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzdW0oY291bnQpIGFzIGNvdW50XG4gICAgICAgICAgICAgICAgICAgICAgRlJPTSBqbWV0ZXJfbWV0cmljcy5zYW1wbGVfZXJyb3JfbWV0cmljXG4gICAgICAgICAgICAgICAgICAgICAgV0hFUkUgJF9fdGltZUZpbHRlcih0aW1lc3RhbXApXG4gICAgICAgICAgICAgICAgICAgICAgICBBTkQgKC05OTk5IGluICgke3Rlc3RJZDpzcWxzdHJpbmd9KSBPUiB0ZXN0X2lkIGluICgke3Rlc3RJZDpzcWxzdHJpbmd9KSkgXG4gICAgICAgICAgICAgICAgICAgICAgICBBTkQgKCclJWFsbCUlJyBpbiAoJHtsb2NhdGlvbjpzcWxzdHJpbmd9KSBPUiBsb2NhdGlvbiBJTiAoJHtsb2NhdGlvbjpzcWxzdHJpbmd9KSlcbiAgICAgICAgICAgICAgICAgICAgICBHUk9VUCBCWSB0aHJlYWRfZ3JvdXBfbmFtZSwgbmFtZSksXG4gICAgIGVycm9yX2RldGFpbCBhcyAoU0VMRUNUIHRocmVhZF9ncm91cF9uYW1lLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuYW1lLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXNwb25zZV9jb2RlLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXNwb25zZV9tZXNzYWdlXG4gICAgICAgICAgICAgICAgICAgICAgRlJPTSBqbWV0ZXJfbWV0cmljcy5zYW1wbGVfZXJyb3JfZGV0YWlsXG4gICAgICAgICAgICAgICAgICAgICAgV0hFUkUgJF9fdGltZUZpbHRlcih0aW1lc3RhbXApXG4gICAgICAgICAgICAgICAgICAgICAgICBBTkQgKC05OTk5IGluICgke3Rlc3RJZDpzcWxzdHJpbmd9KSBPUiB0ZXN0X2lkIGluICgke3Rlc3RJZDpzcWxzdHJpbmd9KSkgXG4gICAgICAgICAgICAgICAgICAgICAgICBBTkQgKCclJWFsbCUlJyBpbiAoJHtsb2NhdGlvbjpzcWxzdHJpbmd9KSBPUiBsb2NhdGlvbiBJTiAoJHtsb2NhdGlvbjpzcWxzdHJpbmd9KSlcbiAgICAgICAgICAgICAgICAgICAgICAgIEFORCAgcmVzcG9uc2VfY29kZSBpcyBub3QgbnVsbFxuICAgICAgICAgICAgICAgICAgICAgIEdST1VQIEJZIHRocmVhZF9ncm91cF9uYW1lLCBuYW1lLCByZXNwb25zZV9jb2RlLCByZXNwb25zZV9tZXNzYWdlKVxuc2VsZWN0IGVtLnRocmVhZF9ncm91cF9uYW1lIGFzIFwiVGhyZWFkIEdyb3VwIE5hbWVcIixcbiAgICAgICBlbS5uYW1lIGFzIFwiVHJhbnNhY3Rpb25cIixcbiAgICAgICBlbS5jb3VudCxcbiAgICAgICBlZC5yZXNwb25zZV9jb2RlLFxuICAgICAgIGVkLnJlc3BvbnNlX21lc3NhZ2VcbmZyb20gZXJyb3JfbWV0cmljIGVtXG5sZWZ0IGpvaW4gZXJyb3JfZGV0YWlsIGVkXG4gIG9uIGVtLnRocmVhZF9ncm91cF9uYW1lID0gZWQudGhyZWFkX2dyb3VwX25hbWVcbiBhbmQgZW0ubmFtZSA9IGVkLm5hbWU7IiwicmVmSWQiOiJBIiwic2VsZWN0IjpbW3sicGFyYW1zIjpbInZhbHVlIl0sInR5cGUiOiJjb2x1bW4ifV1dLCJ0aW1lQ29sdW1uIjoidGltZSIsIndoZXJlIjpbeyJuYW1lIjoiJF9fdGltZUZpbHRlciIsInBhcmFtcyI6W10sInR5cGUiOiJtYWNybyJ9XX1dLCJ0aXRsZSI6IkVycm9yIEluZm8iLCJ0eXBlIjoidGFibGUifV0sInRpdGxlIjoiRXJyb3JzIiwidHlwZSI6InJvdyJ9LHsiY29sbGFwc2VkIjp0cnVlLCJkYXRhc291cmNlIjpudWxsLCJncmlkUG9zIjp7ImgiOjEsInciOjI0LCJ4IjowLCJ5Ijo0Nn0sImlkIjoyNCwicGFuZWxzIjpbeyJkYXRhc291cmNlIjoidGVhbV8xM19wdWJsaWNfdGltZXNjYWxlIiwiZGVzY3JpcHRpb24iOiIiLCJmaWVsZENvbmZpZyI6eyJkZWZhdWx0cyI6eyJjb2xvciI6eyJtb2RlIjoidGhyZXNob2xkcyJ9LCJjdXN0b20iOnt9LCJtYXBwaW5ncyI6W10sIm5vVmFsdWUiOiIwIiwidGhyZXNob2xkcyI6eyJtb2RlIjoiYWJzb2x1dGUiLCJzdGVwcyI6W3siY29sb3IiOiJncmVlbiIsInZhbHVlIjpudWxsfV19fSwib3ZlcnJpZGVzIjpbXX0sImdyaWRQb3MiOnsiaCI6NywidyI6NywieCI6MCwieSI6M30sImlkIjo1Mywib3B0aW9ucyI6eyJjb2xvck1vZGUiOiJ2YWx1ZSIsImdyYXBoTW9kZSI6ImFyZWEiLCJqdXN0aWZ5TW9kZSI6ImF1dG8iLCJvcmllbnRhdGlvbiI6Imhvcml6b250YWwiLCJyZWR1Y2VPcHRpb25zIjp7ImNhbGNzIjpbInN1bSJdLCJmaWVsZHMiOiIiLCJ2YWx1ZXMiOmZhbHNlfSwidGV4dCI6e30sInRleHRNb2RlIjoiYXV0byJ9LCJwbHVnaW5WZXJzaW9uIjoiMTAuMS41IiwidGFyZ2V0cyI6W3siZm9ybWF0IjoidGFibGUiLCJncm91cCI6W3sicGFyYW1zIjpbIiRfX2ludGVydmFsIiwiTlVMTCJdLCJ0eXBlIjoidGltZSJ9XSwibWV0cmljQ29sdW1uIjoibm9uZSIsInF1ZXJ5VHlwZSI6InJhbmRvbVdhbGsiLCJyYXdRdWVyeSI6dHJ1ZSwicmF3U3FsIjoiU0VMRUNUXG4gIHN1bShjb3VudCkgQVMgXCJjb3VudFwiXG5GUk9NIGptZXRlcl9tZXRyaWNzLnNhbXBsZV9tZXRyaWNcbldIRVJFXG4gICRfX3RpbWVGaWx0ZXIodGltZXN0YW1wKSBBTkRcbiAgKC05OTk5IGluICgke3Rlc3RJZDpzcWxzdHJpbmd9KSBPUiB0ZXN0X2lkIGluICgke3Rlc3RJZDpzcWxzdHJpbmd9KSkgQU5EXG4gICgnJSVhbGwlJScgaW4gKCR7bG9jYXRpb246c3Fsc3RyaW5nfSkgT1IgbG9jYXRpb24gSU4gKCR7bG9jYXRpb246c3Fsc3RyaW5nfSkpIEFORFxuICAgaXNfdHJhbnNhY3Rpb24gQU5EXG4gICgnJSVhbGwlJScgaW4gKCR7cmVxdWVzdDpzcWxzdHJpbmd9KSBPUiBuYW1lIElOICgke3JlcXVlc3Q6c3Fsc3RyaW5nfSkpIEFORFxuICBuYW1lIH4gJyR7dHJhbnNhY3Rpb246cmVnZXh9JyBBTkRcbiAgKCclJWFsbCUlJyBpbiAoJHt0aHJlYWRncm91cDpzcWxzdHJpbmd9KSBPUiBcInRocmVhZF9ncm91cF9uYW1lXCIgSU4gKCR7dGhyZWFkZ3JvdXA6c3Fsc3RyaW5nfSkpIiwicmVmSWQiOiJBIiwic2VsZWN0IjpbW3sicGFyYW1zIjpbImNvdW50Il0sInR5cGUiOiJjb2x1bW4ifSx7InBhcmFtcyI6WyJzdW0iXSwidHlwZSI6ImFnZ3JlZ2F0ZSJ9LHsicGFyYW1zIjpbImNvdW50Il0sInR5cGUiOiJhbGlhcyJ9XV0sInRhYmxlIjoiam1ldGVyX21ldHJpY3Muc2FtcGxlX21ldHJpYyIsInRpbWVDb2x1bW4iOiJcInRpbWVcIiIsInRpbWVDb2x1bW5UeXBlIjoidGltZXN0YW1wIiwid2hlcmUiOlt7Im5hbWUiOiIkX190aW1lRmlsdGVyIiwicGFyYW1zIjpbXSwidHlwZSI6Im1hY3JvIn0seyJkYXRhdHlwZSI6ImludDgiLCJuYW1lIjoiIiwicGFyYW1zIjpbInRlc3RfaWQiLCJJTiIsIigke3Rlc3RJZDpzcWxzdHJpbmd9KSJdLCJ0eXBlIjoiZXhwcmVzc2lvbiJ9LHsiZGF0YXR5cGUiOiJ2YXJjaGFyIiwibmFtZSI6IiIsInBhcmFtcyI6WyJsb2NhdGlvbiIsIklOIiwiJGxvY2F0aW9uIl0sInR5cGUiOiJleHByZXNzaW9uIn0seyJkYXRhdHlwZSI6InZhcmNoYXIiLCJuYW1lIjoiIiwicGFyYW1zIjpbInRyYW5zYWN0aW9uIiwiSU4iLCIkdHJhbnNhY3Rpb24iXSwidHlwZSI6ImV4cHJlc3Npb24ifV19XSwidGltZUZyb20iOm51bGwsInRpbWVTaGlmdCI6bnVsbCwidGl0bGUiOiJUcmFuc2FjdGlvbiBUb3RhbCBDb3VudCIsInR5cGUiOiJzdGF0In0seyJkYXRhc291cmNlIjoidGVhbV8xM19wdWJsaWNfdGltZXNjYWxlIiwiZGVzY3JpcHRpb24iOiIiLCJmaWVsZENvbmZpZyI6eyJkZWZhdWx0cyI6eyJjb2xvciI6eyJtb2RlIjoidGhyZXNob2xkcyJ9LCJjdXN0b20iOnt9LCJtYXBwaW5ncyI6W10sIm5vVmFsdWUiOiIwIiwidGhyZXNob2xkcyI6eyJtb2RlIjoiYWJzb2x1dGUiLCJzdGVwcyI6W3siY29sb3IiOiJncmVlbiIsInZhbHVlIjpudWxsfV19fSwib3ZlcnJpZGVzIjpbXX0sImdyaWRQb3MiOnsiaCI6NywidyI6OCwieCI6NywieSI6M30sImlkIjo1NCwib3B0aW9ucyI6eyJjb2xvck1vZGUiOiJ2YWx1ZSIsImdyYXBoTW9kZSI6ImFyZWEiLCJqdXN0aWZ5TW9kZSI6ImF1dG8iLCJvcmllbnRhdGlvbiI6Imhvcml6b250YWwiLCJyZWR1Y2VPcHRpb25zIjp7ImNhbGNzIjpbInN1bSJdLCJmaWVsZHMiOiIiLCJ2YWx1ZXMiOmZhbHNlfSwidGV4dCI6e30sInRleHRNb2RlIjoiYXV0byJ9LCJwbHVnaW5WZXJzaW9uIjoiMTAuMS41IiwidGFyZ2V0cyI6W3siZm9ybWF0IjoidGFibGUiLCJncm91cCI6W3sicGFyYW1zIjpbIiRfX2ludGVydmFsIiwiTlVMTCJdLCJ0eXBlIjoidGltZSJ9XSwibWV0cmljQ29sdW1uIjoibm9uZSIsInF1ZXJ5VHlwZSI6InJhbmRvbVdhbGsiLCJyYXdRdWVyeSI6dHJ1ZSwicmF3U3FsIjoiU0VMRUNUXG4gIHN1bShjb3VudCkgQVMgXCJjb3VudFwiXG5GUk9NIGptZXRlcl9tZXRyaWNzLnNhbXBsZV9lcnJvcl9tZXRyaWNcbldIRVJFXG4gICRfX3RpbWVGaWx0ZXIodGltZXN0YW1wKSBBTkRcbiAgKC05OTk5IGluICgke3Rlc3RJZDpzcWxzdHJpbmd9KSBPUiB0ZXN0X2lkIGluICgke3Rlc3RJZDpzcWxzdHJpbmd9KSkgQU5EXG4gICgnJSVhbGwlJScgaW4gKCR7bG9jYXRpb246c3Fsc3RyaW5nfSkgT1IgbG9jYXRpb24gSU4gKCR7bG9jYXRpb246c3Fsc3RyaW5nfSkpIEFORFxuICBpc190cmFuc2FjdGlvbiBBTkRcbiAgKCclJWFsbCUlJyBpbiAoJHtyZXF1ZXN0OnNxbHN0cmluZ30pIE9SIG5hbWUgSU4gKCR7cmVxdWVzdDpzcWxzdHJpbmd9KSkgQU5EXG4gIG5hbWUgfiAnJHt0cmFuc2FjdGlvbjpyZWdleH0nIEFORFxuICAoJyUlYWxsJSUnIGluICgke3RocmVhZGdyb3VwOnNxbHN0cmluZ30pIE9SIFwidGhyZWFkX2dyb3VwX25hbWVcIiBJTiAoJHt0aHJlYWRncm91cDpzcWxzdHJpbmd9KSkiLCJyZWZJZCI6IkEiLCJzZWxlY3QiOltbeyJwYXJhbXMiOlsiY291bnQiXSwidHlwZSI6ImNvbHVtbiJ9LHsicGFyYW1zIjpbInN1bSJdLCJ0eXBlIjoiYWdncmVnYXRlIn0seyJwYXJhbXMiOlsiY291bnQiXSwidHlwZSI6ImFsaWFzIn1dXSwidGFibGUiOiJqbWV0ZXJfbWV0cmljcy5zYW1wbGVfbWV0cmljIiwidGltZUNvbHVtbiI6IlwidGltZVwiIiwidGltZUNvbHVtblR5cGUiOiJ0aW1lc3RhbXAiLCJ3aGVyZSI6W3sibmFtZSI6IiRfX3RpbWVGaWx0ZXIiLCJwYXJhbXMiOltdLCJ0eXBlIjoibWFjcm8ifSx7ImRhdGF0eXBlIjoiaW50OCIsIm5hbWUiOiIiLCJwYXJhbXMiOlsidGVzdF9pZCIsIklOIiwiKCR7dGVzdElkOnNxbHN0cmluZ30pIl0sInR5cGUiOiJleHByZXNzaW9uIn0seyJkYXRhdHlwZSI6InZhcmNoYXIiLCJuYW1lIjoiIiwicGFyYW1zIjpbImxvY2F0aW9uIiwiSU4iLCIkbG9jYXRpb24iXSwidHlwZSI6ImV4cHJlc3Npb24ifSx7ImRhdGF0eXBlIjoidmFyY2hhciIsIm5hbWUiOiIiLCJwYXJhbXMiOlsidHJhbnNhY3Rpb24iLCJJTiIsIiR0cmFuc2FjdGlvbiJdLCJ0eXBlIjoiZXhwcmVzc2lvbiJ9XX1dLCJ0aW1lRnJvbSI6bnVsbCwidGltZVNoaWZ0IjpudWxsLCJ0aXRsZSI6IlRyYW5zYWN0aW9uIEZhaWxlZCBDb3VudCIsInR5cGUiOiJzdGF0In0seyJkYXRhc291cmNlIjoidGVhbV8xM19wdWJsaWNfdGltZXNjYWxlIiwiZmllbGRDb25maWciOnsiZGVmYXVsdHMiOnsiY29sb3IiOnsibW9kZSI6InRocmVzaG9sZHMifSwiY3VzdG9tIjp7fSwibWFwcGluZ3MiOltdLCJub1ZhbHVlIjoiMCIsInRocmVzaG9sZHMiOnsibW9kZSI6ImFic29sdXRlIiwic3RlcHMiOlt7ImNvbG9yIjoiZ3JlZW4iLCJ2YWx1ZSI6bnVsbH0seyJjb2xvciI6Im9yYW5nZSIsInZhbHVlIjowfSx7ImNvbG9yIjoicmVkIiwidmFsdWUiOjAuMDF9XX0sInVuaXQiOiJwZXJjZW50dW5pdCJ9LCJvdmVycmlkZXMiOltdfSwiZ3JpZFBvcyI6eyJoIjo3LCJ3Ijo5LCJ4IjoxNSwieSI6M30sImlkIjo1NSwib3B0aW9ucyI6eyJyZWR1Y2VPcHRpb25zIjp7ImNhbGNzIjpbImxhc3ROb3ROdWxsIl0sImZpZWxkcyI6IiIsInZhbHVlcyI6ZmFsc2V9LCJzaG93VGhyZXNob2xkTGFiZWxzIjpmYWxzZSwic2hvd1RocmVzaG9sZE1hcmtlcnMiOnRydWUsInRleHQiOnt9fSwicGx1Z2luVmVyc2lvbiI6IjEwLjEuNSIsInRhcmdldHMiOlt7ImZvcm1hdCI6InRhYmxlIiwiZ3JvdXAiOltdLCJoaWRlIjpmYWxzZSwibWV0cmljQ29sdW1uIjoibm9uZSIsInJhd1F1ZXJ5Ijp0cnVlLCJyYXdTcWwiOiJTRUxFQ1QgXCJlcnJvclwiLnN1bTo6ZGVjaW1hbCAvIFwiYWxsXCIuc3VtXHJcbkZST01cclxuICAgIChTRUxFQ1Qgc3VtKGNvdW50KSBhcyBzdW0gZnJvbSBqbWV0ZXJfbWV0cmljcy5zYW1wbGVfbWV0cmljXHJcbiAgICAgV0hFUkVcclxuICAgICAgICAgJF9fdGltZUZpbHRlcih0aW1lc3RhbXApIEFORFxyXG4gICAgICAgICAgICAgKC05OTk5IGluICgke3Rlc3RJZDpzcWxzdHJpbmd9KSBPUiB0ZXN0X2lkIGluICgke3Rlc3RJZDpzcWxzdHJpbmd9KSkgQU5EXHJcbiAgICAgICAgICAgICAoJyUlYWxsJSUnIGluICgke2xvY2F0aW9uOnNxbHN0cmluZ30pIE9SIGxvY2F0aW9uIElOICgke2xvY2F0aW9uOnNxbHN0cmluZ30pKSBBTkRcclxuICAgICAgICAgICAgaXNfdHJhbnNhY3Rpb24gQU5EXHJcbiAgICAgICAgICAgICAoJyUlYWxsJSUnIGluICgke3JlcXVlc3Q6c3Fsc3RyaW5nfSkgT1IgbmFtZSBJTiAoJHtyZXF1ZXN0OnNxbHN0cmluZ30pKSBBTkRcclxuICAgICAgICAgICAgIG5hbWUgfiAnJHt0cmFuc2FjdGlvbjpyZWdleH0nIEFORFxyXG4gICAgICAgICAgICAgKCclJWFsbCUlJyBpbiAoJHt0aHJlYWRncm91cDpzcWxzdHJpbmd9KSBPUiBcInRocmVhZF9ncm91cF9uYW1lXCIgSU4gKCR7dGhyZWFkZ3JvdXA6c3Fsc3RyaW5nfSkpKSBhcyBcImFsbFwiLFxyXG4gICAgKFNFTEVDVCBzdW0oY291bnQpIGFzIHN1bSBmcm9tIGptZXRlcl9tZXRyaWNzLnNhbXBsZV9lcnJvcl9tZXRyaWNcclxuICAgICBXSEVSRVxyXG4gICAgICAgICAkX190aW1lRmlsdGVyKHRpbWVzdGFtcCkgQU5EXHJcbiAgICAgICAgICAgICAoLTk5OTkgaW4gKCR7dGVzdElkOnNxbHN0cmluZ30pIE9SIHRlc3RfaWQgaW4gKCR7dGVzdElkOnNxbHN0cmluZ30pKSBBTkRcclxuICAgICAgICAgICAgICgnJSVhbGwlJScgaW4gKCR7bG9jYXRpb246c3Fsc3RyaW5nfSkgT1IgbG9jYXRpb24gSU4gKCR7bG9jYXRpb246c3Fsc3RyaW5nfSkpIEFORFxyXG4gICAgICAgICAgICAgaXNfdHJhbnNhY3Rpb24gQU5EXHJcbiAgICAgICAgICAgICAoJyUlYWxsJSUnIGluICgke3JlcXVlc3Q6c3Fsc3RyaW5nfSkgT1IgbmFtZSBJTiAoJHtyZXF1ZXN0OnNxbHN0cmluZ30pKSBBTkRcclxuICAgICAgICAgICAgIG5hbWUgfiAnJHt0cmFuc2FjdGlvbjpyZWdleH0nIEFORFxyXG4gICAgICAgICAgICAgKCclJWFsbCUlJyBpbiAoJHt0aHJlYWRncm91cDpzcWxzdHJpbmd9KSBPUiBcInRocmVhZF9ncm91cF9uYW1lXCIgSU4gKCR7dGhyZWFkZ3JvdXA6c3Fsc3RyaW5nfSkpKSBhcyBcImVycm9yXCIiLCJyZWZJZCI6IlFVRVJZIiwic2VsZWN0IjpbW3sicGFyYW1zIjpbInZhbHVlIl0sInR5cGUiOiJjb2x1bW4ifV1dLCJ0aW1lQ29sdW1uIjoidGltZSIsIndoZXJlIjpbeyJuYW1lIjoiJF9fdGltZUZpbHRlciIsInBhcmFtcyI6W10sInR5cGUiOiJtYWNybyJ9XX1dLCJ0aXRsZSI6IlRyYW5zYWN0aW9uIEVycm9yIFJhdGUgJSIsInRyYW5zZm9ybWF0aW9ucyI6W10sInR5cGUiOiJnYXVnZSJ9LHsiZGF0YXNvdXJjZSI6InRlYW1fMTNfcHVibGljX3RpbWVzY2FsZSIsImRlc2NyaXB0aW9uIjoiIiwiZmllbGRDb25maWciOnsiZGVmYXVsdHMiOnsiY29sb3IiOnsibW9kZSI6InRocmVzaG9sZHMifSwiY3VzdG9tIjp7fSwibWFwcGluZ3MiOltdLCJub1ZhbHVlIjoiMCIsInRocmVzaG9sZHMiOnsibW9kZSI6ImFic29sdXRlIiwic3RlcHMiOlt7ImNvbG9yIjoiZ3JlZW4iLCJ2YWx1ZSI6bnVsbH1dfX0sIm92ZXJyaWRlcyI6W119LCJncmlkUG9zIjp7ImgiOjcsInciOjQsIngiOjAsInkiOjEwfSwiaWQiOjI2LCJvcHRpb25zIjp7ImNvbG9yTW9kZSI6InZhbHVlIiwiZ3JhcGhNb2RlIjoiYXJlYSIsImp1c3RpZnlNb2RlIjoiYXV0byIsIm9yaWVudGF0aW9uIjoiaG9yaXpvbnRhbCIsInJlZHVjZU9wdGlvbnMiOnsiY2FsY3MiOlsic3VtIl0sImZpZWxkcyI6IiIsInZhbHVlcyI6ZmFsc2V9LCJ0ZXh0Ijp7fSwidGV4dE1vZGUiOiJhdXRvIn0sInBsdWdpblZlcnNpb24iOiIxMC4xLjUiLCJ0YXJnZXRzIjpbeyJmb3JtYXQiOiJ0YWJsZSIsImdyb3VwIjpbeyJwYXJhbXMiOlsiJF9faW50ZXJ2YWwiLCJOVUxMIl0sInR5cGUiOiJ0aW1lIn1dLCJtZXRyaWNDb2x1bW4iOiJub25lIiwicXVlcnlUeXBlIjoicmFuZG9tV2FsayIsInJhd1F1ZXJ5Ijp0cnVlLCJyYXdTcWwiOiJTRUxFQ1RcbiAgc3VtKGNvdW50KSBBUyBcImNvdW50XCJcbkZST00gam1ldGVyX21ldHJpY3Muc2FtcGxlX21ldHJpY1xuV0hFUkVcbiAgJF9fdGltZUZpbHRlcih0aW1lc3RhbXApIEFORFxuICAoLTk5OTkgaW4gKCR7dGVzdElkOnNxbHN0cmluZ30pIE9SIHRlc3RfaWQgaW4gKCR7dGVzdElkOnNxbHN0cmluZ30pKSBBTkRcbiAgKCclJWFsbCUlJyBpbiAoJHtsb2NhdGlvbjpzcWxzdHJpbmd9KSBPUiBsb2NhdGlvbiBJTiAoJHtsb2NhdGlvbjpzcWxzdHJpbmd9KSkgQU5EXG4gIG5vdCBpc190cmFuc2FjdGlvbiBBTkRcbiAgKCclJWFsbCUlJyBpbiAoJHtyZXF1ZXN0OnNxbHN0cmluZ30pIE9SIG5hbWUgSU4gKCR7cmVxdWVzdDpzcWxzdHJpbmd9KSkgQU5EXG4gIG5hbWUgfiAnJHt0cmFuc2FjdGlvbjpyZWdleH0nIEFORFxuICAoJyUlYWxsJSUnIGluICgke3RocmVhZGdyb3VwOnNxbHN0cmluZ30pIE9SIFwidGhyZWFkX2dyb3VwX25hbWVcIiBJTiAoJHt0aHJlYWRncm91cDpzcWxzdHJpbmd9KSkiLCJyZWZJZCI6IkEiLCJzZWxlY3QiOltbeyJwYXJhbXMiOlsiY291bnQiXSwidHlwZSI6ImNvbHVtbiJ9LHsicGFyYW1zIjpbInN1bSJdLCJ0eXBlIjoiYWdncmVnYXRlIn0seyJwYXJhbXMiOlsiY291bnQiXSwidHlwZSI6ImFsaWFzIn1dXSwidGFibGUiOiJqbWV0ZXJfbWV0cmljcy5zYW1wbGVfbWV0cmljIiwidGltZUNvbHVtbiI6IlwidGltZVwiIiwidGltZUNvbHVtblR5cGUiOiJ0aW1lc3RhbXAiLCJ3aGVyZSI6W3sibmFtZSI6IiRfX3RpbWVGaWx0ZXIiLCJwYXJhbXMiOltdLCJ0eXBlIjoibWFjcm8ifSx7ImRhdGF0eXBlIjoiaW50OCIsIm5hbWUiOiIiLCJwYXJhbXMiOlsidGVzdF9pZCIsIklOIiwiKCR7dGVzdElkOnNxbHN0cmluZ30pIl0sInR5cGUiOiJleHByZXNzaW9uIn0seyJkYXRhdHlwZSI6InZhcmNoYXIiLCJuYW1lIjoiIiwicGFyYW1zIjpbImxvY2F0aW9uIiwiSU4iLCIkbG9jYXRpb24iXSwidHlwZSI6ImV4cHJlc3Npb24ifSx7ImRhdGF0eXBlIjoidmFyY2hhciIsIm5hbWUiOiIiLCJwYXJhbXMiOlsidHJhbnNhY3Rpb24iLCJJTiIsIiR0cmFuc2FjdGlvbiJdLCJ0eXBlIjoiZXhwcmVzc2lvbiJ9XX1dLCJ0aW1lRnJvbSI6bnVsbCwidGltZVNoaWZ0IjpudWxsLCJ0aXRsZSI6IlRvdGFsIFJlcXVlc3RzIiwidHlwZSI6InN0YXQifSx7ImRhdGFzb3VyY2UiOiJ0ZWFtXzEzX3B1YmxpY190aW1lc2NhbGUiLCJkZXNjcmlwdGlvbiI6IiIsImZpZWxkQ29uZmlnIjp7ImRlZmF1bHRzIjp7ImNvbG9yIjp7Im1vZGUiOiJ0aHJlc2hvbGRzIn0sImN1c3RvbSI6e30sIm1hcHBpbmdzIjpbXSwibm9WYWx1ZSI6IjAiLCJ0aHJlc2hvbGRzIjp7Im1vZGUiOiJhYnNvbHV0ZSIsInN0ZXBzIjpbeyJjb2xvciI6ImdyZWVuIiwidmFsdWUiOm51bGx9XX19LCJvdmVycmlkZXMiOltdfSwiZ3JpZFBvcyI6eyJoIjo3LCJ3Ijo0LCJ4Ijo0LCJ5IjoxMH0sImlkIjoyOCwib3B0aW9ucyI6eyJjb2xvck1vZGUiOiJ2YWx1ZSIsImdyYXBoTW9kZSI6ImFyZWEiLCJqdXN0aWZ5TW9kZSI6ImF1dG8iLCJvcmllbnRhdGlvbiI6Imhvcml6b250YWwiLCJyZWR1Y2VPcHRpb25zIjp7ImNhbGNzIjpbInN1bSJdLCJmaWVsZHMiOiIiLCJ2YWx1ZXMiOmZhbHNlfSwidGV4dCI6e30sInRleHRNb2RlIjoiYXV0byJ9LCJwbHVnaW5WZXJzaW9uIjoiMTAuMS41IiwidGFyZ2V0cyI6W3siZm9ybWF0IjoidGFibGUiLCJncm91cCI6W3sicGFyYW1zIjpbIiRfX2ludGVydmFsIiwiTlVMTCJdLCJ0eXBlIjoidGltZSJ9XSwibWV0cmljQ29sdW1uIjoibm9uZSIsInF1ZXJ5VHlwZSI6InJhbmRvbVdhbGsiLCJyYXdRdWVyeSI6dHJ1ZSwicmF3U3FsIjoiU0VMRUNUXG4gIHN1bShjb3VudCkgQVMgXCJjb3VudFwiXG5GUk9NIGptZXRlcl9tZXRyaWNzLnNhbXBsZV9lcnJvcl9tZXRyaWNcbldIRVJFXG4gICRfX3RpbWVGaWx0ZXIodGltZXN0YW1wKSBBTkRcbiAgKC05OTk5IGluICgke3Rlc3RJZDpzcWxzdHJpbmd9KSBPUiB0ZXN0X2lkIGluICgke3Rlc3RJZDpzcWxzdHJpbmd9KSkgQU5EXG4gICgnJSVhbGwlJScgaW4gKCR7bG9jYXRpb246c3Fsc3RyaW5nfSkgT1IgbG9jYXRpb24gSU4gKCR7bG9jYXRpb246c3Fsc3RyaW5nfSkpIEFORFxuICBub3QgaXNfdHJhbnNhY3Rpb24gQU5EXG4gICgnJSVhbGwlJScgaW4gKCR7cmVxdWVzdDpzcWxzdHJpbmd9KSBPUiBuYW1lIElOICgke3JlcXVlc3Q6c3Fsc3RyaW5nfSkpIEFORFxuICBuYW1lIH4gJyR7dHJhbnNhY3Rpb246cmVnZXh9JyBBTkRcbiAgKCclJWFsbCUlJyBpbiAoJHt0aHJlYWRncm91cDpzcWxzdHJpbmd9KSBPUiBcInRocmVhZF9ncm91cF9uYW1lXCIgSU4gKCR7dGhyZWFkZ3JvdXA6c3Fsc3RyaW5nfSkpIiwicmVmSWQiOiJBIiwic2VsZWN0IjpbW3sicGFyYW1zIjpbImNvdW50Il0sInR5cGUiOiJjb2x1bW4ifSx7InBhcmFtcyI6WyJzdW0iXSwidHlwZSI6ImFnZ3JlZ2F0ZSJ9LHsicGFyYW1zIjpbImNvdW50Il0sInR5cGUiOiJhbGlhcyJ9XV0sInRhYmxlIjoiam1ldGVyX21ldHJpY3Muc2FtcGxlX21ldHJpYyIsInRpbWVDb2x1bW4iOiJcInRpbWVcIiIsInRpbWVDb2x1bW5UeXBlIjoidGltZXN0YW1wIiwid2hlcmUiOlt7Im5hbWUiOiIkX190aW1lRmlsdGVyIiwicGFyYW1zIjpbXSwidHlwZSI6Im1hY3JvIn0seyJkYXRhdHlwZSI6ImludDgiLCJuYW1lIjoiIiwicGFyYW1zIjpbInRlc3RfaWQiLCJJTiIsIigke3Rlc3RJZDpzcWxzdHJpbmd9KSJdLCJ0eXBlIjoiZXhwcmVzc2lvbiJ9LHsiZGF0YXR5cGUiOiJ2YXJjaGFyIiwibmFtZSI6IiIsInBhcmFtcyI6WyJsb2NhdGlvbiIsIklOIiwiJGxvY2F0aW9uIl0sInR5cGUiOiJleHByZXNzaW9uIn0seyJkYXRhdHlwZSI6InZhcmNoYXIiLCJuYW1lIjoiIiwicGFyYW1zIjpbInRyYW5zYWN0aW9uIiwiSU4iLCIkdHJhbnNhY3Rpb24iXSwidHlwZSI6ImV4cHJlc3Npb24ifV19XSwidGltZUZyb20iOm51bGwsInRpbWVTaGlmdCI6bnVsbCwidGl0bGUiOiJGYWlsZWQgUmVxdWVzdHMiLCJ0eXBlIjoic3RhdCJ9LHsiZGF0YXNvdXJjZSI6InRlYW1fMTNfcHVibGljX3RpbWVzY2FsZSIsImZpZWxkQ29uZmlnIjp7ImRlZmF1bHRzIjp7ImNvbG9yIjp7Im1vZGUiOiJ0aHJlc2hvbGRzIn0sImN1c3RvbSI6e30sIm1hcHBpbmdzIjpbXSwibm9WYWx1ZSI6IjAiLCJ0aHJlc2hvbGRzIjp7Im1vZGUiOiJhYnNvbHV0ZSIsInN0ZXBzIjpbeyJjb2xvciI6ImdyZWVuIiwidmFsdWUiOm51bGx9LHsiY29sb3IiOiJvcmFuZ2UiLCJ2YWx1ZSI6MH0seyJjb2xvciI6InJlZCIsInZhbHVlIjowLjAxfV19LCJ1bml0IjoicGVyY2VudHVuaXQifSwib3ZlcnJpZGVzIjpbXX0sImdyaWRQb3MiOnsiaCI6NywidyI6OCwieCI6OCwieSI6MTB9LCJpZCI6MzQsIm9wdGlvbnMiOnsicmVkdWNlT3B0aW9ucyI6eyJjYWxjcyI6WyJsYXN0Tm90TnVsbCJdLCJmaWVsZHMiOiIiLCJ2YWx1ZXMiOmZhbHNlfSwic2hvd1RocmVzaG9sZExhYmVscyI6ZmFsc2UsInNob3dUaHJlc2hvbGRNYXJrZXJzIjp0cnVlLCJ0ZXh0Ijp7fX0sInBsdWdpblZlcnNpb24iOiIxMC4xLjUiLCJ0YXJnZXRzIjpbeyJmb3JtYXQiOiJ0YWJsZSIsImdyb3VwIjpbXSwiaGlkZSI6ZmFsc2UsIm1ldHJpY0NvbHVtbiI6Im5vbmUiLCJyYXdRdWVyeSI6dHJ1ZSwicmF3U3FsIjoiU0VMRUNUIFwiZXJyb3JcIi5zdW06OmRlY2ltYWwgLyBcImFsbFwiLnN1bVxyXG5GUk9NXHJcbiAgICAoU0VMRUNUIHN1bShjb3VudCkgYXMgc3VtIGZyb20gam1ldGVyX21ldHJpY3Muc2FtcGxlX21ldHJpY1xyXG4gICAgIFdIRVJFXHJcbiAgICAgICAgICRfX3RpbWVGaWx0ZXIodGltZXN0YW1wKSBBTkRcclxuICAgICAgICAgICAgICgtOTk5OSBpbiAoJHt0ZXN0SWQ6c3Fsc3RyaW5nfSkgT1IgdGVzdF9pZCBpbiAoJHt0ZXN0SWQ6c3Fsc3RyaW5nfSkpIEFORFxyXG4gICAgICAgICAgICAgKCclJWFsbCUlJyBpbiAoJHtsb2NhdGlvbjpzcWxzdHJpbmd9KSBPUiBsb2NhdGlvbiBJTiAoJHtsb2NhdGlvbjpzcWxzdHJpbmd9KSkgQU5EXHJcbiAgICAgICAgICAgICBub3QgaXNfdHJhbnNhY3Rpb24gQU5EXHJcbiAgICAgICAgICAgICAoJyUlYWxsJSUnIGluICgke3JlcXVlc3Q6c3Fsc3RyaW5nfSkgT1IgbmFtZSBJTiAoJHtyZXF1ZXN0OnNxbHN0cmluZ30pKSBBTkRcclxuICAgICAgICAgICAgIG5hbWUgfiAnJHt0cmFuc2FjdGlvbjpyZWdleH0nIEFORFxyXG4gICAgICAgICAgICAgKCclJWFsbCUlJyBpbiAoJHt0aHJlYWRncm91cDpzcWxzdHJpbmd9KSBPUiBcInRocmVhZF9ncm91cF9uYW1lXCIgSU4gKCR7dGhyZWFkZ3JvdXA6c3Fsc3RyaW5nfSkpKSBhcyBcImFsbFwiLFxyXG4gICAgKFNFTEVDVCBzdW0oY291bnQpIGFzIHN1bSBmcm9tIGptZXRlcl9tZXRyaWNzLnNhbXBsZV9lcnJvcl9tZXRyaWNcclxuICAgICBXSEVSRVxyXG4gICAgICAgICAkX190aW1lRmlsdGVyKHRpbWVzdGFtcCkgQU5EXHJcbiAgICAgICAgICAgICAoLTk5OTkgaW4gKCR7dGVzdElkOnNxbHN0cmluZ30pIE9SIHRlc3RfaWQgaW4gKCR7dGVzdElkOnNxbHN0cmluZ30pKSBBTkRcclxuICAgICAgICAgICAgICgnJSVhbGwlJScgaW4gKCR7bG9jYXRpb246c3Fsc3RyaW5nfSkgT1IgbG9jYXRpb24gSU4gKCR7bG9jYXRpb246c3Fsc3RyaW5nfSkpIEFORFxyXG4gICAgICAgICAgICAgbm90IGlzX3RyYW5zYWN0aW9uIEFORFxyXG4gICAgICAgICAgICAgKCclJWFsbCUlJyBpbiAoJHtyZXF1ZXN0OnNxbHN0cmluZ30pIE9SIG5hbWUgSU4gKCR7cmVxdWVzdDpzcWxzdHJpbmd9KSkgQU5EXHJcbiAgICAgICAgICAgICBuYW1lIH4gJyR7dHJhbnNhY3Rpb246cmVnZXh9JyBBTkRcclxuICAgICAgICAgICAgICgnJSVhbGwlJScgaW4gKCR7dGhyZWFkZ3JvdXA6c3Fsc3RyaW5nfSkgT1IgXCJ0aHJlYWRfZ3JvdXBfbmFtZVwiIElOICgke3RocmVhZGdyb3VwOnNxbHN0cmluZ30pKSkgYXMgXCJlcnJvclwiIiwicmVmSWQiOiJRVUVSWSIsInNlbGVjdCI6W1t7InBhcmFtcyI6WyJ2YWx1ZSJdLCJ0eXBlIjoiY29sdW1uIn1dXSwidGltZUNvbHVtbiI6InRpbWUiLCJ3aGVyZSI6W3sibmFtZSI6IiRfX3RpbWVGaWx0ZXIiLCJwYXJhbXMiOltdLCJ0eXBlIjoibWFjcm8ifV19XSwidGl0bGUiOiJSZXF1ZXN0IEVycm9yIFJhdGUgJSIsInRyYW5zZm9ybWF0aW9ucyI6W10sInR5cGUiOiJnYXVnZSJ9LHsiZGF0YXNvdXJjZSI6InRlYW1fMTNfcHVibGljX3RpbWVzY2FsZSIsImRlc2NyaXB0aW9uIjoiIiwiZmllbGRDb25maWciOnsiZGVmYXVsdHMiOnsiY29sb3IiOnsibW9kZSI6InRocmVzaG9sZHMifSwiY3VzdG9tIjp7fSwiZGVjaW1hbHMiOjAsIm1hcHBpbmdzIjpbXSwibm9WYWx1ZSI6IjAiLCJ0aHJlc2hvbGRzIjp7Im1vZGUiOiJhYnNvbHV0ZSIsInN0ZXBzIjpbeyJjb2xvciI6ImdyZWVuIiwidmFsdWUiOm51bGx9XX0sInVuaXQiOiJieXRlcyJ9LCJvdmVycmlkZXMiOltdfSwiZ3JpZFBvcyI6eyJoIjo3LCJ3Ijo0LCJ4IjoxNiwieSI6MTB9LCJpZCI6MzAsIm9wdGlvbnMiOnsiY29sb3JNb2RlIjoidmFsdWUiLCJncmFwaE1vZGUiOiJhcmVhIiwianVzdGlmeU1vZGUiOiJhdXRvIiwib3JpZW50YXRpb24iOiJob3Jpem9udGFsIiwicmVkdWNlT3B0aW9ucyI6eyJjYWxjcyI6WyJzdW0iXSwiZmllbGRzIjoiIiwidmFsdWVzIjpmYWxzZX0sInRleHQiOnt9LCJ0ZXh0TW9kZSI6ImF1dG8ifSwicGx1Z2luVmVyc2lvbiI6IjEwLjEuNSIsInRhcmdldHMiOlt7ImZvcm1hdCI6InRhYmxlIiwiZ3JvdXAiOlt7InBhcmFtcyI6WyIkX19pbnRlcnZhbCIsIk5VTEwiXSwidHlwZSI6InRpbWUifV0sIm1ldHJpY0NvbHVtbiI6Im5vbmUiLCJxdWVyeVR5cGUiOiJyYW5kb21XYWxrIiwicmF3UXVlcnkiOnRydWUsInJhd1NxbCI6IlNFTEVDVFxuICBzdW0ocmVjZWl2ZWRfYnl0ZXMpXG5GUk9NIGptZXRlcl9tZXRyaWNzLnNhbXBsZV9tZXRyaWNcbldIRVJFXG4gICRfX3RpbWVGaWx0ZXIodGltZXN0YW1wKSBBTkRcbiAgKC05OTk5IGluICgke3Rlc3RJZDpzcWxzdHJpbmd9KSBPUiB0ZXN0X2lkIGluICgke3Rlc3RJZDpzcWxzdHJpbmd9KSkgQU5EXG4gICgnJSVhbGwlJScgaW4gKCR7bG9jYXRpb246c3Fsc3RyaW5nfSkgT1IgbG9jYXRpb24gSU4gKCR7bG9jYXRpb246c3Fsc3RyaW5nfSkpIEFORFxuICBub3QgaXNfdHJhbnNhY3Rpb24gQU5EXG4gICgnJSVhbGwlJScgaW4gKCR7cmVxdWVzdDpzcWxzdHJpbmd9KSBPUiBuYW1lIElOICgke3JlcXVlc3Q6c3Fsc3RyaW5nfSkpIEFORFxuICBuYW1lIH4gJyR7dHJhbnNhY3Rpb246cmVnZXh9JyBBTkRcbiAgKCclJWFsbCUlJyBpbiAoJHt0aHJlYWRncm91cDpzcWxzdHJpbmd9KSBPUiBcInRocmVhZF9ncm91cF9uYW1lXCIgSU4gKCR7dGhyZWFkZ3JvdXA6c3Fsc3RyaW5nfSkpIiwicmVmSWQiOiJBIiwic2VsZWN0IjpbW3sicGFyYW1zIjpbImNvdW50Il0sInR5cGUiOiJjb2x1bW4ifSx7InBhcmFtcyI6WyJzdW0iXSwidHlwZSI6ImFnZ3JlZ2F0ZSJ9LHsicGFyYW1zIjpbImNvdW50Il0sInR5cGUiOiJhbGlhcyJ9XV0sInRhYmxlIjoiam1ldGVyX21ldHJpY3Muc2FtcGxlX21ldHJpYyIsInRpbWVDb2x1bW4iOiJcInRpbWVcIiIsInRpbWVDb2x1bW5UeXBlIjoidGltZXN0YW1wIiwid2hlcmUiOlt7Im5hbWUiOiIkX190aW1lRmlsdGVyIiwicGFyYW1zIjpbXSwidHlwZSI6Im1hY3JvIn0seyJkYXRhdHlwZSI6ImludDgiLCJuYW1lIjoiIiwicGFyYW1zIjpbInRlc3RfaWQiLCJJTiIsIigke3Rlc3RJZDpzcWxzdHJpbmd9KSJdLCJ0eXBlIjoiZXhwcmVzc2lvbiJ9LHsiZGF0YXR5cGUiOiJ2YXJjaGFyIiwibmFtZSI6IiIsInBhcmFtcyI6WyJsb2NhdGlvbiIsIklOIiwiJGxvY2F0aW9uIl0sInR5cGUiOiJleHByZXNzaW9uIn0seyJkYXRhdHlwZSI6InZhcmNoYXIiLCJuYW1lIjoiIiwicGFyYW1zIjpbInRyYW5zYWN0aW9uIiwiSU4iLCIkdHJhbnNhY3Rpb24iXSwidHlwZSI6ImV4cHJlc3Npb24ifV19XSwidGltZUZyb20iOm51bGwsInRpbWVTaGlmdCI6bnVsbCwidGl0bGUiOiJSZWNlaXZlZCBCeXRlcyIsInR5cGUiOiJzdGF0In0seyJkYXRhc291cmNlIjoidGVhbV8xM19wdWJsaWNfdGltZXNjYWxlIiwiZGVzY3JpcHRpb24iOiIiLCJmaWVsZENvbmZpZyI6eyJkZWZhdWx0cyI6eyJjb2xvciI6eyJtb2RlIjoidGhyZXNob2xkcyJ9LCJjdXN0b20iOnt9LCJkZWNpbWFscyI6MCwibWFwcGluZ3MiOltdLCJub1ZhbHVlIjoiMCIsInRocmVzaG9sZHMiOnsibW9kZSI6ImFic29sdXRlIiwic3RlcHMiOlt7ImNvbG9yIjoiZ3JlZW4iLCJ2YWx1ZSI6bnVsbH1dfSwidW5pdCI6ImJ5dGVzIn0sIm92ZXJyaWRlcyI6W119LCJncmlkUG9zIjp7ImgiOjcsInciOjQsIngiOjIwLCJ5IjoxMH0sImlkIjozMiwib3B0aW9ucyI6eyJjb2xvck1vZGUiOiJ2YWx1ZSIsImdyYXBoTW9kZSI6ImFyZWEiLCJqdXN0aWZ5TW9kZSI6ImF1dG8iLCJvcmllbnRhdGlvbiI6Imhvcml6b250YWwiLCJyZWR1Y2VPcHRpb25zIjp7ImNhbGNzIjpbInN1bSJdLCJmaWVsZHMiOiIiLCJ2YWx1ZXMiOmZhbHNlfSwidGV4dCI6e30sInRleHRNb2RlIjoiYXV0byJ9LCJwbHVnaW5WZXJzaW9uIjoiMTAuMS41IiwidGFyZ2V0cyI6W3siZm9ybWF0IjoidGFibGUiLCJncm91cCI6W3sicGFyYW1zIjpbIiRfX2ludGVydmFsIiwiTlVMTCJdLCJ0eXBlIjoidGltZSJ9XSwibWV0cmljQ29sdW1uIjoibm9uZSIsInF1ZXJ5VHlwZSI6InJhbmRvbVdhbGsiLCJyYXdRdWVyeSI6dHJ1ZSwicmF3U3FsIjoiU0VMRUNUXG4gIHN1bShzZW50X2J5dGVzKVxuRlJPTSBqbWV0ZXJfbWV0cmljcy5zYW1wbGVfbWV0cmljXG5XSEVSRVxuICAkX190aW1lRmlsdGVyKHRpbWVzdGFtcCkgQU5EXG4gICgtOTk5OSBpbiAoJHt0ZXN0SWQ6c3Fsc3RyaW5nfSkgT1IgdGVzdF9pZCBpbiAoJHt0ZXN0SWQ6c3Fsc3RyaW5nfSkpIEFORFxuICAoJyUlYWxsJSUnIGluICgke2xvY2F0aW9uOnNxbHN0cmluZ30pIE9SIGxvY2F0aW9uIElOICgke2xvY2F0aW9uOnNxbHN0cmluZ30pKSBBTkRcbiAgbm90IGlzX3RyYW5zYWN0aW9uIEFORFxuICAoJyUlYWxsJSUnIGluICgke3JlcXVlc3Q6c3Fsc3RyaW5nfSkgT1IgbmFtZSBJTiAoJHtyZXF1ZXN0OnNxbHN0cmluZ30pKSBBTkRcbiAgbmFtZSB+ICcke3RyYW5zYWN0aW9uOnJlZ2V4fScgIEFORFxuICAoJyUlYWxsJSUnIGluICgke3RocmVhZGdyb3VwOnNxbHN0cmluZ30pIE9SIFwidGhyZWFkX2dyb3VwX25hbWVcIiBJTiAoJHt0aHJlYWRncm91cDpzcWxzdHJpbmd9KSkiLCJyZWZJZCI6IkEiLCJzZWxlY3QiOltbeyJwYXJhbXMiOlsiY291bnQiXSwidHlwZSI6ImNvbHVtbiJ9LHsicGFyYW1zIjpbInN1bSJdLCJ0eXBlIjoiYWdncmVnYXRlIn0seyJwYXJhbXMiOlsiY291bnQiXSwidHlwZSI6ImFsaWFzIn1dXSwidGFibGUiOiJqbWV0ZXJfbWV0cmljcy5zYW1wbGVfbWV0cmljIiwidGltZUNvbHVtbiI6IlwidGltZVwiIiwidGltZUNvbHVtblR5cGUiOiJ0aW1lc3RhbXAiLCJ3aGVyZSI6W3sibmFtZSI6IiRfX3RpbWVGaWx0ZXIiLCJwYXJhbXMiOltdLCJ0eXBlIjoibWFjcm8ifSx7ImRhdGF0eXBlIjoiaW50OCIsIm5hbWUiOiIiLCJwYXJhbXMiOlsidGVzdF9pZCIsIklOIiwiKCR7dGVzdElkOnNxbHN0cmluZ30pIl0sInR5cGUiOiJleHByZXNzaW9uIn0seyJkYXRhdHlwZSI6InZhcmNoYXIiLCJuYW1lIjoiIiwicGFyYW1zIjpbImxvY2F0aW9uIiwiSU4iLCIkbG9jYXRpb24iXSwidHlwZSI6ImV4cHJlc3Npb24ifSx7ImRhdGF0eXBlIjoidmFyY2hhciIsIm5hbWUiOiIiLCJwYXJhbXMiOlsidHJhbnNhY3Rpb24iLCJJTiIsIiR0cmFuc2FjdGlvbiJdLCJ0eXBlIjoiZXhwcmVzc2lvbiJ9XX1dLCJ0aW1lRnJvbSI6bnVsbCwidGltZVNoaWZ0IjpudWxsLCJ0aXRsZSI6IlNlbnQgQnl0ZXMiLCJ0eXBlIjoic3RhdCJ9LHsiZGF0YXNvdXJjZSI6InRlYW1fMTNfcHVibGljX3RpbWVzY2FsZSIsImZpZWxkQ29uZmlnIjp7ImRlZmF1bHRzIjp7ImNvbG9yIjp7Im1vZGUiOiJwYWxldHRlLWNsYXNzaWMifSwiY3VzdG9tIjp7ImF4aXNDZW50ZXJlZFplcm8iOmZhbHNlLCJheGlzQ29sb3JNb2RlIjoidGV4dCIsImF4aXNMYWJlbCI6IlJQUyIsImF4aXNQbGFjZW1lbnQiOiJhdXRvIiwiYmFyQWxpZ25tZW50IjowLCJkcmF3U3R5bGUiOiJsaW5lIiwiZmlsbE9wYWNpdHkiOjcwLCJncmFkaWVudE1vZGUiOiJvcGFjaXR5IiwiaGlkZUZyb20iOnsibGVnZW5kIjpmYWxzZSwidG9vbHRpcCI6ZmFsc2UsInZpeiI6ZmFsc2V9LCJpbnNlcnROdWxscyI6ZmFsc2UsImxpbmVJbnRlcnBvbGF0aW9uIjoibGluZWFyIiwibGluZVdpZHRoIjoxLCJwb2ludFNpemUiOjUsInNjYWxlRGlzdHJpYnV0aW9uIjp7InR5cGUiOiJsaW5lYXIifSwic2hvd1BvaW50cyI6Im5ldmVyIiwic3Bhbk51bGxzIjpmYWxzZSwic3RhY2tpbmciOnsiZ3JvdXAiOiJBIiwibW9kZSI6Im5vbmUifSwidGhyZXNob2xkc1N0eWxlIjp7Im1vZGUiOiJvZmYifX0sIm1hcHBpbmdzIjpbXSwidGhyZXNob2xkcyI6eyJtb2RlIjoiYWJzb2x1dGUiLCJzdGVwcyI6W3siY29sb3IiOiJncmVlbiIsInZhbHVlIjpudWxsfSx7ImNvbG9yIjoicmVkIiwidmFsdWUiOjgwfV19LCJ1bml0Ijoibm9uZSJ9LCJvdmVycmlkZXMiOltdfSwiZ3JpZFBvcyI6eyJoIjo3LCJ3IjoxMiwieCI6MCwieSI6MTd9LCJpZCI6MzYsImludGVydmFsIjoiW1tzZW5kX2ludGVydmFsXV1zIiwib3B0aW9ucyI6eyJsZWdlbmQiOnsiY2FsY3MiOltdLCJkaXNwbGF5TW9kZSI6Imxpc3QiLCJwbGFjZW1lbnQiOiJib3R0b20iLCJzaG93TGVnZW5kIjpmYWxzZX0sInRvb2x0aXAiOnsibW9kZSI6Im11bHRpIiwic29ydCI6Im5vbmUifX0sInBsdWdpblZlcnNpb24iOiIxMC4xLjUiLCJ0YXJnZXRzIjpbeyJmb3JtYXQiOiJ0aW1lX3NlcmllcyIsImdyb3VwIjpbXSwiaGlkZSI6ZmFsc2UsIm1ldHJpY0NvbHVtbiI6Im5vbmUiLCJyYXdRdWVyeSI6dHJ1ZSwicmF3U3FsIjoiU0VMRUNUIFxuICB0aW1lICsgaW50ZXJ2YWwgJyR7YWdncmVnYXRpb25faW50ZXJ2YWx9cycgYXMgdGltZSxcbiAgXCJycHNcIiBhcyBcIlJQU1wiLFxuICBcIm1ldHJpY1wiXG5GUk9NIChTRUxFQ1RcbiAgdGltZV9idWNrZXQoJyR7YWdncmVnYXRpb25faW50ZXJ2YWx9cycsIFwidGltZXN0YW1wXCIpIGFzIHRpbWUsXG4gIHN1bShjb3VudCk6OmRlY2ltYWwgLyAke2FnZ3JlZ2F0aW9uX2ludGVydmFsfSBBUyBcInJwc1wiLFxuICBjb25jYXQoJ1JQUyAnLCB0ZXN0X2lkKSBhcyBcIm1ldHJpY1wiXG5GUk9NIGptZXRlcl9tZXRyaWNzLnNhbXBsZV9tZXRyaWNcbldIRVJFXG4gICRfX3RpbWVGaWx0ZXIodGltZXN0YW1wKSBBTkRcbiAgKC05OTk5IGluICgke3Rlc3RJZDpzcWxzdHJpbmd9KSBPUiB0ZXN0X2lkIGluICgke3Rlc3RJZDpzcWxzdHJpbmd9KSkgQU5EXG4gICgnJSVhbGwlJScgaW4gKCR7bG9jYXRpb246c3Fsc3RyaW5nfSkgT1IgbG9jYXRpb24gSU4gKCR7bG9jYXRpb246c3Fsc3RyaW5nfSkpIEFORFxuICBub3QgaXNfdHJhbnNhY3Rpb24gQU5EXG4gICgnJSVhbGwlJScgaW4gKCR7cmVxdWVzdDpzcWxzdHJpbmd9KSBPUiBuYW1lIElOICgke3JlcXVlc3Q6c3Fsc3RyaW5nfSkpIEFORFxuICBuYW1lIH4gJyR7dHJhbnNhY3Rpb246cmVnZXh9JyBBTkRcbiAgICgnJSVhbGwlJScgaW4gKCR7dGhyZWFkZ3JvdXA6c3Fsc3RyaW5nfSkgT1IgXCJ0aHJlYWRfZ3JvdXBfbmFtZVwiIElOICgke3RocmVhZGdyb3VwOnNxbHN0cmluZ30pKVxuR1JPVVAgQlkgMSwgdGVzdF9pZFxuT1JERVIgQlkgMVxuKSBzdWIiLCJyZWZJZCI6IlJQUyIsInNlbGVjdCI6W1t7InBhcmFtcyI6WyJ2YWx1ZSJdLCJ0eXBlIjoiY29sdW1uIn1dXSwidGltZUNvbHVtbiI6InRpbWUiLCJ3aGVyZSI6W3sibmFtZSI6IiRfX3RpbWVGaWx0ZXIiLCJwYXJhbXMiOltdLCJ0eXBlIjoibWFjcm8ifV19XSwidGltZUZyb20iOm51bGwsInRpbWVTaGlmdCI6bnVsbCwidGl0bGUiOiJUb3RhbCBUaHJvdWdocHV0IiwidHJhbnNmb3JtYXRpb25zIjpbXSwidHlwZSI6InRpbWVzZXJpZXMifSx7ImRhdGFzb3VyY2UiOiJ0ZWFtXzEzX3B1YmxpY190aW1lc2NhbGUiLCJmaWVsZENvbmZpZyI6eyJkZWZhdWx0cyI6eyJjb2xvciI6eyJtb2RlIjoicGFsZXR0ZS1jbGFzc2ljIn0sImN1c3RvbSI6eyJheGlzQ2VudGVyZWRaZXJvIjpmYWxzZSwiYXhpc0NvbG9yTW9kZSI6InRleHQiLCJheGlzTGFiZWwiOiJFcnJvcnMgcGVyIHNlY29uZCIsImF4aXNQbGFjZW1lbnQiOiJhdXRvIiwiYmFyQWxpZ25tZW50IjowLCJkcmF3U3R5bGUiOiJsaW5lIiwiZmlsbE9wYWNpdHkiOjcwLCJncmFkaWVudE1vZGUiOiJvcGFjaXR5IiwiaGlkZUZyb20iOnsibGVnZW5kIjpmYWxzZSwidG9vbHRpcCI6ZmFsc2UsInZpeiI6ZmFsc2V9LCJpbnNlcnROdWxscyI6ZmFsc2UsImxpbmVJbnRlcnBvbGF0aW9uIjoibGluZWFyIiwibGluZVdpZHRoIjoxLCJwb2ludFNpemUiOjUsInNjYWxlRGlzdHJpYnV0aW9uIjp7InR5cGUiOiJsaW5lYXIifSwic2hvd1BvaW50cyI6Im5ldmVyIiwic3Bhbk51bGxzIjpmYWxzZSwic3RhY2tpbmciOnsiZ3JvdXAiOiJBIiwibW9kZSI6Im5vbmUifSwidGhyZXNob2xkc1N0eWxlIjp7Im1vZGUiOiJvZmYifX0sIm1hcHBpbmdzIjpbXSwidGhyZXNob2xkcyI6eyJtb2RlIjoiYWJzb2x1dGUiLCJzdGVwcyI6W3siY29sb3IiOiJncmVlbiIsInZhbHVlIjpudWxsfSx7ImNvbG9yIjoicmVkIiwidmFsdWUiOjgwfV19LCJ1bml0Ijoibm9uZSJ9LCJvdmVycmlkZXMiOlt7Im1hdGNoZXIiOnsiaWQiOiJieU5hbWUiLCJvcHRpb25zIjoiRXJyb3JzIHBlciBzZWNvbmQifSwicHJvcGVydGllcyI6W3siaWQiOiJjb2xvciIsInZhbHVlIjp7ImZpeGVkQ29sb3IiOiIjRjI0OTVDIiwibW9kZSI6ImZpeGVkIn19XX1dfSwiZ3JpZFBvcyI6eyJoIjo3LCJ3IjoxMiwieCI6MTIsInkiOjE3fSwiaWQiOjM4LCJpbnRlcnZhbCI6Iltbc2VuZF9pbnRlcnZhbF1dcyIsIm9wdGlvbnMiOnsibGVnZW5kIjp7ImNhbGNzIjpbXSwiZGlzcGxheU1vZGUiOiJsaXN0IiwicGxhY2VtZW50IjoiYm90dG9tIiwic2hvd0xlZ2VuZCI6ZmFsc2V9LCJ0b29sdGlwIjp7Im1vZGUiOiJtdWx0aSIsInNvcnQiOiJub25lIn19LCJwbHVnaW5WZXJzaW9uIjoiMTAuMS41IiwidGFyZ2V0cyI6W3siZm9ybWF0IjoidGltZV9zZXJpZXMiLCJncm91cCI6W10sImhpZGUiOmZhbHNlLCJtZXRyaWNDb2x1bW4iOiJub25lIiwicmF3UXVlcnkiOnRydWUsInJhd1NxbCI6IlNFTEVDVCBcbiAgdGltZSArIGludGVydmFsICcke2FnZ3JlZ2F0aW9uX2ludGVydmFsfXMnIGFzIHRpbWUsXG4gIFwiZXJyX3BzXCIgYXMgXCJFcnJvcnMgcGVyIHNlY29uZFwiLFxuICBcIm1ldHJpY1wiXG5GUk9NIChTRUxFQ1RcbiAgdGltZV9idWNrZXQoJyR7YWdncmVnYXRpb25faW50ZXJ2YWx9cycsIFwidGltZXN0YW1wXCIpIGFzIHRpbWUsXG4gIHN1bShjb3VudCk6OmRlY2ltYWwgLyAke2FnZ3JlZ2F0aW9uX2ludGVydmFsfSBBUyBcImVycl9wc1wiLFxuICBjb25jYXQoJ0Vycm9ycyAvIHMgJywgdGVzdF9pZCkgYXMgXCJtZXRyaWNcIlxuRlJPTSBqbWV0ZXJfbWV0cmljcy5zYW1wbGVfZXJyb3JfbWV0cmljXG5XSEVSRVxuICAkX190aW1lRmlsdGVyKHRpbWVzdGFtcCkgQU5EXG4gICgtOTk5OSBpbiAoJHt0ZXN0SWQ6c3Fsc3RyaW5nfSkgT1IgdGVzdF9pZCBpbiAoJHt0ZXN0SWQ6c3Fsc3RyaW5nfSkpIEFORFxuICAoJyUlYWxsJSUnIGluICgke2xvY2F0aW9uOnNxbHN0cmluZ30pIE9SIGxvY2F0aW9uIElOICgke2xvY2F0aW9uOnNxbHN0cmluZ30pKSBBTkRcbiAgbm90IGlzX3RyYW5zYWN0aW9uIEFORFxuICAoJyUlYWxsJSUnIGluICgke3JlcXVlc3Q6c3Fsc3RyaW5nfSkgT1IgbmFtZSBJTiAoJHtyZXF1ZXN0OnNxbHN0cmluZ30pKSBBTkRcbiAgbmFtZSB+ICcke3RyYW5zYWN0aW9uOnJlZ2V4fScgQU5EXG4gICAoJyUlYWxsJSUnIGluICgke3RocmVhZGdyb3VwOnNxbHN0cmluZ30pIE9SIFwidGhyZWFkX2dyb3VwX25hbWVcIiBJTiAoJHt0aHJlYWRncm91cDpzcWxzdHJpbmd9KSlcbkdST1VQIEJZIDEsIHRlc3RfaWRcbk9SREVSIEJZIDFcbikgc3ViIiwicmVmSWQiOiJFcnJvcnMgcGVyIHNlY29uZCIsInNlbGVjdCI6W1t7InBhcmFtcyI6WyJ2YWx1ZSJdLCJ0eXBlIjoiY29sdW1uIn1dXSwidGltZUNvbHVtbiI6InRpbWUiLCJ3aGVyZSI6W3sibmFtZSI6IiRfX3RpbWVGaWx0ZXIiLCJwYXJhbXMiOltdLCJ0eXBlIjoibWFjcm8ifV19XSwidGltZUZyb20iOm51bGwsInRpbWVTaGlmdCI6bnVsbCwidGl0bGUiOiJFcnJvcnMgcGVyIHNlY29uZCIsInRyYW5zZm9ybWF0aW9ucyI6W10sInR5cGUiOiJ0aW1lc2VyaWVzIn0seyJkYXRhc291cmNlIjoidGVhbV8xM19wdWJsaWNfdGltZXNjYWxlIiwiZmllbGRDb25maWciOnsiZGVmYXVsdHMiOnsiY29sb3IiOnsibW9kZSI6InBhbGV0dGUtY2xhc3NpYyJ9LCJjdXN0b20iOnsiYXhpc0NlbnRlcmVkWmVybyI6ZmFsc2UsImF4aXNDb2xvck1vZGUiOiJ0ZXh0IiwiYXhpc0xhYmVsIjoiUmVzcG9uc2UgdGltZSIsImF4aXNQbGFjZW1lbnQiOiJhdXRvIiwiYmFyQWxpZ25tZW50IjowLCJkcmF3U3R5bGUiOiJsaW5lIiwiZmlsbE9wYWNpdHkiOjIwLCJncmFkaWVudE1vZGUiOiJvcGFjaXR5IiwiaGlkZUZyb20iOnsibGVnZW5kIjpmYWxzZSwidG9vbHRpcCI6ZmFsc2UsInZpeiI6ZmFsc2V9LCJpbnNlcnROdWxscyI6ZmFsc2UsImxpbmVJbnRlcnBvbGF0aW9uIjoibGluZWFyIiwibGluZVdpZHRoIjoxLCJwb2ludFNpemUiOjUsInNjYWxlRGlzdHJpYnV0aW9uIjp7InR5cGUiOiJsaW5lYXIifSwic2hvd1BvaW50cyI6Im5ldmVyIiwic3Bhbk51bGxzIjpmYWxzZSwic3RhY2tpbmciOnsiZ3JvdXAiOiJBIiwibW9kZSI6Im5vbmUifSwidGhyZXNob2xkc1N0eWxlIjp7Im1vZGUiOiJvZmYifX0sIm1hcHBpbmdzIjpbXSwidGhyZXNob2xkcyI6eyJtb2RlIjoiYWJzb2x1dGUiLCJzdGVwcyI6W3siY29sb3IiOiJncmVlbiIsInZhbHVlIjpudWxsfSx7ImNvbG9yIjoicmVkIiwidmFsdWUiOjgwfV19LCJ1bml0Ijoibm9uZSJ9LCJvdmVycmlkZXMiOlt7Im1hdGNoZXIiOnsiaWQiOiJieU5hbWUiLCJvcHRpb25zIjoiVGhyZWFkcyJ9LCJwcm9wZXJ0aWVzIjpbeyJpZCI6ImNvbG9yIiwidmFsdWUiOnsiZml4ZWRDb2xvciI6IiNCODc3RDkiLCJtb2RlIjoiZml4ZWQifX0seyJpZCI6ImN1c3RvbS5maWxsT3BhY2l0eSIsInZhbHVlIjoxMH0seyJpZCI6ImN1c3RvbS5saW5lV2lkdGgiLCJ2YWx1ZSI6Mn0seyJpZCI6ImN1c3RvbS5heGlzTGFiZWwiLCJ2YWx1ZSI6IlRocmVhZHMifV19XX0sImdyaWRQb3MiOnsiaCI6NywidyI6MjQsIngiOjAsInkiOjI0fSwiaWQiOjQwLCJpbnRlcnZhbCI6Iltbc2VuZF9pbnRlcnZhbF1dcyIsIm9wdGlvbnMiOnsibGVnZW5kIjp7ImNhbGNzIjpbIm1lYW4iLCJtYXgiXSwiZGlzcGxheU1vZGUiOiJ0YWJsZSIsInBsYWNlbWVudCI6InJpZ2h0Iiwic2hvd0xlZ2VuZCI6dHJ1ZX0sInRvb2x0aXAiOnsibW9kZSI6Im11bHRpIiwic29ydCI6Im5vbmUifX0sInBsdWdpblZlcnNpb24iOiIxMC4xLjUiLCJ0YXJnZXRzIjpbeyJmb3JtYXQiOiJ0aW1lX3NlcmllcyIsImdyb3VwIjpbXSwiaGlkZSI6ZmFsc2UsIm1ldHJpY0NvbHVtbiI6Im5vbmUiLCJyYXdRdWVyeSI6dHJ1ZSwicmF3U3FsIjoiU0VMRUNUIFxuICB0aW1lICsgaW50ZXJ2YWwgJyR7YWdncmVnYXRpb25faW50ZXJ2YWx9cycgYXMgdGltZSxcbiAgXCJwY3Q5NVwiLFxuICBcIm1ldHJpY1wiXG5GUk9NIChTRUxFQ1QgdGltZV9idWNrZXQoJyR7YWdncmVnYXRpb25faW50ZXJ2YWx9cycsIFwidGltZXN0YW1wXCIpIGFzIHRpbWUsXG4gIG1heChwY3Q5NSkgYXMgXCJwY3Q5NVwiLFxuICBjb25jYXQoJzk1dGggcGVyY2VudGlsZSAnLCB0ZXN0X2lkKSBhcyBcIm1ldHJpY1wiXG4gIEZST00gam1ldGVyX21ldHJpY3Muc2FtcGxlX21ldHJpY1xuICBXSEVSRVxuICAkX190aW1lRmlsdGVyKHRpbWVzdGFtcCkgQU5EXG4gICgtOTk5OSBpbiAoJHt0ZXN0SWQ6c3Fsc3RyaW5nfSkgT1IgdGVzdF9pZCBpbiAoJHt0ZXN0SWQ6c3Fsc3RyaW5nfSkpIEFORFxuICAoJyUlYWxsJSUnIGluICgke2xvY2F0aW9uOnNxbHN0cmluZ30pIE9SIGxvY2F0aW9uIElOICgke2xvY2F0aW9uOnNxbHN0cmluZ30pKSBBTkRcbiAgaXNfdHJhbnNhY3Rpb24gQU5EXG4gICgnJSVhbGwlJScgaW4gKCR7cmVxdWVzdDpzcWxzdHJpbmd9KSBPUiBuYW1lIElOICgke3JlcXVlc3Q6c3Fsc3RyaW5nfSkpIEFORFxuICBuYW1lIH4gJyR7dHJhbnNhY3Rpb246cmVnZXh9JyBBTkRcbiAgKCclJWFsbCUlJyBpbiAoJHt0aHJlYWRncm91cDpzcWxzdHJpbmd9KSBPUiBcInRocmVhZF9ncm91cF9uYW1lXCIgSU4gKCR7dGhyZWFkZ3JvdXA6c3Fsc3RyaW5nfSkpXG4gIEdST1VQIEJZIDEsIHRlc3RfaWRcbiAgT1JERVIgQlkgMVxuKSBzdWIiLCJyZWZJZCI6IlBDVDk1Iiwic2VsZWN0IjpbW3sicGFyYW1zIjpbInZhbHVlIl0sInR5cGUiOiJjb2x1bW4ifV1dLCJ0aW1lQ29sdW1uIjoidGltZSIsIndoZXJlIjpbeyJuYW1lIjoiJF9fdGltZUZpbHRlciIsInBhcmFtcyI6W10sInR5cGUiOiJtYWNybyJ9XX0seyJmb3JtYXQiOiJ0aW1lX3NlcmllcyIsImdyb3VwIjpbXSwiaGlkZSI6ZmFsc2UsIm1ldHJpY0NvbHVtbiI6Im5vbmUiLCJyYXdRdWVyeSI6dHJ1ZSwicmF3U3FsIjoiU0VMRUNUIFxuICB0aW1lICsgaW50ZXJ2YWwgJyR7YWdncmVnYXRpb25faW50ZXJ2YWx9cycgYXMgdGltZSxcbiAgXCJhdmdcIixcbiAgXCJtZXRyaWNcIlxuRlJPTSAoXG5TRUxFQ1QgXG4gIHRpbWVfYnVja2V0KCcke2FnZ3JlZ2F0aW9uX2ludGVydmFsfXMnLCBcInRpbWVzdGFtcFwiKSBhcyB0aW1lLFxyXG4gIGF2ZyhtZWFuKSBhcyBcImF2Z1wiLFxyXG4gIGNvbmNhdCgnQXZlcmFnZSAnLCB0ZXN0X2lkKSBhcyBcIm1ldHJpY1wiXHJcbiAgRlJPTSBqbWV0ZXJfbWV0cmljcy5zYW1wbGVfbWV0cmljXHJcbiAgV0hFUkVcclxuICAkX190aW1lRmlsdGVyKHRpbWVzdGFtcCkgQU5EXHJcbiAgKC05OTk5IGluICgke3Rlc3RJZDpzcWxzdHJpbmd9KSBPUiB0ZXN0X2lkIGluICgke3Rlc3RJZDpzcWxzdHJpbmd9KSkgQU5EXHJcbiAgKCclJWFsbCUlJyBpbiAoJHtsb2NhdGlvbjpzcWxzdHJpbmd9KSBPUiBsb2NhdGlvbiBJTiAoJHtsb2NhdGlvbjpzcWxzdHJpbmd9KSkgQU5EXHJcbiAgaXNfdHJhbnNhY3Rpb24gQU5EXHJcbiAgKCclJWFsbCUlJyBpbiAoJHtyZXF1ZXN0OnNxbHN0cmluZ30pIE9SIG5hbWUgSU4gKCR7cmVxdWVzdDpzcWxzdHJpbmd9KSkgQU5EXHJcbiAgbmFtZSB+ICcke3RyYW5zYWN0aW9uOnJlZ2V4fScgQU5EXHJcbiAgKCclJWFsbCUlJyBpbiAoJHt0aHJlYWRncm91cDpzcWxzdHJpbmd9KSBPUiBcInRocmVhZF9ncm91cF9uYW1lXCIgSU4gKCR7dGhyZWFkZ3JvdXA6c3Fsc3RyaW5nfSkpXHJcbiAgR1JPVVAgQlkgMSwgdGVzdF9pZFxyXG4gIE9SREVSIEJZIDFcbikgc3ViIiwicmVmSWQiOiJBVkciLCJzZWxlY3QiOltbeyJwYXJhbXMiOlsidmFsdWUiXSwidHlwZSI6ImNvbHVtbiJ9XV0sInRpbWVDb2x1bW4iOiJ0aW1lIiwid2hlcmUiOlt7Im5hbWUiOiIkX190aW1lRmlsdGVyIiwicGFyYW1zIjpbXSwidHlwZSI6Im1hY3JvIn1dfV0sInRpbWVGcm9tIjpudWxsLCJ0aW1lU2hpZnQiOm51bGwsInRpdGxlIjoiVHJhbnNhY3Rpb25zIFJlc3BvbnNlIFRpbWVzICg5NXRoIHBjdCkiLCJ0cmFuc2Zvcm1hdGlvbnMiOltdLCJ0eXBlIjoidGltZXNlcmllcyJ9LHsiZGF0YXNvdXJjZSI6InRlYW1fMTNfcHVibGljX3RpbWVzY2FsZSIsImZpZWxkQ29uZmlnIjp7ImRlZmF1bHRzIjp7ImNvbG9yIjp7Im1vZGUiOiJwYWxldHRlLWNsYXNzaWMifSwiY3VzdG9tIjp7ImF4aXNDZW50ZXJlZFplcm8iOmZhbHNlLCJheGlzQ29sb3JNb2RlIjoidGV4dCIsImF4aXNMYWJlbCI6IiIsImF4aXNQbGFjZW1lbnQiOiJhdXRvIiwiYmFyQWxpZ25tZW50IjowLCJkcmF3U3R5bGUiOiJsaW5lIiwiZmlsbE9wYWNpdHkiOjIwLCJncmFkaWVudE1vZGUiOiJvcGFjaXR5IiwiaGlkZUZyb20iOnsibGVnZW5kIjpmYWxzZSwidG9vbHRpcCI6ZmFsc2UsInZpeiI6ZmFsc2V9LCJpbnNlcnROdWxscyI6ZmFsc2UsImxpbmVJbnRlcnBvbGF0aW9uIjoibGluZWFyIiwibGluZVdpZHRoIjoxLCJwb2ludFNpemUiOjUsInNjYWxlRGlzdHJpYnV0aW9uIjp7InR5cGUiOiJsaW5lYXIifSwic2hvd1BvaW50cyI6Im5ldmVyIiwic3Bhbk51bGxzIjpmYWxzZSwic3RhY2tpbmciOnsiZ3JvdXAiOiJBIiwibW9kZSI6Im5vbmUifSwidGhyZXNob2xkc1N0eWxlIjp7Im1vZGUiOiJvZmYifX0sIm1hcHBpbmdzIjpbXSwidGhyZXNob2xkcyI6eyJtb2RlIjoiYWJzb2x1dGUiLCJzdGVwcyI6W3siY29sb3IiOiJncmVlbiIsInZhbHVlIjpudWxsfSx7ImNvbG9yIjoicmVkIiwidmFsdWUiOjgwfV19LCJ1bml0IjoiYnl0ZXMifSwib3ZlcnJpZGVzIjpbXX0sImdyaWRQb3MiOnsiaCI6NywidyI6MjQsIngiOjAsInkiOjMxfSwiaWQiOjQyLCJpbnRlcnZhbCI6Iltbc2VuZF9pbnRlcnZhbF1dcyIsIm9wdGlvbnMiOnsibGVnZW5kIjp7ImNhbGNzIjpbIm1lYW4iLCJtYXgiLCJzdW0iXSwiZGlzcGxheU1vZGUiOiJ0YWJsZSIsInBsYWNlbWVudCI6InJpZ2h0Iiwic2hvd0xlZ2VuZCI6dHJ1ZX0sInRvb2x0aXAiOnsibW9kZSI6Im11bHRpIiwic29ydCI6Im5vbmUifX0sInBsdWdpblZlcnNpb24iOiIxMC4xLjUiLCJ0YXJnZXRzIjpbeyJmb3JtYXQiOiJ0aW1lX3NlcmllcyIsImdyb3VwIjpbeyJwYXJhbXMiOlsiJF9faW50ZXJ2YWwiLCIwIl0sInR5cGUiOiJ0aW1lIn1dLCJtZXRyaWNDb2x1bW4iOiJub25lIiwicXVlcnlUeXBlIjoicmFuZG9tV2FsayIsInJhd1F1ZXJ5Ijp0cnVlLCJyYXdTcWwiOiJTRUxFQ1QgXG4gIHRpbWUgKyBpbnRlcnZhbCAnJHthZ2dyZWdhdGlvbl9pbnRlcnZhbH1zJyBhcyB0aW1lLFxuICBcInNlbnRcIiBhcyBcIlNlbnQgYnl0ZXNcIixcbiAgXCJtZXRyaWNcIlxuRlJPTSAoXG4gIFNFTEVDVCB0aW1lX2J1Y2tldCgnJHthZ2dyZWdhdGlvbl9pbnRlcnZhbH1zJywgXCJ0aW1lc3RhbXBcIikgYXMgdGltZSxcclxuICBzdW0oc2VudF9ieXRlcykgYXMgXCJzZW50XCIsXHJcbiAgY29uY2F0KCdTZW50IGJ5dGVzICcsIHRlc3RfaWQpIGFzIFwibWV0cmljXCJcclxuICBGUk9NIGptZXRlcl9tZXRyaWNzLnNhbXBsZV9tZXRyaWNcclxuICBXSEVSRVxyXG4gICRfX3RpbWVGaWx0ZXIodGltZXN0YW1wKSBBTkRcclxuICAoLTk5OTkgaW4gKCR7dGVzdElkOnNxbHN0cmluZ30pIE9SIHRlc3RfaWQgaW4gKCR7dGVzdElkOnNxbHN0cmluZ30pKSBBTkRcclxuICAoJyUlYWxsJSUnIGluICgke2xvY2F0aW9uOnNxbHN0cmluZ30pIE9SIGxvY2F0aW9uIElOICgke2xvY2F0aW9uOnNxbHN0cmluZ30pKSBBTkRcclxuICBub3QgaXNfdHJhbnNhY3Rpb24gQU5EXHJcbiAgKCclJWFsbCUlJyBpbiAoJHtyZXF1ZXN0OnNxbHN0cmluZ30pIE9SIG5hbWUgSU4gKCR7cmVxdWVzdDpzcWxzdHJpbmd9KSkgQU5EXHJcbiAgbmFtZSB+ICcke3RyYW5zYWN0aW9uOnJlZ2V4fScgQU5EXHJcbiAgKCclJWFsbCUlJyBpbiAoJHt0aHJlYWRncm91cDpzcWxzdHJpbmd9KSBPUiBcInRocmVhZF9ncm91cF9uYW1lXCIgSU4gKCR7dGhyZWFkZ3JvdXA6c3Fsc3RyaW5nfSkpXHJcbiAgR1JPVVAgQlkgMSwgdGVzdF9pZFxyXG4gIE9SREVSIEJZIDFcbikgc3ViIiwicmVmSWQiOiJTZW50IGJ5dGVzIiwic2VsZWN0IjpbW3sicGFyYW1zIjpbInN0YXJ0ZWRfdGhyZWFkcyJdLCJ0eXBlIjoiY29sdW1uIn0seyJwYXJhbXMiOlsic3VtIl0sInR5cGUiOiJhZ2dyZWdhdGUifSx7InBhcmFtcyI6WyJzdCJdLCJ0eXBlIjoiYWxpYXMifV1dLCJ0YWJsZSI6ImptZXRlcl9tZXRyaWNzLnRocmVhZF9tZXRyaWMiLCJ0aW1lQ29sdW1uIjoiXCJ0aW1lXCIiLCJ0aW1lQ29sdW1uVHlwZSI6InRpbWVzdGFtcCIsIndoZXJlIjpbeyJuYW1lIjoiJF9fdGltZUZpbHRlciIsInBhcmFtcyI6W10sInR5cGUiOiJtYWNybyJ9LHsiZGF0YXR5cGUiOiJpbnQ4IiwibmFtZSI6IiIsInBhcmFtcyI6WyJ0ZXN0X2lkIiwiSU4iLCIoJHt0ZXN0SWQ6c3Fsc3RyaW5nfSkiXSwidHlwZSI6ImV4cHJlc3Npb24ifV19LHsiZm9ybWF0IjoidGltZV9zZXJpZXMiLCJncm91cCI6W10sImhpZGUiOmZhbHNlLCJtZXRyaWNDb2x1bW4iOiJub25lIiwicmF3UXVlcnkiOnRydWUsInJhd1NxbCI6IlNFTEVDVCBcbiAgdGltZSArIGludGVydmFsICcke2FnZ3JlZ2F0aW9uX2ludGVydmFsfXMnIGFzIHRpbWUsXG4gIFwicmVjZWl2ZWRcIiBhcyBcIlJlY2VpdmVkIGJ5dGVzXCIsXG4gIFwibWV0cmljXCJcbkZST00gKFxuICBTRUxFQ1QgdGltZV9idWNrZXQoJyR7YWdncmVnYXRpb25faW50ZXJ2YWx9cycsIFwidGltZXN0YW1wXCIpIGFzIHRpbWUsXHJcbiAgc3VtKHJlY2VpdmVkX2J5dGVzKSBhcyBcInJlY2VpdmVkXCIsXHJcbiAgY29uY2F0KCdSZWNlaXZlZCBieXRlcyAnLCB0ZXN0X2lkKSBhcyBcIm1ldHJpY1wiXHJcbiAgRlJPTSBqbWV0ZXJfbWV0cmljcy5zYW1wbGVfbWV0cmljXHJcbiAgV0hFUkVcclxuICAkX190aW1lRmlsdGVyKHRpbWVzdGFtcCkgQU5EXHJcbiAgKC05OTk5IGluICgke3Rlc3RJZDpzcWxzdHJpbmd9KSBPUiB0ZXN0X2lkIGluICgke3Rlc3RJZDpzcWxzdHJpbmd9KSkgQU5EXHJcbiAgKCclJWFsbCUlJyBpbiAoJHtsb2NhdGlvbjpzcWxzdHJpbmd9KSBPUiBsb2NhdGlvbiBJTiAoJHtsb2NhdGlvbjpzcWxzdHJpbmd9KSkgQU5EXHJcbiAgbm90IGlzX3RyYW5zYWN0aW9uIEFORFxyXG4gICgnJSVhbGwlJScgaW4gKCR7cmVxdWVzdDpzcWxzdHJpbmd9KSBPUiBuYW1lIElOICgke3JlcXVlc3Q6c3Fsc3RyaW5nfSkpIEFORFxyXG4gIG5hbWUgfiAnJHt0cmFuc2FjdGlvbjpyZWdleH0nIEFORFxyXG4gICgnJSVhbGwlJScgaW4gKCR7dGhyZWFkZ3JvdXA6c3Fsc3RyaW5nfSkgT1IgXCJ0aHJlYWRfZ3JvdXBfbmFtZVwiIElOICgke3RocmVhZGdyb3VwOnNxbHN0cmluZ30pKVxyXG4gIEdST1VQIEJZIDEsIHRlc3RfaWRcclxuICBPUkRFUiBCWSAxXG4pIHN1YiIsInJlZklkIjoiUmVjZWl2ZWQgYnl0ZXMiLCJzZWxlY3QiOltbeyJwYXJhbXMiOlsidmFsdWUiXSwidHlwZSI6ImNvbHVtbiJ9XV0sInRpbWVDb2x1bW4iOiJ0aW1lIiwid2hlcmUiOlt7Im5hbWUiOiIkX190aW1lRmlsdGVyIiwicGFyYW1zIjpbXSwidHlwZSI6Im1hY3JvIn1dfV0sInRpbWVGcm9tIjpudWxsLCJ0aW1lU2hpZnQiOm51bGwsInRpdGxlIjoiTmV0d29yayBUcmFmZmljIiwidHJhbnNmb3JtYXRpb25zIjpbXSwidHlwZSI6InRpbWVzZXJpZXMifV0sInRpdGxlIjoiSW5kaXZpZHVhbCBmaWx0ZXIiLCJ0eXBlIjoicm93In0seyJjb2xsYXBzZWQiOnRydWUsImRhdGFzb3VyY2UiOm51bGwsImdyaWRQb3MiOnsiaCI6MSwidyI6MjQsIngiOjAsInkiOjQ3fSwiaWQiOjQ0LCJwYW5lbHMiOlt7ImRhdGFzb3VyY2UiOiJ0ZWFtXzEzX3B1YmxpY190aW1lc2NhbGUiLCJmaWVsZENvbmZpZyI6eyJkZWZhdWx0cyI6eyJjb2xvciI6eyJtb2RlIjoicGFsZXR0ZS1jbGFzc2ljIn0sImN1c3RvbSI6eyJheGlzQ2VudGVyZWRaZXJvIjpmYWxzZSwiYXhpc0NvbG9yTW9kZSI6InRleHQiLCJheGlzTGFiZWwiOiIiLCJheGlzUGxhY2VtZW50IjoiYXV0byIsImJhckFsaWdubWVudCI6MCwiZHJhd1N0eWxlIjoibGluZSIsImZpbGxPcGFjaXR5IjoyMCwiZ3JhZGllbnRNb2RlIjoib3BhY2l0eSIsImhpZGVGcm9tIjp7ImxlZ2VuZCI6ZmFsc2UsInRvb2x0aXAiOmZhbHNlLCJ2aXoiOmZhbHNlfSwiaW5zZXJ0TnVsbHMiOmZhbHNlLCJsaW5lSW50ZXJwb2xhdGlvbiI6ImxpbmVhciIsImxpbmVXaWR0aCI6MSwicG9pbnRTaXplIjo1LCJzY2FsZURpc3RyaWJ1dGlvbiI6eyJ0eXBlIjoibGluZWFyIn0sInNob3dQb2ludHMiOiJuZXZlciIsInNwYW5OdWxscyI6ZmFsc2UsInN0YWNraW5nIjp7Imdyb3VwIjoiQSIsIm1vZGUiOiJub25lIn0sInRocmVzaG9sZHNTdHlsZSI6eyJtb2RlIjoib2ZmIn19LCJtYXBwaW5ncyI6W10sIm1heCI6MTAwLCJtaW4iOjAsInRocmVzaG9sZHMiOnsibW9kZSI6ImFic29sdXRlIiwic3RlcHMiOlt7ImNvbG9yIjoiZ3JlZW4iLCJ2YWx1ZSI6bnVsbH0seyJjb2xvciI6InJlZCIsInZhbHVlIjo4MH1dfSwidW5pdCI6InBlcmNlbnQifSwib3ZlcnJpZGVzIjpbXX0sImdyaWRQb3MiOnsiaCI6OCwidyI6MTIsIngiOjAsInkiOjQ4fSwiaWQiOjQ2LCJvcHRpb25zIjp7ImxlZ2VuZCI6eyJjYWxjcyI6WyJtZWFuIiwibGFzdE5vdE51bGwiLCJtYXgiXSwiZGlzcGxheU1vZGUiOiJ0YWJsZSIsInBsYWNlbWVudCI6InJpZ2h0Iiwic2hvd0xlZ2VuZCI6dHJ1ZX0sInRvb2x0aXAiOnsibW9kZSI6Im11bHRpIiwic29ydCI6Im5vbmUifX0sInBsdWdpblZlcnNpb24iOiIxMC4xLjUiLCJ0YXJnZXRzIjpbeyJmb3JtYXQiOiJ0aW1lX3NlcmllcyIsImdyb3VwIjpbXSwibWV0cmljQ29sdW1uIjoibm9uZSIsInF1ZXJ5VHlwZSI6InJhbmRvbVdhbGsiLCJyYXdRdWVyeSI6dHJ1ZSwicmF3U3FsIjoiU0VMRUNUIFxuICB0aW1lICsgaW50ZXJ2YWwgJyR7YWdncmVnYXRpb25faW50ZXJ2YWx9cycgYXMgdGltZSxcbiAgXCJ1c2FnZV9wZXJjZW50XCIsXG4gIFwibWV0cmljXCJcbkZST00gKFxuICBTRUxFQ1QgdGltZV9idWNrZXQoJyR7YWdncmVnYXRpb25faW50ZXJ2YWx9cycsIFwidGltZVwiKSBhcyB0aW1lLFxuICBtYXgoMTAwIC0gdXNhZ2VfaWRsZSkgYXMgXCJ1c2FnZV9wZXJjZW50XCIsXG4gIGNvbmNhdCgnVGVzdCAnLCB0ZXN0X2lkLCAnIGNvbnRhaW5lciAnLCBjb250YWluZXJfaWQsICcgJywgY3B1KSBhcyBcIm1ldHJpY1wiXG4gIEZST00gdGVzdF9ydW5uZXJfbW9uaXRvcmluZy5jcHVcbiAgV0hFUkVcbiAgJF9fdGltZUZpbHRlcih0aW1lKSBBTkRcbiAgKC05OTk5IGluICgke3Rlc3RJZDpzcWxzdHJpbmd9KSBPUiB0ZXN0X2lkOjppbnRlZ2VyIGluICgke3Rlc3RJZDpzcWxzdHJpbmd9KSkgQU5EXG4gICgnJSVhbGwlJScgaW4gKCR7bG9jYXRpb246c3Fsc3RyaW5nfSkgT1IgdGVzdF9ydW5uZXJfbG9jYXRpb24gSU4gKCR7bG9jYXRpb246c3Fsc3RyaW5nfSkpIEFORFxuICBjcHUgIT0gJ2NwdS10b3RhbCdcbiAgR1JPVVAgQlkgMSwgY3B1LCBjb250YWluZXJfaWQsIHRlc3RfaWQgXG4gIE9SREVSIEJZIDEsIDNcbikgc3ViIiwicmVmSWQiOiJBIiwic2VsZWN0IjpbW3sicGFyYW1zIjpbInZhbHVlIl0sInR5cGUiOiJjb2x1bW4ifV1dLCJ0aW1lQ29sdW1uIjoidGltZSIsIndoZXJlIjpbeyJuYW1lIjoiJF9fdGltZUZpbHRlciIsInBhcmFtcyI6W10sInR5cGUiOiJtYWNybyJ9XX1dLCJ0aW1lRnJvbSI6bnVsbCwidGltZVNoaWZ0IjpudWxsLCJ0aXRsZSI6IkNQVSBVc2FnZSBwZXIgY29yZSAlIiwidHlwZSI6InRpbWVzZXJpZXMifSx7ImRhdGFzb3VyY2UiOiJ0ZWFtXzEzX3B1YmxpY190aW1lc2NhbGUiLCJmaWVsZENvbmZpZyI6eyJkZWZhdWx0cyI6eyJjb2xvciI6eyJtb2RlIjoicGFsZXR0ZS1jbGFzc2ljIn0sImN1c3RvbSI6eyJheGlzQ2VudGVyZWRaZXJvIjpmYWxzZSwiYXhpc0NvbG9yTW9kZSI6InRleHQiLCJheGlzTGFiZWwiOiIiLCJheGlzUGxhY2VtZW50IjoiYXV0byIsImJhckFsaWdubWVudCI6MCwiZHJhd1N0eWxlIjoibGluZSIsImZpbGxPcGFjaXR5IjoyMCwiZ3JhZGllbnRNb2RlIjoib3BhY2l0eSIsImhpZGVGcm9tIjp7ImxlZ2VuZCI6ZmFsc2UsInRvb2x0aXAiOmZhbHNlLCJ2aXoiOmZhbHNlfSwiaW5zZXJ0TnVsbHMiOmZhbHNlLCJsaW5lSW50ZXJwb2xhdGlvbiI6ImxpbmVhciIsImxpbmVXaWR0aCI6MSwicG9pbnRTaXplIjo1LCJzY2FsZURpc3RyaWJ1dGlvbiI6eyJ0eXBlIjoibGluZWFyIn0sInNob3dQb2ludHMiOiJuZXZlciIsInNwYW5OdWxscyI6ZmFsc2UsInN0YWNraW5nIjp7Imdyb3VwIjoiQSIsIm1vZGUiOiJub25lIn0sInRocmVzaG9sZHNTdHlsZSI6eyJtb2RlIjoib2ZmIn19LCJtYXBwaW5ncyI6W10sIm1heCI6MTAwLCJtaW4iOjAsInRocmVzaG9sZHMiOnsibW9kZSI6ImFic29sdXRlIiwic3RlcHMiOlt7ImNvbG9yIjoiZ3JlZW4iLCJ2YWx1ZSI6bnVsbH0seyJjb2xvciI6InJlZCIsInZhbHVlIjo4MH1dfSwidW5pdCI6InBlcmNlbnQifSwib3ZlcnJpZGVzIjpbXX0sImdyaWRQb3MiOnsiaCI6OCwidyI6MTIsIngiOjEyLCJ5Ijo0OH0sImlkIjo1Miwib3B0aW9ucyI6eyJsZWdlbmQiOnsiY2FsY3MiOlsibWVhbiIsImxhc3ROb3ROdWxsIiwibWF4Il0sImRpc3BsYXlNb2RlIjoidGFibGUiLCJwbGFjZW1lbnQiOiJyaWdodCIsInNob3dMZWdlbmQiOnRydWV9LCJ0b29sdGlwIjp7Im1vZGUiOiJtdWx0aSIsInNvcnQiOiJub25lIn19LCJwbHVnaW5WZXJzaW9uIjoiMTAuMS41IiwidGFyZ2V0cyI6W3siZm9ybWF0IjoidGltZV9zZXJpZXMiLCJncm91cCI6W10sIm1ldHJpY0NvbHVtbiI6Im5vbmUiLCJxdWVyeVR5cGUiOiJyYW5kb21XYWxrIiwicmF3UXVlcnkiOnRydWUsInJhd1NxbCI6IlNFTEVDVCBcbiAgdGltZSArIGludGVydmFsICcke2FnZ3JlZ2F0aW9uX2ludGVydmFsfXMnIGFzIHRpbWUsXG4gIFwidXNhZ2VfcGVyY2VudFwiLFxuICBcIm1ldHJpY1wiXG5GUk9NIChcbiAgU0VMRUNUIFxuICAgIHRpbWVfYnVja2V0KCcke2FnZ3JlZ2F0aW9uX2ludGVydmFsfXMnLCBcInRpbWVcIikgYXMgdGltZSxcbiAgICBtYXgoMTAwIC0gdXNhZ2VfaWRsZSkgYXMgXCJ1c2FnZV9wZXJjZW50XCIsXG4gICAgY29uY2F0KCdUZXN0ICcsIHRlc3RfaWQsICcgY29udGFpbmVyICcsIGNvbnRhaW5lcl9pZCkgYXMgXCJtZXRyaWNcIlxuICBGUk9NIHRlc3RfcnVubmVyX21vbml0b3JpbmcuY3B1XG4gIFdIRVJFXG4gICAgJF9fdGltZUZpbHRlcih0aW1lKSBBTkRcbiAgICAoLTk5OTkgaW4gKCR7dGVzdElkOnNxbHN0cmluZ30pIE9SIHRlc3RfaWQ6OmludGVnZXIgaW4gKCR7dGVzdElkOnNxbHN0cmluZ30pKSBBTkRcbiAgICAoJyUlYWxsJSUnIGluICgke2xvY2F0aW9uOnNxbHN0cmluZ30pIE9SIHRlc3RfcnVubmVyX2xvY2F0aW9uIElOICgke2xvY2F0aW9uOnNxbHN0cmluZ30pKVxuICAgIGFuZCBjcHUgPSAnY3B1LXRvdGFsJ1xuICBHUk9VUCBCWSAxLCBjb250YWluZXJfaWQsIHRlc3RfaWQgXG4gIE9SREVSIEJZIDEsIDNcbikgc3ViIiwicmVmSWQiOiJBIiwic2VsZWN0IjpbW3sicGFyYW1zIjpbInZhbHVlIl0sInR5cGUiOiJjb2x1bW4ifV1dLCJ0aW1lQ29sdW1uIjoidGltZSIsIndoZXJlIjpbeyJuYW1lIjoiJF9fdGltZUZpbHRlciIsInBhcmFtcyI6W10sInR5cGUiOiJtYWNybyJ9XX1dLCJ0aW1lRnJvbSI6bnVsbCwidGltZVNoaWZ0IjpudWxsLCJ0aXRsZSI6IkNQVSBVc2FnZSBwZXIgY29udGFpbmVyIiwidHlwZSI6InRpbWVzZXJpZXMifSx7ImRhdGFzb3VyY2UiOiJ0ZWFtXzEzX3B1YmxpY190aW1lc2NhbGUiLCJmaWVsZENvbmZpZyI6eyJkZWZhdWx0cyI6eyJjb2xvciI6eyJtb2RlIjoicGFsZXR0ZS1jbGFzc2ljIn0sImN1c3RvbSI6eyJheGlzQ2VudGVyZWRaZXJvIjpmYWxzZSwiYXhpc0NvbG9yTW9kZSI6InRleHQiLCJheGlzTGFiZWwiOiIiLCJheGlzUGxhY2VtZW50IjoiYXV0byIsImJhckFsaWdubWVudCI6MCwiZHJhd1N0eWxlIjoibGluZSIsImZpbGxPcGFjaXR5IjoyMCwiZ3JhZGllbnRNb2RlIjoib3BhY2l0eSIsImhpZGVGcm9tIjp7ImxlZ2VuZCI6ZmFsc2UsInRvb2x0aXAiOmZhbHNlLCJ2aXoiOmZhbHNlfSwiaW5zZXJ0TnVsbHMiOmZhbHNlLCJsaW5lSW50ZXJwb2xhdGlvbiI6ImxpbmVhciIsImxpbmVXaWR0aCI6MiwicG9pbnRTaXplIjo1LCJzY2FsZURpc3RyaWJ1dGlvbiI6eyJ0eXBlIjoibGluZWFyIn0sInNob3dQb2ludHMiOiJuZXZlciIsInNwYW5OdWxscyI6ZmFsc2UsInN0YWNraW5nIjp7Imdyb3VwIjoiQSIsIm1vZGUiOiJub25lIn0sInRocmVzaG9sZHNTdHlsZSI6eyJtb2RlIjoib2ZmIn19LCJtYXBwaW5ncyI6W10sIm1pbiI6MCwidGhyZXNob2xkcyI6eyJtb2RlIjoiYWJzb2x1dGUiLCJzdGVwcyI6W3siY29sb3IiOiJncmVlbiIsInZhbHVlIjpudWxsfSx7ImNvbG9yIjoicmVkIiwidmFsdWUiOjgwfV19LCJ1bml0IjoicGVyY2VudCJ9LCJvdmVycmlkZXMiOlt7Im1hdGNoZXIiOnsiaWQiOiJieUZyYW1lUmVmSUQiLCJvcHRpb25zIjoiQiJ9LCJwcm9wZXJ0aWVzIjpbeyJpZCI6InVuaXQiLCJ2YWx1ZSI6ImJ5dGVzIn1dfV19LCJncmlkUG9zIjp7ImgiOjgsInciOjI0LCJ4IjowLCJ5Ijo1Nn0sImlkIjo0OCwib3B0aW9ucyI6eyJsZWdlbmQiOnsiY2FsY3MiOlsibWVhbiIsImxhc3ROb3ROdWxsIiwibWF4Il0sImRpc3BsYXlNb2RlIjoidGFibGUiLCJwbGFjZW1lbnQiOiJyaWdodCIsInNob3dMZWdlbmQiOnRydWV9LCJ0b29sdGlwIjp7Im1vZGUiOiJtdWx0aSIsInNvcnQiOiJkZXNjIn19LCJwbHVnaW5WZXJzaW9uIjoiMTAuMS41IiwidGFyZ2V0cyI6W3siZm9ybWF0IjoidGltZV9zZXJpZXMiLCJncm91cCI6W10sIm1ldHJpY0NvbHVtbiI6Im5vbmUiLCJxdWVyeVR5cGUiOiJyYW5kb21XYWxrIiwicmF3UXVlcnkiOnRydWUsInJhd1NxbCI6IlNFTEVDVCBcbiAgdGltZSArIGludGVydmFsICcke2FnZ3JlZ2F0aW9uX2ludGVydmFsfXMnIGFzIHRpbWUsXG4gIHN1Yi51c2FnZV9wZXJjZW50IGFzIFwidXNhZ2VfcGVyY2VudFwiLFxuICBzdWIuY29udGFpbmVyIGFzIFwibWV0cmljXCJcbkZST00gKFxuICBTRUxFQ1QgXG4gICAgdGltZV9idWNrZXQoJyR7YWdncmVnYXRpb25faW50ZXJ2YWx9cycsIFwidGltZVwiKSBhcyB0aW1lLFxuICAgIG1heCh1c2VkX3BlcmNlbnQpIGFzIFwidXNhZ2VfcGVyY2VudFwiLFxuICAgIGNvbmNhdCgnVGVzdCAnLCB0ZXN0X2lkLCAnIGNvbnRhaW5lciAnLCBjb250YWluZXJfaWQsICcgdXNhZ2UgJScpIGFzIFwiY29udGFpbmVyXCJcbiAgRlJPTSB0ZXN0X3J1bm5lcl9tb25pdG9yaW5nLm1lbVxuICBXSEVSRVxuICAgICRfX3RpbWVGaWx0ZXIodGltZSkgQU5EXG4gICAgKC05OTk5IGluICgke3Rlc3RJZDpzcWxzdHJpbmd9KSBPUiB0ZXN0X2lkOjppbnRlZ2VyIGluICgke3Rlc3RJZDpzcWxzdHJpbmd9KSkgQU5EXG4gICAgKCclJWFsbCUlJyBpbiAoJHtsb2NhdGlvbjpzcWxzdHJpbmd9KSBPUiB0ZXN0X3J1bm5lcl9sb2NhdGlvbiBJTiAoJHtsb2NhdGlvbjpzcWxzdHJpbmd9KSlcbiAgR1JPVVAgQlkgMSwgY29udGFpbmVyX2lkLCB0ZXN0X2lkXG4gIE9SREVSIEJZIDFcbikgc3ViIiwicmVmSWQiOiJBIiwic2VsZWN0IjpbW3sicGFyYW1zIjpbInZhbHVlIl0sInR5cGUiOiJjb2x1bW4ifV1dLCJ0aW1lQ29sdW1uIjoidGltZSIsIndoZXJlIjpbeyJuYW1lIjoiJF9fdGltZUZpbHRlciIsInBhcmFtcyI6W10sInR5cGUiOiJtYWNybyJ9XX0seyJmb3JtYXQiOiJ0aW1lX3NlcmllcyIsImdyb3VwIjpbXSwiaGlkZSI6ZmFsc2UsIm1ldHJpY0NvbHVtbiI6Im5vbmUiLCJyYXdRdWVyeSI6dHJ1ZSwicmF3U3FsIjoiU0VMRUNUIFxuICB0aW1lICsgaW50ZXJ2YWwgJyR7YWdncmVnYXRpb25faW50ZXJ2YWx9cycgYXMgdGltZSxcbiAgc3ViLnVzZWRfdG90YWwgYXMgXCJ1c2VkX3RvdGFsXCIsXG4gIHN1Yi5jb250YWluZXIgYXMgXCJtZXRyaWNcIlxuRlJPTSAoXG4gIFNFTEVDVCBcbiAgICB0aW1lX2J1Y2tldCgnJHthZ2dyZWdhdGlvbl9pbnRlcnZhbH1zJywgXCJ0aW1lXCIpIGFzIHRpbWUsXG4gICAgbWF4KHVzZWQpIGFzIFwidXNlZF90b3RhbFwiLFxuICAgIGNvbmNhdCgnVGVzdCAnLCB0ZXN0X2lkLCAnIGNvbnRhaW5lciAnLCBjb250YWluZXJfaWQsICcgdXNhZ2UgdG90YWwnKSBhcyBcImNvbnRhaW5lclwiXG4gIEZST00gdGVzdF9ydW5uZXJfbW9uaXRvcmluZy5tZW1cbiAgV0hFUkVcbiAgICAkX190aW1lRmlsdGVyKHRpbWUpIEFORFxuICAgICgtOTk5OSBpbiAoJHt0ZXN0SWQ6c3Fsc3RyaW5nfSkgT1IgdGVzdF9pZDo6aW50ZWdlciBpbiAoJHt0ZXN0SWQ6c3Fsc3RyaW5nfSkpIEFORFxuICAgICgnJSVhbGwlJScgaW4gKCR7bG9jYXRpb246c3Fsc3RyaW5nfSkgT1IgdGVzdF9ydW5uZXJfbG9jYXRpb24gSU4gKCR7bG9jYXRpb246c3Fsc3RyaW5nfSkpXG4gIEdST1VQIEJZIDEsIGNvbnRhaW5lcl9pZCwgdGVzdF9pZFxuICBPUkRFUiBCWSAxXG4pIHN1YiIsInJlZklkIjoiQiIsInNlbGVjdCI6W1t7InBhcmFtcyI6WyJ2YWx1ZSJdLCJ0eXBlIjoiY29sdW1uIn1dXSwidGltZUNvbHVtbiI6InRpbWUiLCJ3aGVyZSI6W3sibmFtZSI6IiRfX3RpbWVGaWx0ZXIiLCJwYXJhbXMiOltdLCJ0eXBlIjoibWFjcm8ifV19XSwidGltZUZyb20iOm51bGwsInRpbWVTaGlmdCI6bnVsbCwidGl0bGUiOiJNZW1vcnkgVXNhZ2UiLCJ0cmFuc2Zvcm1hdGlvbnMiOltdLCJ0eXBlIjoidGltZXNlcmllcyJ9LHsiZGF0YXNvdXJjZSI6InRlYW1fMTNfcHVibGljX3RpbWVzY2FsZSIsImZpZWxkQ29uZmlnIjp7ImRlZmF1bHRzIjp7ImNvbG9yIjp7Im1vZGUiOiJwYWxldHRlLWNsYXNzaWMifSwiY3VzdG9tIjp7ImF4aXNDZW50ZXJlZFplcm8iOmZhbHNlLCJheGlzQ29sb3JNb2RlIjoidGV4dCIsImF4aXNMYWJlbCI6IiIsImF4aXNQbGFjZW1lbnQiOiJhdXRvIiwiYmFyQWxpZ25tZW50IjowLCJkcmF3U3R5bGUiOiJsaW5lIiwiZmlsbE9wYWNpdHkiOjIwLCJncmFkaWVudE1vZGUiOiJvcGFjaXR5IiwiaGlkZUZyb20iOnsibGVnZW5kIjpmYWxzZSwidG9vbHRpcCI6ZmFsc2UsInZpeiI6ZmFsc2V9LCJpbnNlcnROdWxscyI6ZmFsc2UsImxpbmVJbnRlcnBvbGF0aW9uIjoibGluZWFyIiwibGluZVdpZHRoIjoyLCJwb2ludFNpemUiOjUsInNjYWxlRGlzdHJpYnV0aW9uIjp7InR5cGUiOiJsaW5lYXIifSwic2hvd1BvaW50cyI6Im5ldmVyIiwic3Bhbk51bGxzIjpmYWxzZSwic3RhY2tpbmciOnsiZ3JvdXAiOiJBIiwibW9kZSI6Im5vbmUifSwidGhyZXNob2xkc1N0eWxlIjp7Im1vZGUiOiJvZmYifX0sImRlY2ltYWxzIjoxLCJtYXBwaW5ncyI6W10sInRocmVzaG9sZHMiOnsibW9kZSI6ImFic29sdXRlIiwic3RlcHMiOlt7ImNvbG9yIjoiZ3JlZW4iLCJ2YWx1ZSI6bnVsbH0seyJjb2xvciI6InJlZCIsInZhbHVlIjo4MH1dfSwidW5pdCI6ImJ5dGVzIn0sIm92ZXJyaWRlcyI6W119LCJncmlkUG9zIjp7ImgiOjgsInciOjEyLCJ4IjowLCJ5Ijo2NH0sImlkIjo0Nywib3B0aW9ucyI6eyJsZWdlbmQiOnsiY2FsY3MiOlsibWVhbiIsImxhc3ROb3ROdWxsIiwibWF4Iiwic3VtIl0sImRpc3BsYXlNb2RlIjoidGFibGUiLCJwbGFjZW1lbnQiOiJyaWdodCIsInNob3dMZWdlbmQiOnRydWV9LCJ0b29sdGlwIjp7Im1vZGUiOiJtdWx0aSIsInNvcnQiOiJkZXNjIn19LCJwbHVnaW5WZXJzaW9uIjoiMTAuMS41IiwidGFyZ2V0cyI6W3siZm9ybWF0IjoidGltZV9zZXJpZXMiLCJncm91cCI6W10sIm1ldHJpY0NvbHVtbiI6Im5vbmUiLCJxdWVyeVR5cGUiOiJyYW5kb21XYWxrIiwicmF3UXVlcnkiOnRydWUsInJhd1NxbCI6IlNFTEVDVCBcbiAgdGltZSArIGludGVydmFsICcke2FnZ3JlZ2F0aW9uX2ludGVydmFsfXMnIGFzIHRpbWUsXG4gIFwicmVjZWl2ZWRcIixcbiAgXCJjb250YWluZXJcIlxuRlJPTSAoXG4gIFNFTEVDVCBcbiAgICB0aW1lX2J1Y2tldCgnJHthZ2dyZWdhdGlvbl9pbnRlcnZhbH1zJywgXCJ0aW1lXCIpIGFzIHRpbWUsXG4gICAgbWF4KGJ5dGVzX3JlY3YpIC0gbGFnKG1heChieXRlc19yZWN2KSkgT1ZFUiB3IGFzIFwicmVjZWl2ZWRcIixcbiAgICBjb250YWluZXJfaWQgYXMgXCJjb250YWluZXJcIlxuICBGUk9NIHRlc3RfcnVubmVyX21vbml0b3JpbmcubmV0XG4gIFdIRVJFXG4gICAgJF9fdGltZUZpbHRlcih0aW1lKSBBTkRcbiAgICAoLTk5OTkgaW4gKCR7dGVzdElkOnNxbHN0cmluZ30pIE9SIHRlc3RfaWQ6OmludGVnZXIgaW4gKCR7dGVzdElkOnNxbHN0cmluZ30pKSBBTkRcbiAgICAoJyUlYWxsJSUnIGluICgke2xvY2F0aW9uOnNxbHN0cmluZ30pIE9SIHRlc3RfcnVubmVyX2xvY2F0aW9uIElOICgke2xvY2F0aW9uOnNxbHN0cmluZ30pKSBBTkRcbiAgICBpbnRlcmZhY2UgPSAnZXRoMCdcbiAgR1JPVVAgQlkgMSwgY29udGFpbmVyX2lkXG4gIFdJTkRPVyB3IGFzIChQQVJUSVRJT04gQlkgY29udGFpbmVyX2lkIE9SREVSIEJZIHRpbWVfYnVja2V0KCcke2FnZ3JlZ2F0aW9uX2ludGVydmFsfXMnLCBcInRpbWVcIikpXG4pIHN1YlxuICAiLCJyZWZJZCI6IkEiLCJzZWxlY3QiOltbeyJwYXJhbXMiOlsidmFsdWUiXSwidHlwZSI6ImNvbHVtbiJ9XV0sInRpbWVDb2x1bW4iOiJ0aW1lIiwid2hlcmUiOlt7Im5hbWUiOiIkX190aW1lRmlsdGVyIiwicGFyYW1zIjpbXSwidHlwZSI6Im1hY3JvIn1dfV0sInRpbWVGcm9tIjpudWxsLCJ0aW1lU2hpZnQiOm51bGwsInRpdGxlIjoiUmVjZWl2ZWQgYnl0ZXMiLCJ0eXBlIjoidGltZXNlcmllcyJ9LHsiZGF0YXNvdXJjZSI6InRlYW1fMTNfcHVibGljX3RpbWVzY2FsZSIsImZpZWxkQ29uZmlnIjp7ImRlZmF1bHRzIjp7ImNvbG9yIjp7Im1vZGUiOiJwYWxldHRlLWNsYXNzaWMifSwiY3VzdG9tIjp7ImF4aXNDZW50ZXJlZFplcm8iOmZhbHNlLCJheGlzQ29sb3JNb2RlIjoidGV4dCIsImF4aXNMYWJlbCI6IiIsImF4aXNQbGFjZW1lbnQiOiJhdXRvIiwiYmFyQWxpZ25tZW50IjowLCJkcmF3U3R5bGUiOiJsaW5lIiwiZmlsbE9wYWNpdHkiOjIwLCJncmFkaWVudE1vZGUiOiJvcGFjaXR5IiwiaGlkZUZyb20iOnsibGVnZW5kIjpmYWxzZSwidG9vbHRpcCI6ZmFsc2UsInZpeiI6ZmFsc2V9LCJpbnNlcnROdWxscyI6ZmFsc2UsImxpbmVJbnRlcnBvbGF0aW9uIjoibGluZWFyIiwibGluZVdpZHRoIjoyLCJwb2ludFNpemUiOjUsInNjYWxlRGlzdHJpYnV0aW9uIjp7InR5cGUiOiJsaW5lYXIifSwic2hvd1BvaW50cyI6Im5ldmVyIiwic3Bhbk51bGxzIjpmYWxzZSwic3RhY2tpbmciOnsiZ3JvdXAiOiJBIiwibW9kZSI6Im5vbmUifSwidGhyZXNob2xkc1N0eWxlIjp7Im1vZGUiOiJvZmYifX0sImRlY2ltYWxzIjoxLCJtYXBwaW5ncyI6W10sInRocmVzaG9sZHMiOnsibW9kZSI6ImFic29sdXRlIiwic3RlcHMiOlt7ImNvbG9yIjoiZ3JlZW4iLCJ2YWx1ZSI6bnVsbH0seyJjb2xvciI6InJlZCIsInZhbHVlIjo4MH1dfSwidW5pdCI6ImJ5dGVzIn0sIm92ZXJyaWRlcyI6W119LCJncmlkUG9zIjp7ImgiOjgsInciOjEyLCJ4IjoxMiwieSI6NjR9LCJpZCI6NDksIm9wdGlvbnMiOnsibGVnZW5kIjp7ImNhbGNzIjpbIm1lYW4iLCJsYXN0Tm90TnVsbCIsInN1bSJdLCJkaXNwbGF5TW9kZSI6InRhYmxlIiwicGxhY2VtZW50IjoicmlnaHQiLCJzaG93TGVnZW5kIjp0cnVlfSwidG9vbHRpcCI6eyJtb2RlIjoibXVsdGkiLCJzb3J0IjoiZGVzYyJ9fSwicGx1Z2luVmVyc2lvbiI6IjEwLjEuNSIsInRhcmdldHMiOlt7ImZvcm1hdCI6InRpbWVfc2VyaWVzIiwiZ3JvdXAiOltdLCJtZXRyaWNDb2x1bW4iOiJub25lIiwicXVlcnlUeXBlIjoicmFuZG9tV2FsayIsInJhd1F1ZXJ5Ijp0cnVlLCJyYXdTcWwiOiJTRUxFQ1QgXG4gIHRpbWUgKyBpbnRlcnZhbCAnJHthZ2dyZWdhdGlvbl9pbnRlcnZhbH1zJyBhcyB0aW1lLFxuICBcInNlbnRcIixcbiAgXCJjb250YWluZXJcIlxuRlJPTSAoXG4gIFNFTEVDVCBcbiAgICB0aW1lX2J1Y2tldCgnJHthZ2dyZWdhdGlvbl9pbnRlcnZhbH1zJywgXCJ0aW1lXCIpIGFzIHRpbWUsXG4gICAgbWF4KGJ5dGVzX3NlbnQpIC0gbGFnKG1heChieXRlc19zZW50KSkgT1ZFUiB3IGFzIFwic2VudFwiLFxuICAgIGNvbnRhaW5lcl9pZCBhcyBcImNvbnRhaW5lclwiXG4gIEZST00gdGVzdF9ydW5uZXJfbW9uaXRvcmluZy5uZXRcbiAgV0hFUkVcbiAgJF9fdGltZUZpbHRlcih0aW1lKSBBTkRcbiAgKC05OTk5IGluICgke3Rlc3RJZDpzcWxzdHJpbmd9KSBPUiB0ZXN0X2lkOjppbnRlZ2VyIGluICgke3Rlc3RJZDpzcWxzdHJpbmd9KSkgQU5EXG4gICgnJSVhbGwlJScgaW4gKCR7bG9jYXRpb246c3Fsc3RyaW5nfSkgT1IgdGVzdF9ydW5uZXJfbG9jYXRpb24gSU4gKCR7bG9jYXRpb246c3Fsc3RyaW5nfSkpIEFORFxuICBpbnRlcmZhY2UgPSAnZXRoMCdcbiAgR1JPVVAgQlkgMSwgY29udGFpbmVyX2lkXG4gIFdJTkRPVyB3IGFzIChQQVJUSVRJT04gQlkgY29udGFpbmVyX2lkIE9SREVSIEJZIHRpbWVfYnVja2V0KCcke2FnZ3JlZ2F0aW9uX2ludGVydmFsfXMnLCBcInRpbWVcIikpXG4pIHN1YiIsInJlZklkIjoiQSIsInNlbGVjdCI6W1t7InBhcmFtcyI6WyJ2YWx1ZSJdLCJ0eXBlIjoiY29sdW1uIn1dXSwidGltZUNvbHVtbiI6InRpbWUiLCJ3aGVyZSI6W3sibmFtZSI6IiRfX3RpbWVGaWx0ZXIiLCJwYXJhbXMiOltdLCJ0eXBlIjoibWFjcm8ifV19XSwidGltZUZyb20iOm51bGwsInRpbWVTaGlmdCI6bnVsbCwidGl0bGUiOiJTZW50IGJ5dGVzIiwidHlwZSI6InRpbWVzZXJpZXMifSx7ImRhdGFzb3VyY2UiOiJ0ZWFtXzEzX3B1YmxpY190aW1lc2NhbGUiLCJmaWVsZENvbmZpZyI6eyJkZWZhdWx0cyI6eyJjb2xvciI6eyJtb2RlIjoicGFsZXR0ZS1jbGFzc2ljIn0sImN1c3RvbSI6eyJheGlzQ2VudGVyZWRaZXJvIjpmYWxzZSwiYXhpc0NvbG9yTW9kZSI6InRleHQiLCJheGlzTGFiZWwiOiIiLCJheGlzUGxhY2VtZW50IjoiYXV0byIsImJhckFsaWdubWVudCI6MCwiZHJhd1N0eWxlIjoibGluZSIsImZpbGxPcGFjaXR5IjoyMCwiZ3JhZGllbnRNb2RlIjoib3BhY2l0eSIsImhpZGVGcm9tIjp7ImxlZ2VuZCI6ZmFsc2UsInRvb2x0aXAiOmZhbHNlLCJ2aXoiOmZhbHNlfSwiaW5zZXJ0TnVsbHMiOmZhbHNlLCJsaW5lSW50ZXJwb2xhdGlvbiI6ImxpbmVhciIsImxpbmVXaWR0aCI6MiwicG9pbnRTaXplIjo1LCJzY2FsZURpc3RyaWJ1dGlvbiI6eyJ0eXBlIjoibGluZWFyIn0sInNob3dQb2ludHMiOiJuZXZlciIsInNwYW5OdWxscyI6ZmFsc2UsInN0YWNraW5nIjp7Imdyb3VwIjoiQSIsIm1vZGUiOiJub25lIn0sInRocmVzaG9sZHNTdHlsZSI6eyJtb2RlIjoib2ZmIn19LCJkZWNpbWFscyI6MSwibWFwcGluZ3MiOltdLCJ0aHJlc2hvbGRzIjp7Im1vZGUiOiJhYnNvbHV0ZSIsInN0ZXBzIjpbeyJjb2xvciI6ImdyZWVuIiwidmFsdWUiOm51bGx9LHsiY29sb3IiOiJyZWQiLCJ2YWx1ZSI6ODB9XX0sInVuaXQiOiJieXRlcyJ9LCJvdmVycmlkZXMiOltdfSwiZ3JpZFBvcyI6eyJoIjo4LCJ3IjoxMiwieCI6MCwieSI6NzJ9LCJpZCI6NTAsIm9wdGlvbnMiOnsibGVnZW5kIjp7ImNhbGNzIjpbIm1lYW4iLCJsYXN0Tm90TnVsbCIsIm1heCIsInN1bSJdLCJkaXNwbGF5TW9kZSI6InRhYmxlIiwicGxhY2VtZW50IjoicmlnaHQiLCJzaG93TGVnZW5kIjp0cnVlfSwidG9vbHRpcCI6eyJtb2RlIjoibXVsdGkiLCJzb3J0IjoiZGVzYyJ9fSwicGx1Z2luVmVyc2lvbiI6IjEwLjEuNSIsInRhcmdldHMiOlt7ImZvcm1hdCI6InRpbWVfc2VyaWVzIiwiZ3JvdXAiOltdLCJtZXRyaWNDb2x1bW4iOiJub25lIiwicXVlcnlUeXBlIjoicmFuZG9tV2FsayIsInJhd1F1ZXJ5Ijp0cnVlLCJyYXdTcWwiOiJTRUxFQ1QgXG4gIHRpbWUgKyBpbnRlcnZhbCAnJHthZ2dyZWdhdGlvbl9pbnRlcnZhbH1zJyBhcyB0aW1lLFxuICBcInJlYWRcIixcbiAgXCJjb250YWluZXJcIlxuRlJPTSAoXG4gIFNFTEVDVCBcbiAgICB0aW1lX2J1Y2tldCgnJHthZ2dyZWdhdGlvbl9pbnRlcnZhbH1zJywgXCJ0aW1lXCIpIGFzIHRpbWUsXG4gICAgbWF4KHJlYWRfYnl0ZXMpIC0gbGFnKG1heChyZWFkX2J5dGVzKSkgT1ZFUiB3IGFzIFwicmVhZFwiLFxuICAgIGNvbmNhdChjb250YWluZXJfaWQsICcgJywgbmFtZSkgYXMgXCJjb250YWluZXJcIlxuICBGUk9NIHRlc3RfcnVubmVyX21vbml0b3JpbmcuZGlza2lvXG4gIFdIRVJFXG4gICRfX3RpbWVGaWx0ZXIodGltZSkgQU5EXG4gICgtOTk5OSBpbiAoJHt0ZXN0SWQ6c3Fsc3RyaW5nfSkgT1IgdGVzdF9pZDo6aW50ZWdlciBpbiAoJHt0ZXN0SWQ6c3Fsc3RyaW5nfSkpIEFORFxuICAoJyUlYWxsJSUnIGluICgke2xvY2F0aW9uOnNxbHN0cmluZ30pIE9SIHRlc3RfcnVubmVyX2xvY2F0aW9uIElOICgke2xvY2F0aW9uOnNxbHN0cmluZ30pKVxuICBHUk9VUCBCWSAxLCBjb250YWluZXJfaWQsIG5hbWVcbiAgV0lORE9XIHcgYXMgKFBBUlRJVElPTiBCWSBjb250YWluZXJfaWQsIG5hbWUgT1JERVIgQlkgdGltZV9idWNrZXQoJyR7YWdncmVnYXRpb25faW50ZXJ2YWx9cycsIFwidGltZVwiKSkgXG4gIE9SREVSIEJZIDFcbikgc3ViIiwicmVmSWQiOiJBIiwic2VsZWN0IjpbW3sicGFyYW1zIjpbInZhbHVlIl0sInR5cGUiOiJjb2x1bW4ifV1dLCJ0aW1lQ29sdW1uIjoidGltZSIsIndoZXJlIjpbeyJuYW1lIjoiJF9fdGltZUZpbHRlciIsInBhcmFtcyI6W10sInR5cGUiOiJtYWNybyJ9XX1dLCJ0aW1lRnJvbSI6bnVsbCwidGltZVNoaWZ0IjpudWxsLCJ0aXRsZSI6IkRpc2sgSU8gUmVhZCIsInR5cGUiOiJ0aW1lc2VyaWVzIn0seyJkYXRhc291cmNlIjoidGVhbV8xM19wdWJsaWNfdGltZXNjYWxlIiwiZmllbGRDb25maWciOnsiZGVmYXVsdHMiOnsiY29sb3IiOnsibW9kZSI6InBhbGV0dGUtY2xhc3NpYyJ9LCJjdXN0b20iOnsiYXhpc0NlbnRlcmVkWmVybyI6ZmFsc2UsImF4aXNDb2xvck1vZGUiOiJ0ZXh0IiwiYXhpc0xhYmVsIjoiIiwiYXhpc1BsYWNlbWVudCI6ImF1dG8iLCJiYXJBbGlnbm1lbnQiOjAsImRyYXdTdHlsZSI6ImxpbmUiLCJmaWxsT3BhY2l0eSI6MjAsImdyYWRpZW50TW9kZSI6Im9wYWNpdHkiLCJoaWRlRnJvbSI6eyJsZWdlbmQiOmZhbHNlLCJ0b29sdGlwIjpmYWxzZSwidml6IjpmYWxzZX0sImluc2VydE51bGxzIjpmYWxzZSwibGluZUludGVycG9sYXRpb24iOiJsaW5lYXIiLCJsaW5lV2lkdGgiOjIsInBvaW50U2l6ZSI6NSwic2NhbGVEaXN0cmlidXRpb24iOnsidHlwZSI6ImxpbmVhciJ9LCJzaG93UG9pbnRzIjoibmV2ZXIiLCJzcGFuTnVsbHMiOmZhbHNlLCJzdGFja2luZyI6eyJncm91cCI6IkEiLCJtb2RlIjoibm9uZSJ9LCJ0aHJlc2hvbGRzU3R5bGUiOnsibW9kZSI6Im9mZiJ9fSwiZGVjaW1hbHMiOjEsIm1hcHBpbmdzIjpbXSwidGhyZXNob2xkcyI6eyJtb2RlIjoiYWJzb2x1dGUiLCJzdGVwcyI6W3siY29sb3IiOiJncmVlbiIsInZhbHVlIjpudWxsfSx7ImNvbG9yIjoicmVkIiwidmFsdWUiOjgwfV19LCJ1bml0IjoiYnl0ZXMifSwib3ZlcnJpZGVzIjpbXX0sImdyaWRQb3MiOnsiaCI6OCwidyI6MTIsIngiOjEyLCJ5Ijo3Mn0sImlkIjo1MSwib3B0aW9ucyI6eyJsZWdlbmQiOnsiY2FsY3MiOlsibWVhbiIsImxhc3ROb3ROdWxsIiwibWF4Il0sImRpc3BsYXlNb2RlIjoidGFibGUiLCJwbGFjZW1lbnQiOiJyaWdodCIsInNob3dMZWdlbmQiOnRydWV9LCJ0b29sdGlwIjp7Im1vZGUiOiJtdWx0aSIsInNvcnQiOiJkZXNjIn19LCJwbHVnaW5WZXJzaW9uIjoiMTAuMS41IiwidGFyZ2V0cyI6W3siZm9ybWF0IjoidGltZV9zZXJpZXMiLCJncm91cCI6W10sIm1ldHJpY0NvbHVtbiI6Im5vbmUiLCJxdWVyeVR5cGUiOiJyYW5kb21XYWxrIiwicmF3UXVlcnkiOnRydWUsInJhd1NxbCI6IlNFTEVDVCBcbiAgdGltZSArIGludGVydmFsICcke2FnZ3JlZ2F0aW9uX2ludGVydmFsfXMnIGFzIHRpbWUsXG4gIFwid3JpdHRlblwiLFxuICBcImNvbnRhaW5lclwiXG5GUk9NIChcbiAgU0VMRUNUIFxuICAgIHRpbWVfYnVja2V0KCcke2FnZ3JlZ2F0aW9uX2ludGVydmFsfXMnLCBcInRpbWVcIikgYXMgXCJ0aW1lXCIsXG4gICAgbWF4KHdyaXRlX2J5dGVzKSAtIGxhZyhtYXgod3JpdGVfYnl0ZXMpKSBPVkVSIHcgYXMgXCJ3cml0dGVuXCIsXG4gICAgY29uY2F0KGNvbnRhaW5lcl9pZCwgJyAnLCBuYW1lKSBhcyBcImNvbnRhaW5lclwiXG4gIEZST00gdGVzdF9ydW5uZXJfbW9uaXRvcmluZy5kaXNraW9cbiAgV0hFUkVcbiAgICAkX190aW1lRmlsdGVyKHRpbWUpIEFORFxuICAgICgtOTk5OSBpbiAoJHt0ZXN0SWQ6c3Fsc3RyaW5nfSkgT1IgdGVzdF9pZDo6aW50ZWdlciBpbiAoJHt0ZXN0SWQ6c3Fsc3RyaW5nfSkpIEFORFxuICAgICgnJSVhbGwlJScgaW4gKCR7bG9jYXRpb246c3Fsc3RyaW5nfSkgT1IgdGVzdF9ydW5uZXJfbG9jYXRpb24gSU4gKCR7bG9jYXRpb246c3Fsc3RyaW5nfSkpXG4gIEdST1VQIEJZIDEsIGNvbnRhaW5lcl9pZCwgbmFtZVxuICBXSU5ET1cgdyBhcyAoUEFSVElUSU9OIEJZIGNvbnRhaW5lcl9pZCwgbmFtZSBPUkRFUiBCWSB0aW1lX2J1Y2tldCgnJHthZ2dyZWdhdGlvbl9pbnRlcnZhbH1zJywgXCJ0aW1lXCIpKVxuICBPUkRFUiBCWSAxXG4pIHN1YiIsInJlZklkIjoiQSIsInNlbGVjdCI6W1t7InBhcmFtcyI6WyJ2YWx1ZSJdLCJ0eXBlIjoiY29sdW1uIn1dXSwidGltZUNvbHVtbiI6InRpbWUiLCJ3aGVyZSI6W3sibmFtZSI6IiRfX3RpbWVGaWx0ZXIiLCJwYXJhbXMiOltdLCJ0eXBlIjoibWFjcm8ifV19XSwidGltZUZyb20iOm51bGwsInRpbWVTaGlmdCI6bnVsbCwidGl0bGUiOiJEaXNrIElPIFdyaXRlIiwidHlwZSI6InRpbWVzZXJpZXMifV0sInRpdGxlIjoiSGVhbHRoIGNoZWNrIiwidHlwZSI6InJvdyJ9XSwicmVmcmVzaCI6ZmFsc2UsInNjaGVtYVZlcnNpb24iOjI3LCJzdHlsZSI6ImRhcmsiLCJ0YWdzIjpbXSwidGVtcGxhdGluZyI6eyJsaXN0IjpbeyJhbGxWYWx1ZSI6Ii05OTk5IiwiY3VycmVudCI6eyJzZWxlY3RlZCI6ZmFsc2UsInRleHQiOiJBbGwiLCJ2YWx1ZSI6IiRfX2FsbCJ9LCJkYXRhc291cmNlIjoidGVhbV8xM19wdWJsaWNfdGltZXNjYWxlIiwiZGVmaW5pdGlvbiI6InNlbGVjdCBkaXN0aW5jdCh0ZXN0X2lkKSBmcm9tIGptZXRlcl9tZXRyaWNzLnNhbXBsZV9tZXRyaWMgd2hlcmUgJF9fdGltZUZpbHRlcihcInRpbWVzdGFtcFwiKSIsImRlc2NyaXB0aW9uIjpudWxsLCJlcnJvciI6bnVsbCwiaGlkZSI6MCwiaW5jbHVkZUFsbCI6dHJ1ZSwibGFiZWwiOiJUZXN0IGlkIiwibXVsdGkiOnRydWUsIm5hbWUiOiJ0ZXN0SWQiLCJvcHRpb25zIjpbXSwicXVlcnkiOiJzZWxlY3QgZGlzdGluY3QodGVzdF9pZCkgZnJvbSBqbWV0ZXJfbWV0cmljcy5zYW1wbGVfbWV0cmljIHdoZXJlICRfX3RpbWVGaWx0ZXIoXCJ0aW1lc3RhbXBcIikiLCJyZWZyZXNoIjoyLCJyZWdleCI6IiIsInNraXBVcmxTeW5jIjpmYWxzZSwic29ydCI6MywidGFnVmFsdWVzUXVlcnkiOiIiLCJ0YWdzIjpbXSwidGFnc1F1ZXJ5IjoiIiwidHlwZSI6InF1ZXJ5IiwidXNlVGFncyI6ZmFsc2V9LHsiYWxsVmFsdWUiOiInJSVhbGwlJSciLCJjdXJyZW50Ijp7InNlbGVjdGVkIjpmYWxzZSwidGV4dCI6IkFsbCIsInZhbHVlIjoiJF9fYWxsIn0sImRhdGFzb3VyY2UiOiJ0ZWFtXzEzX3B1YmxpY190aW1lc2NhbGUiLCJkZWZpbml0aW9uIjoic2VsZWN0IGRpc3RpbmN0IChsb2NhdGlvbikgZnJvbSBqbWV0ZXJfbWV0cmljcy5zYW1wbGVfbWV0cmljIHdoZXJlICgtOTk5OSBpbiAoJHt0ZXN0SWQ6c3Fsc3RyaW5nfSkgT1IgdGVzdF9pZCBpbiAoJHt0ZXN0SWQ6c3Fsc3RyaW5nfSkpIGFuZCBub3QgaXNfdHJhbnNhY3Rpb24gYW5kICRfX3RpbWVGaWx0ZXIoXCJ0aW1lc3RhbXBcIikiLCJkZXNjcmlwdGlvbiI6bnVsbCwiZXJyb3IiOm51bGwsImhpZGUiOjAsImluY2x1ZGVBbGwiOnRydWUsImxhYmVsIjoiTG9jYXRpb24iLCJtdWx0aSI6dHJ1ZSwibmFtZSI6ImxvY2F0aW9uIiwib3B0aW9ucyI6W10sInF1ZXJ5Ijoic2VsZWN0IGRpc3RpbmN0IChsb2NhdGlvbikgZnJvbSBqbWV0ZXJfbWV0cmljcy5zYW1wbGVfbWV0cmljIHdoZXJlICgtOTk5OSBpbiAoJHt0ZXN0SWQ6c3Fsc3RyaW5nfSkgT1IgdGVzdF9pZCBpbiAoJHt0ZXN0SWQ6c3Fsc3RyaW5nfSkpIGFuZCBub3QgaXNfdHJhbnNhY3Rpb24gYW5kICRfX3RpbWVGaWx0ZXIoXCJ0aW1lc3RhbXBcIikiLCJyZWZyZXNoIjoyLCJyZWdleCI6IiIsInNraXBVcmxTeW5jIjpmYWxzZSwic29ydCI6MSwidGFnVmFsdWVzUXVlcnkiOiIiLCJ0YWdzIjpbXSwidGFnc1F1ZXJ5IjoiIiwidHlwZSI6InF1ZXJ5IiwidXNlVGFncyI6ZmFsc2V9LHsiYWxsVmFsdWUiOiInJSVhbGwlJSciLCJjdXJyZW50Ijp7InNlbGVjdGVkIjp0cnVlLCJ0ZXh0IjpbIkFsbCJdLCJ2YWx1ZSI6WyIkX19hbGwiXX0sImRhdGFzb3VyY2UiOiJ0ZWFtXzEzX3B1YmxpY190aW1lc2NhbGUiLCJkZWZpbml0aW9uIjoic2VsZWN0IGRpc3RpbmN0KG5hbWUpIGZyb20gam1ldGVyX21ldHJpY3Muc2FtcGxlX21ldHJpYyBXSEVSRSAoLTk5OTkgaW4gKCR7dGVzdElkOnNxbHN0cmluZ30pIE9SIHRlc3RfaWQgaW4gKCR7dGVzdElkOnNxbHN0cmluZ30pKSBhbmQgbm90IGlzX3RyYW5zYWN0aW9uIGFuZCAkX190aW1lRmlsdGVyKFwidGltZXN0YW1wXCIpIiwiZGVzY3JpcHRpb24iOm51bGwsImVycm9yIjpudWxsLCJoaWRlIjowLCJpbmNsdWRlQWxsIjp0cnVlLCJsYWJlbCI6IlJlcXVlc3QiLCJtdWx0aSI6dHJ1ZSwibmFtZSI6InJlcXVlc3QiLCJvcHRpb25zIjpbXSwicXVlcnkiOiJzZWxlY3QgZGlzdGluY3QobmFtZSkgZnJvbSBqbWV0ZXJfbWV0cmljcy5zYW1wbGVfbWV0cmljIFdIRVJFICgtOTk5OSBpbiAoJHt0ZXN0SWQ6c3Fsc3RyaW5nfSkgT1IgdGVzdF9pZCBpbiAoJHt0ZXN0SWQ6c3Fsc3RyaW5nfSkpIGFuZCBub3QgaXNfdHJhbnNhY3Rpb24gYW5kICRfX3RpbWVGaWx0ZXIoXCJ0aW1lc3RhbXBcIikiLCJyZWZyZXNoIjoyLCJyZWdleCI6IiIsInNraXBVcmxTeW5jIjpmYWxzZSwic29ydCI6MSwidGFnVmFsdWVzUXVlcnkiOiIiLCJ0YWdzIjpbXSwidGFnc1F1ZXJ5IjoiIiwidHlwZSI6InF1ZXJ5IiwidXNlVGFncyI6ZmFsc2V9LHsiYWxsVmFsdWUiOiIuKiIsImN1cnJlbnQiOnsic2VsZWN0ZWQiOnRydWUsInRleHQiOlsiQWxsIl0sInZhbHVlIjpbIiRfX2FsbCJdfSwiZGF0YXNvdXJjZSI6InRlYW1fMTNfcHVibGljX3RpbWVzY2FsZSIsImRlZmluaXRpb24iOiJzZWxlY3QgZGlzdGluY3QobmFtZSkgZnJvbSBqbWV0ZXJfbWV0cmljcy5zYW1wbGVfbWV0cmljIHdoZXJlICgtOTk5OSBpbiAoJHt0ZXN0SWQ6c3Fsc3RyaW5nfSkgT1IgdGVzdF9pZCBpbiAoJHt0ZXN0SWQ6c3Fsc3RyaW5nfSkpIGFuZCBpc190cmFuc2FjdGlvbiBhbmQgJF9fdGltZUZpbHRlcihcInRpbWVzdGFtcFwiKSIsImRlc2NyaXB0aW9uIjpudWxsLCJlcnJvciI6bnVsbCwiaGlkZSI6MCwiaW5jbHVkZUFsbCI6dHJ1ZSwibGFiZWwiOiJUcmFuc2FjdGlvbiIsIm11bHRpIjp0cnVlLCJuYW1lIjoidHJhbnNhY3Rpb24iLCJvcHRpb25zIjpbXSwicXVlcnkiOiJzZWxlY3QgZGlzdGluY3QobmFtZSkgZnJvbSBqbWV0ZXJfbWV0cmljcy5zYW1wbGVfbWV0cmljIHdoZXJlICgtOTk5OSBpbiAoJHt0ZXN0SWQ6c3Fsc3RyaW5nfSkgT1IgdGVzdF9pZCBpbiAoJHt0ZXN0SWQ6c3Fsc3RyaW5nfSkpIGFuZCBpc190cmFuc2FjdGlvbiBhbmQgJF9fdGltZUZpbHRlcihcInRpbWVzdGFtcFwiKSIsInJlZnJlc2giOjIsInJlZ2V4IjoiIiwic2tpcFVybFN5bmMiOmZhbHNlLCJzb3J0IjoxLCJ0YWdWYWx1ZXNRdWVyeSI6IiIsInRhZ3MiOltdLCJ0YWdzUXVlcnkiOiIiLCJ0eXBlIjoicXVlcnkiLCJ1c2VUYWdzIjpmYWxzZX0seyJhbGxWYWx1ZSI6IiclJWFsbCUlJyIsImN1cnJlbnQiOnsic2VsZWN0ZWQiOnRydWUsInRleHQiOlsiQWxsIl0sInZhbHVlIjpbIiRfX2FsbCJdfSwiZGF0YXNvdXJjZSI6InRlYW1fMTNfcHVibGljX3RpbWVzY2FsZSIsImRlZmluaXRpb24iOiJzZWxlY3QgZGlzdGluY3QodGhyZWFkX2dyb3VwX25hbWUpIGZyb20gam1ldGVyX21ldHJpY3Muc2FtcGxlX21ldHJpYyB3aGVyZSAoLTk5OTkgaW4gKCR7dGVzdElkOnNxbHN0cmluZ30pIE9SIHRlc3RfaWQgaW4gKCR7dGVzdElkOnNxbHN0cmluZ30pKSBhbmQgdGhyZWFkX2dyb3VwX25hbWUgaXMgbm90IG51bGwgYW5kICRfX3RpbWVGaWx0ZXIoXCJ0aW1lc3RhbXBcIikiLCJkZXNjcmlwdGlvbiI6IlRocmVhZCBncm91cCBuYW1lIiwiZXJyb3IiOm51bGwsImhpZGUiOjAsImluY2x1ZGVBbGwiOnRydWUsImxhYmVsIjoiVGhyZWFkIGdyb3VwIiwibXVsdGkiOnRydWUsIm5hbWUiOiJ0aHJlYWRncm91cCIsIm9wdGlvbnMiOltdLCJxdWVyeSI6InNlbGVjdCBkaXN0aW5jdCh0aHJlYWRfZ3JvdXBfbmFtZSkgZnJvbSBqbWV0ZXJfbWV0cmljcy5zYW1wbGVfbWV0cmljIHdoZXJlICgtOTk5OSBpbiAoJHt0ZXN0SWQ6c3Fsc3RyaW5nfSkgT1IgdGVzdF9pZCBpbiAoJHt0ZXN0SWQ6c3Fsc3RyaW5nfSkpIGFuZCB0aHJlYWRfZ3JvdXBfbmFtZSBpcyBub3QgbnVsbCBhbmQgJF9fdGltZUZpbHRlcihcInRpbWVzdGFtcFwiKSIsInJlZnJlc2giOjIsInJlZ2V4IjoiIiwic2tpcFVybFN5bmMiOmZhbHNlLCJzb3J0IjoxLCJ0YWdWYWx1ZXNRdWVyeSI6IiIsInRhZ3MiOltdLCJ0YWdzUXVlcnkiOiIiLCJ0eXBlIjoicXVlcnkiLCJ1c2VUYWdzIjpmYWxzZX0seyJhbGxWYWx1ZSI6bnVsbCwiY3VycmVudCI6eyJzZWxlY3RlZCI6ZmFsc2UsInRleHQiOiIxMCIsInZhbHVlIjoiMTAifSwiZGVzY3JpcHRpb24iOm51bGwsImVycm9yIjpudWxsLCJoaWRlIjowLCJpbmNsdWRlQWxsIjpmYWxzZSwibGFiZWwiOiJBZ2dyZWdhdGlvbiBpbnRlcnZhbCAoc2VjKSIsIm11bHRpIjpmYWxzZSwibmFtZSI6ImFnZ3JlZ2F0aW9uX2ludGVydmFsIiwib3B0aW9ucyI6W3sic2VsZWN0ZWQiOmZhbHNlLCJ0ZXh0IjoiNSIsInZhbHVlIjoiNSJ9LHsic2VsZWN0ZWQiOnRydWUsInRleHQiOiIxMCIsInZhbHVlIjoiMTAifSx7InNlbGVjdGVkIjpmYWxzZSwidGV4dCI6IjMwIiwidmFsdWUiOiIzMCJ9LHsic2VsZWN0ZWQiOmZhbHNlLCJ0ZXh0IjoiNjAiLCJ2YWx1ZSI6IjYwIn1dLCJxdWVyeSI6IjUsMTAsMzAsNjAiLCJxdWVyeVZhbHVlIjoiIiwic2tpcFVybFN5bmMiOmZhbHNlLCJ0eXBlIjoiY3VzdG9tIn0seyJkZXNjcmlwdGlvbiI6bnVsbCwiZXJyb3IiOm51bGwsImhpZGUiOjIsImxhYmVsIjoiQmFja2VuZCBzZW5kIGludGVydmFsIGluIHNlY29uZCIsIm5hbWUiOiJzZW5kX2ludGVydmFsIiwicXVlcnkiOiIxIiwic2tpcFVybFN5bmMiOmZhbHNlLCJ0eXBlIjoiY29uc3RhbnQifSx7ImFsbFZhbHVlIjoidHJ1ZSwgZmFsc2UiLCJjdXJyZW50Ijp7InNlbGVjdGVkIjpmYWxzZSwidGV4dCI6IkFsbCIsInZhbHVlIjoiJF9fYWxsIn0sImRlc2NyaXB0aW9uIjpudWxsLCJlcnJvciI6bnVsbCwiaGlkZSI6MCwiaW5jbHVkZUFsbCI6dHJ1ZSwibGFiZWwiOiJJbmNsdWRlIGluIHJlc3VsdCIsIm11bHRpIjpmYWxzZSwibmFtZSI6ImluY2x1ZGVfaW5fcmVzdWx0Iiwib3B0aW9ucyI6W3sic2VsZWN0ZWQiOnRydWUsInRleHQiOiJBbGwiLCJ2YWx1ZSI6IiRfX2FsbCJ9LHsic2VsZWN0ZWQiOmZhbHNlLCJ0ZXh0IjoicmVxdWVzdHMiLCJ2YWx1ZSI6ImZhbHNlIn0seyJzZWxlY3RlZCI6ZmFsc2UsInRleHQiOiJ0cmFuc2FjdGlvbnMiLCJ2YWx1ZSI6InRydWUifV0sInF1ZXJ5IjoicmVxdWVzdHMgOiBmYWxzZSwgdHJhbnNhY3Rpb25zIDogdHJ1ZSIsInF1ZXJ5VmFsdWUiOiIiLCJza2lwVXJsU3luYyI6ZmFsc2UsInR5cGUiOiJjdXN0b20ifV19LCJ0aW1lIjp7ImZyb20iOiJub3ctMWgiLCJ0byI6Im5vdyJ9LCJ0aW1lcGlja2VyIjp7InJlZnJlc2hfaW50ZXJ2YWxzIjpbIjVzIiwiMTBzIiwiMzBzIiwiMW0iLCI1bSIsIjE1bSIsIjMwbSIsIjFoIiwiMmgiLCIxZCJdLCJ0aW1lX29wdGlvbnMiOlsiNW0iLCIxNW0iLCIxaCIsIjZoIiwiMTJoIiwiMjRoIiwiMmQiLCI3ZCIsIjMwZCJdfSwidGltZXpvbmUiOiJicm93c2VyIiwidGl0bGUiOiJjb21tb25fZGFzaGJvYXJkX3RkYl8xMyIsInVpZCI6ImNhNTFhY2FmLTk4MDMtNGFkOC1iNTA3LTkyM2IxNTJhMWNhOSIsInZlcnNpb24iOjF9fQ==</ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPBody>
      <TcpPackets>
        <PacketInfo time="63900843" offset="0" length="284" />
        <PacketInfo time="63900843" offset="284" length="79570" />
      </TcpPackets>
    </HTTPResponse>
  </HTTPTask>
  <HTTPTask id="1014" hostname="dev-boomq.pflb.ru" path="https://dev-boomq.pflb.ru/grafana/public/build/postgresPlugin.5dbf50fe15160919cf74.js" url="https://dev-boomq.pflb.ru/grafana/public/build/postgresPlugin.5dbf50fe15160919cf74.js" ip="77.50.236.214" port="443" connectionId="107" origin="ExtraRes" frame="1" startDateTime="2024-08-26T15:36:35.878+03:00" startTime="63900984" endTime="63901000">
    <HTTPRequest method="GET">
      <HTTPHeaders>
        <HTTPHeaderEntity name="sec-ch-ua" index="0">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>IkNocm9taXVtIjt2PSIxMjgiLCAiTm90O0E9QnJhbmQiO3Y9IjI0IiwgIk1pY3Jvc29mdCBFZGdlIjt2PSIxMjgi</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="sec-ch-ua-mobile" index="1">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>PzA=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="User-Agent" index="2">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>TW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV2luNjQ7IHg2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzEyOC4wLjAuMCBTYWZhcmkvNTM3LjM2IEVkZy8xMjguMC4wLjA=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="sec-ch-ua-platform" index="3">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>IldpbmRvd3Mi</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Accept" index="4">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>Ki8q</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Sec-Fetch-Site" index="5">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>c2FtZS1vcmlnaW4=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Sec-Fetch-Mode" index="6">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>bm8tY29ycw==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Sec-Fetch-Dest" index="7">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>c2NyaXB0</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Referer" index="8">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>aHR0cHM6Ly9kZXYtYm9vbXEucGZsYi5ydS9ncmFmYW5hL2QvY2E1MWFjYWYtOTgwMy00YWQ4LWI1MDctOTIzYjE1MmExY2E5L2NvbW1vbi1kYXNoYm9hcmQtdGRiLTEzP2Zyb209MTcyNDY3NTY3MDYxMSZ0bz0xNzI0Njc5MzkwNjExJnJlZnJlc2g9NXMmdmFyLXRlc3RJZD0xODI2OCZvcmdJZD0xNA==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Accept-Encoding" index="9">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>Z3ppcCwgZGVmbGF0ZSwgenN0ZA==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Accept-Language" index="10">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>cnU=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Cookie" index="11">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>Z3JhZmFuYV9zZXNzaW9uX2V4cGlyeT0xNzI0Njc2MjkyOyBncmFmYW5hX3Nlc3Npb249ZWIwMWJjNzMwNjgzNzdkMDEzZmIyMTUzYWExMDQ0ZDc7IGJvb21xX2F1dGg9ZXlKaGJHY2lPaUpTVXpJMU5pSXNJblI1Y0NJNklrcFhWQ0o5LmV5SnBjMTl1YjNScFptbGpZWFJsWkNJNmRISjFaU3dpZFhObGNsOXBaQ0k2TVRnM05Td2lkWE5sY2w5dVlXMWxJam9pYTI5ZmJHVnplV0ZBYldGcGJDNXlkU0lzSW5OamIzQmxJanBiSW5SeWRYTjBJaXdpY21WaFpDSXNJbmR5YVhSbElsMHNJblZ6WlhKZmJHRnVaM1ZoWjJVaU9pSlNWU0lzSW1WNGNDSTZNVGN5TkRjeE9EY3hOeXdpWVhWMGFHOXlhWFJwWlhNaU9sc2lVazlNUlY5VlUwVlNJbDBzSW1wMGFTSTZJamcxTVdGak1UUTJMVGcyT1RndE5HRmpNaTFoTWprd0xUWTBPV0V4Tm1FME5XRTNNU0lzSW1Oc2FXVnVkRjlwWkNJNkltTnNhV1Z1ZENKOS5zbk9JQU0xWjh3TXVVbFlRQXVoYXFvQWNhNS11T2VtQ0Rhd0hVbG1YcUpLa29Ob1ZvOGdSbmRfT1htSDJwcld3M0VKU2prSktjTFRWbGtoaFpxU1o2Z3Y2c2c2UXVWdUFISHJkWUVqUmVHZ1Uxa240S3cwZUFJZU91YjZvQVV1ZVU1ZXA2SjRWX3U0MWp5ODM5UkNKMWtQalhIdGlBVUtWbTZJR1ZIR1NGQWd2Wmt2amZyOE9rZWFHS215VGpWTG5MNXFBQUhtQ0dydFd1TkloRXR4bHlIMy16UTdNcERhM0NDcGlMWGtIdXBlM3BWMkdaaGFHY29reDlBTzNLUkE2UGppUGhiVWVzWkVPaUQ1OHBMYUZiZUQ1NEFneHdISGlJVXVHcTdXUUlrVm9CTFFuaGROMXFxMlAxOHlwT1EtM2Y1V3pqZ2pLZUdMV1FXTjZEYnBJaWc=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Host" index="12">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>ZGV2LWJvb21xLnBmbGIucnU=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPAllHeaders>
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>R0VUIGh0dHBzOi8vZGV2LWJvb21xLnBmbGIucnUvZ3JhZmFuYS9wdWJsaWMvYnVpbGQvcG9zdGdyZXNQbHVnaW4uNWRiZjUwZmUxNTE2MDkxOWNmNzQuanMgSFRUUC8xLjENCnNlYy1jaC11YTogIkNocm9taXVtIjt2PSIxMjgiLCAiTm90O0E9QnJhbmQiO3Y9IjI0IiwgIk1pY3Jvc29mdCBFZGdlIjt2PSIxMjgiDQpzZWMtY2gtdWEtbW9iaWxlOiA/MA0KVXNlci1BZ2VudDogTW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV2luNjQ7IHg2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzEyOC4wLjAuMCBTYWZhcmkvNTM3LjM2IEVkZy8xMjguMC4wLjANCnNlYy1jaC11YS1wbGF0Zm9ybTogIldpbmRvd3MiDQpBY2NlcHQ6ICovKg0KU2VjLUZldGNoLVNpdGU6IHNhbWUtb3JpZ2luDQpTZWMtRmV0Y2gtTW9kZTogbm8tY29ycw0KU2VjLUZldGNoLURlc3Q6IHNjcmlwdA0KUmVmZXJlcjogaHR0cHM6Ly9kZXYtYm9vbXEucGZsYi5ydS9ncmFmYW5hL2QvY2E1MWFjYWYtOTgwMy00YWQ4LWI1MDctOTIzYjE1MmExY2E5L2NvbW1vbi1kYXNoYm9hcmQtdGRiLTEzP2Zyb209MTcyNDY3NTY3MDYxMSZ0bz0xNzI0Njc5MzkwNjExJnJlZnJlc2g9NXMmdmFyLXRlc3RJZD0xODI2OCZvcmdJZD0xNA0KQWNjZXB0LUVuY29kaW5nOiBnemlwLCBkZWZsYXRlLCB6c3RkDQpBY2NlcHQtTGFuZ3VhZ2U6IHJ1DQpDb29raWU6IGdyYWZhbmFfc2Vzc2lvbl9leHBpcnk9MTcyNDY3NjI5MjsgZ3JhZmFuYV9zZXNzaW9uPWViMDFiYzczMDY4Mzc3ZDAxM2ZiMjE1M2FhMTA0NGQ3OyBib29tcV9hdXRoPWV5SmhiR2NpT2lKU1V6STFOaUlzSW5SNWNDSTZJa3BYVkNKOS5leUpwYzE5dWIzUnBabWxqWVhSbFpDSTZkSEoxWlN3aWRYTmxjbDlwWkNJNk1UZzNOU3dpZFhObGNsOXVZVzFsSWpvaWEyOWZiR1Z6ZVdGQWJXRnBiQzV5ZFNJc0luTmpiM0JsSWpwYkluUnlkWE4wSWl3aWNtVmhaQ0lzSW5keWFYUmxJbDBzSW5WelpYSmZiR0Z1WjNWaFoyVWlPaUpTVlNJc0ltVjRjQ0k2TVRjeU5EY3hPRGN4Tnl3aVlYVjBhRzl5YVhScFpYTWlPbHNpVWs5TVJWOVZVMFZTSWwwc0ltcDBhU0k2SWpnMU1XRmpNVFEyTFRnMk9UZ3ROR0ZqTWkxaE1qa3dMVFkwT1dFeE5tRTBOV0UzTVNJc0ltTnNhV1Z1ZEY5cFpDSTZJbU5zYVdWdWRDSjkuc25PSUFNMVo4d011VWxZUUF1aGFxb0FjYTUtdU9lbUNEYXdIVWxtWHFKS2tvTm9WbzhnUm5kX09YbUgycHJXdzNFSlNqa0pLY0xUVmxraGhacVNaNmd2NnNnNlF1VnVBSEhyZFlFalJlR2dVMWtuNEt3MGVBSWVPdWI2b0FVdWVVNWVwNko0Vl91NDFqeTgzOVJDSjFrUGpYSHRpQVVLVm02SUdWSEdTRkFndlprdmpmcjhPa2VhR0tteVRqVkxuTDVxQUFIbUNHcnRXdU5JaEV0eGx5SDMtelE3TXBEYTNDQ3BpTFhrSHVwZTNwVjJHWmhhR2Nva3g5QU8zS1JBNlBqaVBoYlVlc1pFT2lENThwTGFGYmVENTRBZ3h3SEhpSVV1R3E3V1FJa1ZvQkxRbmhkTjFxcTJQMTh5cE9RLTNmNVd6amdqS2VHTFdRV042RGJwSWlnDQpIb3N0OiBkZXYtYm9vbXEucGZsYi5ydQ0KDQo=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPAllHeaders>
        <HTTPCookies>
          <HTTPHeaderEntity name="grafana_session_expiry" index="0">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>MTcyNDY3NjI5Mg==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="grafana_session" index="1">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>ZWIwMWJjNzMwNjgzNzdkMDEzZmIyMTUzYWExMDQ0ZDc=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="boomq_auth" index="2">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>ZXlKaGJHY2lPaUpTVXpJMU5pSXNJblI1Y0NJNklrcFhWQ0o5LmV5SnBjMTl1YjNScFptbGpZWFJsWkNJNmRISjFaU3dpZFhObGNsOXBaQ0k2TVRnM05Td2lkWE5sY2w5dVlXMWxJam9pYTI5ZmJHVnplV0ZBYldGcGJDNXlkU0lzSW5OamIzQmxJanBiSW5SeWRYTjBJaXdpY21WaFpDSXNJbmR5YVhSbElsMHNJblZ6WlhKZmJHRnVaM1ZoWjJVaU9pSlNWU0lzSW1WNGNDSTZNVGN5TkRjeE9EY3hOeXdpWVhWMGFHOXlhWFJwWlhNaU9sc2lVazlNUlY5VlUwVlNJbDBzSW1wMGFTSTZJamcxTVdGak1UUTJMVGcyT1RndE5HRmpNaTFoTWprd0xUWTBPV0V4Tm1FME5XRTNNU0lzSW1Oc2FXVnVkRjlwWkNJNkltTnNhV1Z1ZENKOS5zbk9JQU0xWjh3TXVVbFlRQXVoYXFvQWNhNS11T2VtQ0Rhd0hVbG1YcUpLa29Ob1ZvOGdSbmRfT1htSDJwcld3M0VKU2prSktjTFRWbGtoaFpxU1o2Z3Y2c2c2UXVWdUFISHJkWUVqUmVHZ1Uxa240S3cwZUFJZU91YjZvQVV1ZVU1ZXA2SjRWX3U0MWp5ODM5UkNKMWtQalhIdGlBVUtWbTZJR1ZIR1NGQWd2Wmt2amZyOE9rZWFHS215VGpWTG5MNXFBQUhtQ0dydFd1TkloRXR4bHlIMy16UTdNcERhM0NDcGlMWGtIdXBlM3BWMkdaaGFHY29reDlBTzNLUkE2UGppUGhiVWVzWkVPaUQ1OHBMYUZiZUQ1NEFneHdISGlJVXVHcTdXUUlrVm9CTFFuaGROMXFxMlAxOHlwT1EtM2Y1V3pqZ2pLZUdMV1FXTjZEYnBJaWc=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
        </HTTPCookies>
      </HTTPHeaders>
    </HTTPRequest>
    <HTTPResponse>
      <contentLenght>19125</contentLenght>
      <HTTPHeaders>
        <HTTPHeaderEntity name="Server" index="0">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>bmdpbng=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Date" index="1">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>TW9uLCAyNiBBdWcgMjAyNCAxMjozNjoxMCBHTVQ=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Content-Type" index="2">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>dGV4dC9qYXZhc2NyaXB0OyBjaGFyc2V0PXV0Zi04</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Content-Length" index="3">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>MTkxMjU=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Connection" index="4">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>a2VlcC1hbGl2ZQ==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Accept-Ranges" index="5">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>Ynl0ZXM=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Cache-Control" index="6">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>cHVibGljLCBtYXgtYWdlPTMxNTM2MDAw</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Last-Modified" index="7">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>V2VkLCAxMSBPY3QgMjAyMyAxNjo0MToxMSBHTVQ=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Strict-Transport-Security" index="8">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>bWF4LWFnZT04NjQwMDs=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPAllHeaders>
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>SFRUUC8xLjEgMjAwIE9LDQpTZXJ2ZXI6IG5naW54DQpEYXRlOiBNb24sIDI2IEF1ZyAyMDI0IDEyOjM2OjEwIEdNVA0KQ29udGVudC1UeXBlOiB0ZXh0L2phdmFzY3JpcHQ7IGNoYXJzZXQ9dXRmLTgNCkNvbnRlbnQtTGVuZ3RoOiAxOTEyNQ0KQ29ubmVjdGlvbjoga2VlcC1hbGl2ZQ0KQWNjZXB0LVJhbmdlczogYnl0ZXMNCkNhY2hlLUNvbnRyb2w6IHB1YmxpYywgbWF4LWFnZT0zMTUzNjAwMA0KTGFzdC1Nb2RpZmllZDogV2VkLCAxMSBPY3QgMjAyMyAxNjo0MToxMSBHTVQNClN0cmljdC1UcmFuc3BvcnQtU2VjdXJpdHk6IG1heC1hZ2U9ODY0MDA7DQoNCg==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPAllHeaders>
      </HTTPHeaders>
      <HTTPBody>
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData></ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPBody>
      <TcpPackets>
        <PacketInfo time="63900984" offset="0" length="316" />
        <PacketInfo time="63901000" offset="316" length="19125" />
      </TcpPackets>
    </HTTPResponse>
  </HTTPTask>
  <HTTPTask id="1019" hostname="dev-boomq.pflb.ru" path="https://dev-boomq.pflb.ru/grafana/public/build/5216.565cbd1aa042f890edf2.js" url="https://dev-boomq.pflb.ru/grafana/public/build/5216.565cbd1aa042f890edf2.js" ip="77.50.236.214" port="443" connectionId="108" origin="ExtraRes" frame="1" startDateTime="2024-08-26T15:36:35.911+03:00" startTime="63901109" endTime="63901109">
    <HTTPRequest method="GET">
      <HTTPHeaders>
        <HTTPHeaderEntity name="sec-ch-ua" index="0">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>IkNocm9taXVtIjt2PSIxMjgiLCAiTm90O0E9QnJhbmQiO3Y9IjI0IiwgIk1pY3Jvc29mdCBFZGdlIjt2PSIxMjgi</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="sec-ch-ua-mobile" index="1">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>PzA=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="User-Agent" index="2">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>TW96aWxsYS81LjAgKFdpbmRvd3MgTlQgMTAuMDsgV2luNjQ7IHg2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzEyOC4wLjAuMCBTYWZhcmkvNTM3LjM2IEVkZy8xMjguMC4wLjA=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="sec-ch-ua-platform" index="3">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>IldpbmRvd3Mi</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Accept" index="4">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>Ki8q</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Sec-Fetch-Site" index="5">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>c2FtZS1vcmlnaW4=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Sec-Fetch-Mode" index="6">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>bm8tY29ycw==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Sec-Fetch-Dest" index="7">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>c2NyaXB0</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Referer" index="8">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>aHR0cHM6Ly9kZXYtYm9vbXEucGZsYi5ydS9ncmFmYW5hL2QvY2E1MWFjYWYtOTgwMy00YWQ4LWI1MDctOTIzYjE1MmExY2E5L2NvbW1vbi1kYXNoYm9hcmQtdGRiLTEzP2Zyb209MTcyNDY3NTY3MDYxMSZ0bz0xNzI0Njc5MzkwNjExJnJlZnJlc2g9NXMmdmFyLXRlc3RJZD0xODI2OCZvcmdJZD0xNA==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Accept-Encoding" index="9">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>Z3ppcCwgZGVmbGF0ZSwgenN0ZA==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Accept-Language" index="10">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>cnU=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Cookie" index="11">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>Z3JhZmFuYV9zZXNzaW9uX2V4cGlyeT0xNzI0Njc2MjkyOyBncmFmYW5hX3Nlc3Npb249ZWIwMWJjNzMwNjgzNzdkMDEzZmIyMTUzYWExMDQ0ZDc7IGJvb21xX2F1dGg9ZXlKaGJHY2lPaUpTVXpJMU5pSXNJblI1Y0NJNklrcFhWQ0o5LmV5SnBjMTl1YjNScFptbGpZWFJsWkNJNmRISjFaU3dpZFhObGNsOXBaQ0k2TVRnM05Td2lkWE5sY2w5dVlXMWxJam9pYTI5ZmJHVnplV0ZBYldGcGJDNXlkU0lzSW5OamIzQmxJanBiSW5SeWRYTjBJaXdpY21WaFpDSXNJbmR5YVhSbElsMHNJblZ6WlhKZmJHRnVaM1ZoWjJVaU9pSlNWU0lzSW1WNGNDSTZNVGN5TkRjeE9EY3hOeXdpWVhWMGFHOXlhWFJwWlhNaU9sc2lVazlNUlY5VlUwVlNJbDBzSW1wMGFTSTZJamcxTVdGak1UUTJMVGcyT1RndE5HRmpNaTFoTWprd0xUWTBPV0V4Tm1FME5XRTNNU0lzSW1Oc2FXVnVkRjlwWkNJNkltTnNhV1Z1ZENKOS5zbk9JQU0xWjh3TXVVbFlRQXVoYXFvQWNhNS11T2VtQ0Rhd0hVbG1YcUpLa29Ob1ZvOGdSbmRfT1htSDJwcld3M0VKU2prSktjTFRWbGtoaFpxU1o2Z3Y2c2c2UXVWdUFISHJkWUVqUmVHZ1Uxa240S3cwZUFJZU91YjZvQVV1ZVU1ZXA2SjRWX3U0MWp5ODM5UkNKMWtQalhIdGlBVUtWbTZJR1ZIR1NGQWd2Wmt2amZyOE9rZWFHS215VGpWTG5MNXFBQUhtQ0dydFd1TkloRXR4bHlIMy16UTdNcERhM0NDcGlMWGtIdXBlM3BWMkdaaGFHY29reDlBTzNLUkE2UGppUGhiVWVzWkVPaUQ1OHBMYUZiZUQ1NEFneHdISGlJVXVHcTdXUUlrVm9CTFFuaGROMXFxMlAxOHlwT1EtM2Y1V3pqZ2pLZUdMV1FXTjZEYnBJaWc=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Host" index="12">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>ZGV2LWJvb21xLnBmbGIucnU=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPAllHeaders>
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>R0VUIGh0dHBzOi8vZGV2LWJvb21xLnBmbGIucnUvZ3JhZmFuYS9wdWJsaWMvYnVpbGQvNTIxNi41NjVjYmQxYWEwNDJmODkwZWRmMi5qcyBIVFRQLzEuMQ0Kc2VjLWNoLXVhOiAiQ2hyb21pdW0iO3Y9IjEyOCIsICJOb3Q7QT1CcmFuZCI7dj0iMjQiLCAiTWljcm9zb2Z0IEVkZ2UiO3Y9IjEyOCINCnNlYy1jaC11YS1tb2JpbGU6ID8wDQpVc2VyLUFnZW50OiBNb3ppbGxhLzUuMCAoV2luZG93cyBOVCAxMC4wOyBXaW42NDsgeDY0KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvMTI4LjAuMC4wIFNhZmFyaS81MzcuMzYgRWRnLzEyOC4wLjAuMA0Kc2VjLWNoLXVhLXBsYXRmb3JtOiAiV2luZG93cyINCkFjY2VwdDogKi8qDQpTZWMtRmV0Y2gtU2l0ZTogc2FtZS1vcmlnaW4NClNlYy1GZXRjaC1Nb2RlOiBuby1jb3JzDQpTZWMtRmV0Y2gtRGVzdDogc2NyaXB0DQpSZWZlcmVyOiBodHRwczovL2Rldi1ib29tcS5wZmxiLnJ1L2dyYWZhbmEvZC9jYTUxYWNhZi05ODAzLTRhZDgtYjUwNy05MjNiMTUyYTFjYTkvY29tbW9uLWRhc2hib2FyZC10ZGItMTM/ZnJvbT0xNzI0Njc1NjcwNjExJnRvPTE3MjQ2NzkzOTA2MTEmcmVmcmVzaD01cyZ2YXItdGVzdElkPTE4MjY4Jm9yZ0lkPTE0DQpBY2NlcHQtRW5jb2Rpbmc6IGd6aXAsIGRlZmxhdGUsIHpzdGQNCkFjY2VwdC1MYW5ndWFnZTogcnUNCkNvb2tpZTogZ3JhZmFuYV9zZXNzaW9uX2V4cGlyeT0xNzI0Njc2MjkyOyBncmFmYW5hX3Nlc3Npb249ZWIwMWJjNzMwNjgzNzdkMDEzZmIyMTUzYWExMDQ0ZDc7IGJvb21xX2F1dGg9ZXlKaGJHY2lPaUpTVXpJMU5pSXNJblI1Y0NJNklrcFhWQ0o5LmV5SnBjMTl1YjNScFptbGpZWFJsWkNJNmRISjFaU3dpZFhObGNsOXBaQ0k2TVRnM05Td2lkWE5sY2w5dVlXMWxJam9pYTI5ZmJHVnplV0ZBYldGcGJDNXlkU0lzSW5OamIzQmxJanBiSW5SeWRYTjBJaXdpY21WaFpDSXNJbmR5YVhSbElsMHNJblZ6WlhKZmJHRnVaM1ZoWjJVaU9pSlNWU0lzSW1WNGNDSTZNVGN5TkRjeE9EY3hOeXdpWVhWMGFHOXlhWFJwWlhNaU9sc2lVazlNUlY5VlUwVlNJbDBzSW1wMGFTSTZJamcxTVdGak1UUTJMVGcyT1RndE5HRmpNaTFoTWprd0xUWTBPV0V4Tm1FME5XRTNNU0lzSW1Oc2FXVnVkRjlwWkNJNkltTnNhV1Z1ZENKOS5zbk9JQU0xWjh3TXVVbFlRQXVoYXFvQWNhNS11T2VtQ0Rhd0hVbG1YcUpLa29Ob1ZvOGdSbmRfT1htSDJwcld3M0VKU2prSktjTFRWbGtoaFpxU1o2Z3Y2c2c2UXVWdUFISHJkWUVqUmVHZ1Uxa240S3cwZUFJZU91YjZvQVV1ZVU1ZXA2SjRWX3U0MWp5ODM5UkNKMWtQalhIdGlBVUtWbTZJR1ZIR1NGQWd2Wmt2amZyOE9rZWFHS215VGpWTG5MNXFBQUhtQ0dydFd1TkloRXR4bHlIMy16UTdNcERhM0NDcGlMWGtIdXBlM3BWMkdaaGFHY29reDlBTzNLUkE2UGppUGhiVWVzWkVPaUQ1OHBMYUZiZUQ1NEFneHdISGlJVXVHcTdXUUlrVm9CTFFuaGROMXFxMlAxOHlwT1EtM2Y1V3pqZ2pLZUdMV1FXTjZEYnBJaWcNCkhvc3Q6IGRldi1ib29tcS5wZmxiLnJ1DQoNCg==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPAllHeaders>
        <HTTPCookies>
          <HTTPHeaderEntity name="grafana_session_expiry" index="0">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>MTcyNDY3NjI5Mg==</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="grafana_session" index="1">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>ZWIwMWJjNzMwNjgzNzdkMDEzZmIyMTUzYWExMDQ0ZDc=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
          <HTTPHeaderEntity name="boomq_auth" index="2">
            <HTTPDataSet>
              <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
                <ActualData>ZXlKaGJHY2lPaUpTVXpJMU5pSXNJblI1Y0NJNklrcFhWQ0o5LmV5SnBjMTl1YjNScFptbGpZWFJsWkNJNmRISjFaU3dpZFhObGNsOXBaQ0k2TVRnM05Td2lkWE5sY2w5dVlXMWxJam9pYTI5ZmJHVnplV0ZBYldGcGJDNXlkU0lzSW5OamIzQmxJanBiSW5SeWRYTjBJaXdpY21WaFpDSXNJbmR5YVhSbElsMHNJblZ6WlhKZmJHRnVaM1ZoWjJVaU9pSlNWU0lzSW1WNGNDSTZNVGN5TkRjeE9EY3hOeXdpWVhWMGFHOXlhWFJwWlhNaU9sc2lVazlNUlY5VlUwVlNJbDBzSW1wMGFTSTZJamcxTVdGak1UUTJMVGcyT1RndE5HRmpNaTFoTWprd0xUWTBPV0V4Tm1FME5XRTNNU0lzSW1Oc2FXVnVkRjlwWkNJNkltTnNhV1Z1ZENKOS5zbk9JQU0xWjh3TXVVbFlRQXVoYXFvQWNhNS11T2VtQ0Rhd0hVbG1YcUpLa29Ob1ZvOGdSbmRfT1htSDJwcld3M0VKU2prSktjTFRWbGtoaFpxU1o2Z3Y2c2c2UXVWdUFISHJkWUVqUmVHZ1Uxa240S3cwZUFJZU91YjZvQVV1ZVU1ZXA2SjRWX3U0MWp5ODM5UkNKMWtQalhIdGlBVUtWbTZJR1ZIR1NGQWd2Wmt2amZyOE9rZWFHS215VGpWTG5MNXFBQUhtQ0dydFd1TkloRXR4bHlIMy16UTdNcERhM0NDcGlMWGtIdXBlM3BWMkdaaGFHY29reDlBTzNLUkE2UGppUGhiVWVzWkVPaUQ1OHBMYUZiZUQ1NEFneHdISGlJVXVHcTdXUUlrVm9CTFFuaGROMXFxMlAxOHlwT1EtM2Y1V3pqZ2pLZUdMV1FXTjZEYnBJaWc=</ActualData>
              </HTTPData>
            </HTTPDataSet>
            <IsExternalData>false</IsExternalData>
          </HTTPHeaderEntity>
        </HTTPCookies>
      </HTTPHeaders>
    </HTTPRequest>
    <HTTPResponse>
      <contentLenght>575457</contentLenght>
      <HTTPHeaders>
        <HTTPHeaderEntity name="Server" index="0">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>bmdpbng=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Date" index="1">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>TW9uLCAyNiBBdWcgMjAyNCAxMjozNjoxMCBHTVQ=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Content-Type" index="2">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>dGV4dC9qYXZhc2NyaXB0OyBjaGFyc2V0PXV0Zi04</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Content-Length" index="3">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>NTc1NDU3</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Connection" index="4">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>a2VlcC1hbGl2ZQ==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Accept-Ranges" index="5">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>Ynl0ZXM=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Cache-Control" index="6">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>cHVibGljLCBtYXgtYWdlPTMxNTM2MDAw</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Last-Modified" index="7">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>V2VkLCAxMSBPY3QgMjAyMyAxNjo0MToxMSBHTVQ=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Strict-Transport-Security" index="8">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>bWF4LWFnZT04NjQwMDs=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPAllHeaders>
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>SFRUUC8xLjEgMjAwIE9LDQpTZXJ2ZXI6IG5naW54DQpEYXRlOiBNb24sIDI2IEF1ZyAyMDI0IDEyOjM2OjEwIEdNVA0KQ29udGVudC1UeXBlOiB0ZXh0L2phdmFzY3JpcHQ7IGNoYXJzZXQ9dXRmLTgNCkNvbnRlbnQtTGVuZ3RoOiA1NzU0NTcNCkNvbm5lY3Rpb246IGtlZXAtYWxpdmUNCkFjY2VwdC1SYW5nZXM6IGJ5dGVzDQpDYWNoZS1Db250cm9sOiBwdWJsaWMsIG1heC1hZ2U9MzE1MzYwMDANCkxhc3QtTW9kaWZpZWQ6IFdlZCwgMTEgT2N0IDIwMjMgMTY6NDE6MTEgR01UDQpTdHJpY3QtVHJhbnNwb3J0LVNlY3VyaXR5OiBtYXgtYWdlPTg2NDAwOw0KDQo=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPAllHeaders>
      </HTTPHeaders>
      <HTTPBody>
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData></ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPBody>
      <TcpPackets>
        <PacketInfo time="63901109" offset="0" length="317" />
        <PacketInfo time="63901109" offset="317" length="575457" />
      </TcpPackets>
    </HTTPResponse>
  </HTTPTask>
</HTTPSnapshot>